{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/linker/table2cypher/Loader.vue?vue&type=style&index=0&id=f0ff90aa&scoped=true&lang=scss&","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/linker/table2cypher/Loader.vue","mtime":1661234517346},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1661232574857},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1661232574959},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1661232574881},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1661232574794},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661232574916}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5teS1lZGl0b3IgewogIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7CiAgY29sb3I6IGJsYWNrOwogIG1heC1oZWlnaHQ6IDQwMHB4OwogIGZvbnQtZmFtaWx5OiBGaXJhIGNvZGUsIEZpcmEgTW9ubywgQ29uc29sYXMsIE1lbmxvLCBDb3VyaWVyLCBtb25vc3BhY2U7CiAgZm9udC1zaXplOiAxNHB4OwogIGxpbmUtaGVpZ2h0OiAxLjU7CiAgcGFkZGluZzogNXB4IDEwcHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQKfQoKICAvKiBvcHRpb25hbCBjbGFzcyBmb3IgcmVtb3ZpbmcgdGhlIG91dGxpbmUgKi8KICAucHJpc20tZWRpdG9yX190ZXh0YXJlYTpmb2N1cyB7CiAgICBvdXRsaW5lOiBub25lOwogIH0K"},{"version":3,"sources":["Loader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Loader.vue","sourceRoot":"src/components/linker/table2cypher","sourcesContent":["<template>\n  <v-card>\n    <v-card-title class=\"headline\">\n      Parsing Script\n    </v-card-title>\n    <v-divider></v-divider>\n    <prism-editor class=\"my-editor\" v-model=\"code\" language=\"html\" :highlight=\"highlighter\" line-numbers></prism-editor>\n    <v-card-actions class=\"mt-5\">\n      <v-spacer></v-spacer>\n      <v-btn\n        text\n        color=\"error\"\n        @click=\"cancelSelect\"\n      >\n        Cancel\n      </v-btn>\n       <v-btn\n        text\n        color=\"primary\"\n        @click=\"confirmSelect\"\n       >\n        Confirm\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport { PrismEditor } from 'vue-prism-editor';\nimport 'vue-prism-editor/dist/prismeditor.min.css'; // import the styles somewhere\n\n// import highlighting library (you can use any library you want just return html string)\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport \"prismjs/themes/prism-tomorrow.css\";\nexport default {\n  components: {\n    PrismEditor\n  },  \n  data(){\n    return {\n      singleSelect: false,\n      selected: [],\n      uploaded_file: null,\n      code: \"function convert(value) {\\n\\n\\n}\"\n    }\n  },\n  methods: {\n    highlighter(code) {\n        return highlight(\n        code,\n        {\n          ...languages['markup'],\n          ...languages['js'],\n          ...languages['css'],\n        },\n        'markup'\n      );\n    },\n    cancelSelect(){\n      this.$emit('loaderAction', {status: 'fail'})\n      this.selected = []\n    },\n    confirmSelect(){\n      console.log(eval(`(${this.code})`)) \n      console.log(typeof eval(`(${this.code})`))\n    }\n  },\n  watch: {\n    uploaded_files(){\n      console.log(this.uploaded_files)\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.my-editor {\n  background-color: #fafafa;\n  color: black;\n  max-height: 400px;\n  font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\n  font-size: 14px;\n  line-height: 1.5;\n  padding: 5px 10px;\n  font-weight: bold\n}\n\n  /* optional class for removing the outline */\n  .prism-editor__textarea:focus {\n    outline: none;\n  }\n</style>"]}]}