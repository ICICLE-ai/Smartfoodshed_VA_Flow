{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/vue-loader@15.10.0_rm23m4wqnartkrat7nvkqiuwja/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/template/index.vue?vue&type=style&index=0&id=6a85fae6&scoped=true&lang=css&","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/template/index.vue","mtime":1660555319260},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/css-loader@3.6.0_webpack@4.46.0/node_modules/css-loader/dist/cjs.js","mtime":1660324595456},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/vue-loader@15.10.0_rm23m4wqnartkrat7nvkqiuwja/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1660324597952},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js","mtime":1660324608116},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/cache-loader@4.1.0_webpack@4.46.0/node_modules/cache-loader/dist/cjs.js","mtime":1660324597580},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/vue-loader@15.10.0_rm23m4wqnartkrat7nvkqiuwja/node_modules/vue-loader/lib/index.js","mtime":1660324597951}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jYXJkLW5hbWUgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZmxleC13cmFwOiB3cmFwOwogIGhlaWdodDogMTAwJTsKfQoKCi5yZXNpemVyIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7Cn0KCi5yZXNpemVyLXIgewogIGN1cnNvcjogY29sLXJlc2l6ZTsKICBoZWlnaHQ6IDEwMCU7CiAgcmlnaHQ6IC0xJTsKICB0b3A6IDA7CiAgd2lkdGg6IDVweDsKfQoKLyogUGxhY2VkIGF0IHRoZSBib3R0b20gc2lkZSAqLwoucmVzaXplci1iIHsKICBib3R0b206IC0xJTsKICBjdXJzb3I6IHJvdy1yZXNpemU7CiAgaGVpZ2h0OiA1cHg7CiAgbGVmdDogMDsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAgPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/template","sourcesContent":["<template>\n  <div>\n    <v-hover v-slot=\"{ hover }\">\n      <v-card :elevation=\"hover ? 12 : 5\" \n        class=\"card-tabular\" \n        @mousedown=\"dragProxy\" \n        outlined \n        :id=\"itemProps.id\"\n        @dblclick=\"dblclickHandler\"\n        @contextmenu=\"rightClickMenuShow\" \n        :style=\"{\n          top: marginTop + 'px',\n          left: marginLeft + 'px',\n          width: `${width}px`,\n          height: `${height}px`,\n          position: 'absolute',\n          'border-radius': styleProps['border-radius'] ? styleProps['border-radius'] : 'none'\n        }\">\n        <slot v-if=\"minimizeStatus\" name=\"minimizeView\">\n          <v-card-text class=\"card-name\">\n            Empty Container\n          </v-card-text>\n        </slot>\n        <slot v-else name=\"fullView\">\n          <v-card-text class=\"card-name\">\n            Empty Container\n          </v-card-text>\n        </slot>\n        <slot name=\"popup\">\n        </slot>\n        <div v-if=\"!disableResizer\" class=\"resizer resizer-r\" @mousedown=\"mouseDownHandler\"></div>\n        <div v-if=\"!disableResizer\" class=\"resizer resizer-b\" @mousedown=\"mouseDownHandler\"></div>\n\n        <v-card-actions>\n          <InoutputBtns\n            :resizingStatus=\"resizingStatus\"\n            :width=\"width\"\n            :height=\"height\"\n            :marginLeft=\"marginLeft\"\n            :marginTop=\"marginTop\"\n            :componentId=\"itemProps.id\"\n            :hover=\"hover\"\n          />\n        </v-card-actions>\n      </v-card>\n    </v-hover>\n    <v-menu \n      v-model=\"showRightClickMenu\" \n      :position-x=\"rightMenuX\" \n      :position-y=\"rightMenuY\" \n      absolute \n      offset-y\n    >\n      <RightClickMenu \n        :vue=\"this\" \n        :container=\"container\" \n        :itemProps=\"itemProps\" \n        store=\"corpus\" \n        :commands=\"commands\"\n        @contextButtonClicked=\"contextButtonClickedHandler\"\n      />\n    </v-menu>\n  </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport RightClickMenu from \"@/components/RightClickMenu\";\nimport InoutputBtns from \"@/components/InoutputBtns\";\nexport default {\n  props: {\n    itemProps: {\n      type: Object,\n      required: true\n    }, \n    contextCommands: {\n      type: Array, \n      required: false, \n    }, \n    styleProps: {\n      type: Object,\n      required: false, \n    },\n    'disable-resizer': {\n      type: Boolean,\n      required: false\n    }\n  },\n  data() {\n    return {\n      dataStatus: false,\n      resizeX: undefined,\n      resizeY: undefined,\n      width: 300,\n      height: 300,\n      resizeWidth: 0, //\n      resizeHeight: 0,\n      marginTop: 0,\n      marginLeft: 0,\n      topMargin: window.innerHeight / 2,\n      leftMargin: window.innerWidth / 2,\n      resizingStatus: false,\n      showRightClickMenu: false,\n      rightMenuX: 0,\n      rightMenuY: 0,\n      loadingStatus: undefined,\n      items: [{ title: \"Remove node\" }],\n      container: \".documents-components-list\",\n      minimize: false, \n    };\n  },\n  methods: {\n\n    dragProxy(e) {\n      this.dragStartHandler(e)\n    },\n\n    moveAt(posX, posY) {\n      const comp = document.querySelector(`#${this.itemProps.id}`)\n      this.marginTop = posY\n      this.marginLeft = posX\n    },\n    dblclickHandler() {\n      this.$emit('dblclick')\n    },\n    dragStartHandler(e) {\n      if (e.buttons == 1 && this.draggable) {\n        const that = this\n        const comp = document.querySelector(`#${this.itemProps.id}`)\n        const initialLeft = parseInt(comp.style.left.split('px')[0]) - e.clientX\n        const initialTop = parseInt(comp.style.top.split('px')[0]) - e.clientY\n        function onMouseMove(event) {\n          that.moveAt(event.pageX + initialLeft, event.pageY + initialTop)\n        }\n        document.addEventListener(\"mousemove\", onMouseMove)\n        comp.onmouseup = function () {\n          document.removeEventListener('mousemove', onMouseMove)\n          comp.onmouseup = null\n        }\n      }\n    },\n\n    mouseDownHandler(e) {\n      // this.$store.dispatch('changeResizerStatus', true);\n      this.resizeX = e.clientX;\n      this.resizeY = e.clientY;\n      document.addEventListener(\"mousemove\", this.mouseMoveHandler);\n      document.addEventListener(\"mouseup\", this.mouseUpHandler);\n      this.resizingStatus = true;\n    },\n\n    mouseMoveHandler(e) {\n      const dx = e.clientX - this.resizeX;\n      const dy = e.clientY - this.resizeY;\n      this.width = this.resizeWidth + dx;\n      this.height = this.resizeHeight + dy;\n    },\n\n    mouseUpHandler(e) {\n      this.resizeWidth = this.width;\n      this.resizeHeight = this.height;\n      document.removeEventListener(\"mousemove\", this.mouseMoveHandler);\n      document.removeEventListener(\"mouseup\", this.mouseUpHandler);\n      // this.$store.dispatch('changeResizerStatus', false)\n      this.resizingStatus = false;\n    },\n\n    rightClickMenuShow(e) {\n      e.preventDefault();\n      this.showRightClickMenu = true;\n      this.rightMenuX = e.clientX;\n      this.rightMenuY = e.clientY;\n    },\n    \n    contextButtonClickedHandler(button) {\n      this.$emit('contextButtonClicked', button)\n    }\n\n  },\n\n  created() {\n    // Initialize initial position\n    console.log('check this')\n    console.log(this.styleProps)\n    this.styleProps.top \n      ? this.marginTop = +this.styleProps.top.split('px')[0]\n      : this.marginTop = 50\n    this.styleProps.left\n      ? this.marginLeft = +this.styleProps.left.split('px')[0]\n      : this.marginLeft = 100\n    this.styleProps.width \n      ? this.width = +this.styleProps.width.split('px')[0]\n      : -1 \n    this.styleProps.height\n      ? this.height = +this.styleProps.height.split('px')[0]\n      : -1\n\n    this.resizeWidth = this.width;\n    this.resizeHeight = this.height;\n    console.log(this.disableResizer)\n  },\n\n  computed: {\n    // Determine Whether the component is draggable\n    // Not allowed when resizing and drawling link\n    ...mapState([\"drawLink\", \"resizer\"]),\n    draggable() {\n      return !(this.drawLink || this.resizingStatus);\n    },\n    minimizeStatus() {\n      // this.$slots.minimizeView exist \n      return this.$slots.minimizeView && this.minimize \n    }, \n    commands() {\n      const rightClickCommands = {icon: \"mdi-window-minimize\", command: \"Minimize\"}\n      let commands = [] \n      this.$slots.minimizeView && this.$slots.fullView \n        ? commands.push(rightClickCommands)\n        : -1 \n      commands = this.contextCommands\n        ? commands.concat(this.contextCommands)\n        : commands\n      console.log('commands!!!')\n      console.log(commands)\n      return commands\n    }, \n  },\n\n  components: {\n    RightClickMenu, \n    InoutputBtns\n  },\n\n  watch: {\n  \n  },\n};\n</script>\n\n<style scoped>\n.card-name {\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n}\n\n\n.resizer {\n  position: absolute;\n}\n\n.resizer-r {\n  cursor: col-resize;\n  height: 100%;\n  right: -1%;\n  top: 0;\n  width: 5px;\n}\n\n/* Placed at the bottom side */\n.resizer-b {\n  bottom: -1%;\n  cursor: row-resize;\n  height: 5px;\n  left: 0;\n  width: 100%;\n}\n</style>                                                                   "]}]}