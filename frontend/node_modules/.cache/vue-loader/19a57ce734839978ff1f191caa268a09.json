{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/loader/corpus/Loader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/loader/corpus/Loader.vue","mtime":1666790787279},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661232574882},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661232574916}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3VjaERCIGZyb20gJ3BvdWNoZGInCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzaW5nbGVTZWxlY3Q6IGZhbHNlLAogICAgICBzZWxlY3RlZDogW10sCiAgICAgIGhlYWRlcnM6IFsKICAgICAgICB7CiAgICAgICAgICB0ZXh0OiAnVGFibGUnLAogICAgICAgICAgYWxpZ246ICdzdGFydCcsCiAgICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgICB2YWx1ZTogJ3RhYmxlJywKICAgICAgICB9LAogICAgICAgIHsgdGV4dDogJ1NpemUnLCB2YWx1ZTogJ3NpemUnIH0sCiAgICAgICAgeyB0ZXh0OiAnTGFzdCB1c2UnLCB2YWx1ZTogJ2xhc3RfdGltZScgfSwKICAgICAgICB7IHRleHQ6ICdVcGxvYWRlZCBkYXRlJywgdmFsdWU6ICd1cGxvYWRfZGF0ZScgfSwKICAgICAgICB7IHRleHQ6ICdBY3Rpb25zJywgdmFsdWU6ICdhY3Rpb25zJywgc29ydGFibGU6IGZhbHNlIH0sCiAgICAgIF0sCiAgICAgIHRhYmxlRGF0YTogWwogICAgICAgIAogICAgICAgIHsKICAgICAgICAgIHRhYmxlOidjYXJfdGVtcGxhdGUuY3N2JywKICAgICAgICAgIHNpemU6JzM1NUtCJywKICAgICAgICAgIGlkOiAnMicsCiAgICAgICAgICBsYXN0X3RpbWU6ICJUb2RheSIsCiAgICAgICAgICB1cGxvYWRfZGF0ZTogJzIwMjItMTAtMDYnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0YWJsZTonaXJpcy5jc3YnLAogICAgICAgICAgc2l6ZTonNEtCJywKICAgICAgICAgIGlkOiAnMicsCiAgICAgICAgICBsYXN0X3RpbWU6ICJUb2RheSIsCiAgICAgICAgICB1cGxvYWRfZGF0ZTogJzIwMjItMTAtMDYnCiAgICAgICAgfQogICAgICBdLAogICAgICBkYjogbmV3IFBvdWNoREIoInRlc3RfZGIiKSwKICAgICAgcmVzdWx0czpbXQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVhZGNzdmZpbGUocmVhZGVyLGZpbGUpewogICAgICB2YXIgdGhhdCA9IHRoaXMKICAgICAgY29uc3QgcmVzID0gbmV3IFByb21pc2UoKHJlc29sdmUscmVqZWN0KT0+ewogICAgICAgIHJlYWRlci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJyxmdW5jdGlvbiBnZXQoKXsKICAgICAgICAgIC8vY29uc29sZS5sb2cocmVhZGVyKQogICAgICAgICAgY29uc3QgZCA9IHJlYWRlci5yZXN1bHQKICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBkLnNsaWNlKDAsZC5pbmRleE9mKCJcbiIpKS5yZXBsYWNlKCdccicsICcnKS5zcGxpdCgnLCcpCiAgICAgICAgICBjb25zdCBxID0gZC5zbGljZShkLmluZGV4T2YoIlxuIikgKyAxKS5zcGxpdCgiXG4iKQogICAgICAgICAgY29uc3Qgcm93cyA9IFtdOwogICAgICAgICAgZm9yKGxldCBpPTA7aTxPYmplY3Qua2V5cyhxKS5sZW5ndGg7aSsrKXsgLy9yZW1vdmluZyBhbGwgXHIgZnJvbSByb3dzCiAgICAgICAgICAgIHJvd3MucHVzaChxW2ldLnJlcGxhY2UoJ1xyJywnJykpCiAgICAgICAgICB9CiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJvd3MpCiAgICAgICAgICBjb25zdCBhcnIgPSByb3dzLm1hcChmdW5jdGlvbihyb3cpIHsKICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IHJvdy5zcGxpdCgnLCcpOwogICAgICAgICAgY29uc3QgZWwgID0gaGVhZGVycy5yZWR1Y2UoZnVuY3Rpb24ob2JqZWN0LGhlYWRlcixpbmRleCl7CiAgICAgICAgICAgIG9iamVjdFtoZWFkZXJdID0gdmFsdWVzW2luZGV4XTsKICAgICAgICAgICAgcmV0dXJuIG9iamVjdAogICAgICAgICAgfSx7fSk7CiAgICAgICAgICByZXR1cm4gZWwKICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmxvZyhhcnIpCiAgICAgICAgLy8gY29uc3QgdGV4dCA9IEpTT04uc3RyaW5naWZ5KGFycikKICAgICAgICAvLyByZXNvbHZlKHRleHQpCiAgICAgICAgdGhhdC4kZW1pdCgnbG9hZGVyQWN0aW9uJywge3N0YXR1czogJ2xvY2FsJywgZGF0YTogYXJyfSkKICAgICAgICByZWFkZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsZ2V0KQogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpCiAgICAgIC8vY29uc29sZS5sb2cocmVzKQogICAgICAKICAgICAgLy8gcmV0dXJuIHJlcwogIH0sCiAgICBhc3luYyB1cGxvYWRmaWxlcyh3KXsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKQogICAgICAvLyB0aGlzLnJlc3VsdHMuc3BsaWNlKDApCiAgICAgIGlmKHdbInR5cGUiXT09InRleHQvY3N2Iil7CiAgICAgICAgYXdhaXQgdGhpcy5yZWFkY3N2ZmlsZShyZWFkZXIsIHcpCiAgICAgIH0KICAgICAgLy8gfSkKICAgICAgLy8gY29uc29sZS5sb2codGhpcy5yZXN1bHRzKQogICAgfSwKICAgIGNhbmNlbFNlbGVjdCgpewogICAgICB0aGlzLiRlbWl0KCdsb2FkZXJBY3Rpb24nLCB7c3RhdHVzOiAnZmFpbCd9KQogICAgICB0aGlzLnNlbGVjdGVkID0gW10KICAgIH0sCiAgICBjb25maXJtU2VsZWN0KCl7CiAgICAgIGlmKHRoaXMuc2VsZWN0ZWQubGVuZ3RoID4gMCl7CiAgICAgICAgdGhpcy4kZW1pdCgnbG9hZGVyQWN0aW9uJywge3N0YXR1czogJ2V4aXN0aW5nJywgc2VsZWN0ZWQ6IHRoaXMuc2VsZWN0ZWRbMF19KQogICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBbXQogICAgICB9ZWxzZXsKICAgICAgICB0aGlzLmNhbmNlbFNlbGVjdCgpCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["Loader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Loader.vue","sourceRoot":"src/components/loader/corpus","sourcesContent":["<template>\n  <v-card>\n    <v-card-title class=\"headline\">\n      Corpus\n    </v-card-title>\n    <v-divider></v-divider>\n\n    <v-card-actions class=\"mt-5\">\n      <v-row>\n        <v-col cols=\"12\">      \n          <v-file-input\n            @change=\"uploadfiles\"\n            label=\"Upload your corpus data\"\n            outlined\n            dense\n            full-width\n          ></v-file-input>\n        </v-col>\n      </v-row>\n    </v-card-actions>\n    \n    <v-card-title class=\"headline\">\n      Existing Corpus\n    </v-card-title>\n    <template>\n      <v-data-table\n      v-model=\"selected\"\n      :headers=\"headers\"\n      :items=\"tableData\"\n      :single-select=\"true\"\n      item-key=\"table\"\n      show-select\n      class=\"elevation-1\"\n      >\n        <template v-slot:item.actions=\"{ item }\">\n          <v-icon\n            small\n            class=\"mr-2\"\n            \n          >\n            mdi-pencil\n          </v-icon>\n          <v-icon\n            small\n            \n          >\n            mdi-delete\n          </v-icon>\n        </template>\n      </v-data-table>\n    </template>\n    <v-card-actions class=\"mt-5\">\n      <v-spacer></v-spacer>\n      <v-btn\n        text\n        color=\"error\"\n        @click=\"cancelSelect\"\n      >\n        Cancel\n      </v-btn>\n       <v-btn\n        text\n        color=\"primary\"\n        @click=\"confirmSelect\"\n       >\n        Confirm\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport PouchDB from 'pouchdb'\nexport default {\n  data(){\n    return {\n      singleSelect: false,\n      selected: [],\n      headers: [\n        {\n          text: 'Table',\n          align: 'start',\n          sortable: false,\n          value: 'table',\n        },\n        { text: 'Size', value: 'size' },\n        { text: 'Last use', value: 'last_time' },\n        { text: 'Uploaded date', value: 'upload_date' },\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      tableData: [\n        \n        {\n          table:'car_template.csv',\n          size:'355KB',\n          id: '2',\n          last_time: \"Today\",\n          upload_date: '2022-10-06'\n        },\n        {\n          table:'iris.csv',\n          size:'4KB',\n          id: '2',\n          last_time: \"Today\",\n          upload_date: '2022-10-06'\n        }\n      ],\n      db: new PouchDB(\"test_db\"),\n      results:[]\n    }\n  },\n  methods: {\n    readcsvfile(reader,file){\n      var that = this\n      const res = new Promise((resolve,reject)=>{\n        reader.addEventListener('load',function get(){\n          //console.log(reader)\n          const d = reader.result\n          const headers = d.slice(0,d.indexOf(\"\\n\")).replace('\\r', '').split(',')\n          const q = d.slice(d.indexOf(\"\\n\") + 1).split(\"\\n\")\n          const rows = [];\n          for(let i=0;i<Object.keys(q).length;i++){ //removing all \\r from rows\n            rows.push(q[i].replace('\\r',''))\n          }\n          //console.log(rows)\n          const arr = rows.map(function(row) {\n          const values = row.split(',');\n          const el  = headers.reduce(function(object,header,index){\n            object[header] = values[index];\n            return object\n          },{});\n          return el\n        });\n        console.log(arr)\n        // const text = JSON.stringify(arr)\n        // resolve(text)\n        that.$emit('loaderAction', {status: 'local', data: arr})\n        reader.removeEventListener('load',get)\n        })\n      })\n      reader.readAsText(file)\n      //console.log(res)\n      \n      // return res\n  },\n    async uploadfiles(w){\n      const reader = new FileReader()\n      // this.results.splice(0)\n      if(w[\"type\"]==\"text/csv\"){\n        await this.readcsvfile(reader, w)\n      }\n      // })\n      // console.log(this.results)\n    },\n    cancelSelect(){\n      this.$emit('loaderAction', {status: 'fail'})\n      this.selected = []\n    },\n    confirmSelect(){\n      if(this.selected.length > 0){\n        this.$emit('loaderAction', {status: 'existing', selected: this.selected[0]})\n        this.selected = []\n      }else{\n        this.cancelSelect()\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>"]}]}