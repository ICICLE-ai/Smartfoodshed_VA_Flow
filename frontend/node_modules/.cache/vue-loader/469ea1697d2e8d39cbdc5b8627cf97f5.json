{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue","mtime":1664228721951},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIE5lbzRqZDMgZnJvbSAnQC9qcy9OZW80akQzLmpzJwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMycKaW1wb3J0ICogYXMgZDNMYXNzbyBmcm9tICdkMy1sYXNzbycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIHByb3BzOiBbJ0cnLCdoZWlnaHQnLCAnd2lkdGgnLCdzZWxlY3RlZEZpbHRlcnMnXSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIGxhc3NvU3RhdHVzOiBmYWxzZQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCl7CiAgICAgICAgd2luZG93WydkMyddID0gZDMKICAgIH0sCiAgICB3YXRjaDp7CiAgICAgICAgRzogZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpewogICAgICAgICAgICB0aGlzLmRyYXcoKQogICAgICAgIH0gCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGxhc3NvVG9nZ2xlSGFuZGxlcih2YWwpewogICAgICAgICAgICBjb25zb2xlLmxvZygnbGFzc28nLCB2YWwpCiAgICAgICAgICAgIGlmKHZhbCl7CiAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVab29tKCkKICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlTGFzc28oKQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIC8vIGN1cnJlbnQgaXMgem9vbSAKICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZUxhc3NvKCkKICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlWm9vbVBhbigpCiAgICAgICAgICAgIH0KICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxhc3NvU3RhdHVzLCB0aGlzLnpvb21QYW5TdGF0dXMpCiAgICAgICAgCiAgICAgICAgfSwKICAgICAgICBlbmFibGVab29tUGFuKCl7CiAgICAgICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KCcjZGl2X2dyYXBoJykuc2VsZWN0KCJzdmciKSAKICAgICAgICBzdmcuY2FsbChkMy56b29tKCkub24oJ3pvb20nLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciBzY2FsZSA9IGQzLmV2ZW50LnRyYW5zZm9ybS5rLAogICAgICAgICAgICB0cmFuc2xhdGUgPSBbZDMuZXZlbnQudHJhbnNmb3JtLngsIGQzLmV2ZW50LnRyYW5zZm9ybS55XQogICAgICAgICAgICAvLyBjb25zb2xlLmxvZygxKQogICAgICAgICAgICBjb25zdCBnID0gc3ZnLnNlbGVjdCgiZyIpCiAgICAgICAgICAgIGcuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgdHJhbnNsYXRlWzBdICsgJywgJyArIHRyYW5zbGF0ZVsxXSArICcpIHNjYWxlKCcgKyBzY2FsZSArICcpJykKICAgICAgICB9KSkKICAgICAgICAub24oJ2RibGNsaWNrLnpvb20nLCBudWxsKQogICAgICAgIH0sCiAgICAgICAgZGlzYWJsZUxhc3NvKCkgewogICAgICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdCgnI2Rpdl9ncmFwaCcpLnNlbGVjdCgic3ZnIikgCiAgICAgICAgc3ZnLm9uKCIuZHJhZ3N0YXJ0IiwgbnVsbCk7CiAgICAgICAgc3ZnLm9uKCIuZHJhZyIsIG51bGwpOwogICAgICAgIHN2Zy5vbigiLmRyYWdlbmQiLCBudWxsKTsKICAgICAgICB9LCAKICAgICAgICBlbmFibGVMYXNzbygpewogICAgICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdCgnI2Rpdl9ncmFwaCcpLnNlbGVjdCgic3ZnIikKICAgICAgICB2YXIgY2lyY2xlc19xdWVzdGlvbiA9IHN2Zy5zZWxlY3RBbGwoJy5vdXRsaW5lJykKICAgICAgICBsZXQgdGhhdCA9IHRoaXMKICAgICAgICB2YXIgbGFzc29fc3RhcnQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKDExMSkKICAgICAgICAgICAgbGFzc28uaXRlbXMoKQogICAgICAgICAgICAuYXR0cignZmlsbCcsICJncmVlbiIpCiAgICAgICAgICAgIC5jbGFzc2VkKCdub3RfcG9zc2libGUnLCB0cnVlKQogICAgICAgICAgICAuY2xhc3NlZCgnc2VsZWN0ZWQnLCBmYWxzZSkKICAgICAgICB9CiAgICAgICAgdmFyIGxhc3NvX2RyYXcgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIC8vIFN0eWxlIHRoZSBwb3NzaWJsZSBkb3RzCiAgICAgICAgICAgIGxhc3NvLnBvc3NpYmxlSXRlbXMoKQogICAgICAgICAgICAuY2xhc3NlZCgnbm90X3Bvc3NpYmxlJywgZmFsc2UpCiAgICAgICAgICAgIC5jbGFzc2VkKCdwb3NzaWJsZScsIHRydWUpCgogICAgICAgICAgICAvLyBTdHlsZSB0aGUgbm90IHBvc3NpYmxlIGRvdAogICAgICAgICAgICBsYXNzby5ub3RQb3NzaWJsZUl0ZW1zKCkKICAgICAgICAgICAgLmNsYXNzZWQoJ25vdF9wb3NzaWJsZScsIHRydWUpCiAgICAgICAgICAgIC5jbGFzc2VkKCdwb3NzaWJsZScsIGZhbHNlKQogICAgICAgIH0KICAgICAgICB2YXIgbGFzc29fZW5kID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBsYXNzby5pdGVtcygpCiAgICAgICAgICAgIC5jbGFzc2VkKCdub3RfcG9zc2libGUnLCBmYWxzZSkKICAgICAgICAgICAgLmNsYXNzZWQoJ3Bvc3NpYmxlJywgZmFsc2UpCgogICAgICAgICAgICBsYXNzby5zZWxlY3RlZEl0ZW1zKCkKICAgICAgICAgICAgLnN0eWxlKCdzdHJva2UnLCdyZWQnKQogICAgICAgICAgICAuY2xhc3NlZCgnc2VsZWN0ZWQnLCB0cnVlKQogICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ29udCddLnNwbGljZSgwLCB0aGF0LnNlbGVjdGVkRW50aXRpZXMubGVuZ3RoKQogICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ3ZvY2FiJ10uc3BsaWNlKDAsIHRoYXQuc2VsZWN0ZWRFbnRpdGllcy5sZW5ndGgpCiAgICAgICAgICAgIC8vIHRoYXQuc2VsZWN0ZWRSZWxhdGlvbnMuc3BsaWNlKDAsIHRoYXQuc2VsZWN0ZWRSZWxhdGlvbnMubGVuZ3RoKSAKICAgICAgICAgICAgbGFzc28uc2VsZWN0ZWRJdGVtcygpLmVhY2goZnVuY3Rpb24oZCl7CiAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5ub2RlTmFtZSAKICAgICAgICAgICAgY29uc29sZS5sb2coZCkKICAgICAgICAgICAgaWYoZC50eXBlPT0ibm9kZSIpewogICAgICAgICAgICAgICAgaWYoZC52b2NhYil7CiAgICAgICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ3ZvY2FiJ10ucHVzaChkLmlkKQogICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ29udCddLnB1c2goZC5pZCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGF0LnNlbGVjdGVkRW50aXRpZXMpCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICAgIHZhciBsYXNzbyA9IGQzTGFzc28ubGFzc28oKQogICAgICAgICAgICAuY2xvc2VQYXRoU2VsZWN0KHRydWUpCiAgICAgICAgICAgIC5jbG9zZVBhdGhEaXN0YW5jZSgxMDApCiAgICAgICAgICAgIC5pdGVtcyhjaXJjbGVzX3F1ZXN0aW9uKQogICAgICAgICAgICAudGFyZ2V0QXJlYShzdmcpCiAgICAgICAgICAgIC5vbignc3RhcnQnLCBsYXNzb19zdGFydCkKICAgICAgICAgICAgLm9uKCdkcmF3JywgbGFzc29fZHJhdykKICAgICAgICAgICAgLm9uKCdlbmQnLCBsYXNzb19lbmQpCgogICAgICAgIHN2Zy5jYWxsKGxhc3NvKQogICAgICAgIH0sIAogICAgICAgIGRpc2FibGVab29tKCkgewogICAgICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdCgnI2Rpdl9ncmFwaCcpLnNlbGVjdCgic3ZnIikgCiAgICAgICAgc3ZnLm9uKCcuem9vbScsIG51bGwpCiAgICAgICAgfSwKICAgICAgICB0b2dnbGVab29tUGFuTGFzc28oKXsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxhc3NvU3RhdHVzLCB0aGlzLnpvb21QYW5TdGF0dXMpCiAgICAgICAgdGhpcy56b29tUGFuU3RhdHVzID0gIXRoaXMuem9vbVBhblN0YXR1cyAKICAgICAgICB0aGlzLmxhc3NvU3RhdHVzID0gIXRoaXMubGFzc29TdGF0dXMKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxhc3NvU3RhdHVzLCB0aGlzLnpvb21QYW5TdGF0dXMpCiAgICAgICAgfSwgCiAgICAgICAgY2hhbmdlRmlsdGVycyh2YWwpewogICAgICAgIGNvbnNvbGUubG9nKHZhbCkKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNlbGVjdGVkRmlsdGVycykKICAgICAgICB9LAogICAgICAgIGRyYXcoKXsKICAgICAgICB2YXIgdGhhdCA9IHRoaXMKICAgICAgICB2YXIgbmVvNGpkMyA9IE5lbzRqZDMuZGVmYXVsdCgnI2Rpdl9ncmFwaCcsIHsKICAgICAgICAgICAgbmVvNGpEYXRhOiB0aGlzLkcsCiAgICAgICAgICAgIG5vZGVSYWRpdXM6IDMwLAogICAgICAgICAgICBpbmZvUGFuZWw6IGZhbHNlLAogICAgICAgICAgICBvbk5vZGVDbGljazogZnVuY3Rpb24ocmVsKXsKICAgICAgICAgICAgICAgIHRoYXQuJGVtaXQoJ29uLW5vZGUtY2xpY2stZXZlbnQnLCByZWwpCiAgICAgICAgICAgICAgICAvLyBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh0aGF0LiRyZWZzKSl7CiAgICAgICAgICAgICAgICAvLyB0aGF0LiRuZXh0VGljaygoKSA9PiB2YWx1ZVswXS5ibHVyKCkpCiAgICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgICAvLyB0aGF0LiRuZXh0VGljaygoKSA9PiB0aGF0LiRyZWZzWydmaWx0ZXItJytyZWwuaWRdWzBdLmZvY3VzKCkpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgb25SZWxhdGlvbnNoaXBDbGljazogZnVuY3Rpb24ocmVsKXsKICAgICAgICAgICAgICAgIHRoYXQuY29udGVudCA9ICIiCiAgICAgICAgICAgICAgICB0aGF0LnJlbGF0aW9ucyA9IFtdCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2xpY2sgb24gcmVsYXRpb24nLCByZWwpCiAgICAgICAgICAgICAgICB0aGF0LmRpYWxvZ1Zpc2libGUgPSB0cnVlCiAgICAgICAgICAgICAgICB2YXIgcmVsYXRpb25zID0gcmVsWydwcm9wZXJ0aWVzJ10KICAgICAgICAgICAgICAgIHZhciBsZW5ndGggPSBPYmplY3Qua2V5cyhyZWxhdGlvbnMpLmxlbmd0aAogICAgICAgICAgICAgICAgdGhhdC5jb250ZW50ICs9ICJUaGVyZSBpcyAoYXJlKSAiICsgbGVuZ3RoLnRvU3RyaW5nKCkgKyAiIHR5cGUocykgb2YgbGlua3MgZnJvbSAiICsgcmVsWydzdGFydE5vZGUnXSArICcgdG8gJyArIHJlbFsnZW5kTm9kZSddKydcbicgCiAgICAgICAgICAgICAgICB0aGF0LmNvbnRlbnQgKz0gIlRoZSB0eXBlcyBjb250YWluOiAiICsgJ1xuJwogICAgICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocmVsYXRpb25zKSkgewogICAgICAgICAgICAgICAgdGhhdC5yZWxhdGlvbnMucHVzaChrZXkpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIHRoaXMubmVvNGpkMyA9IG5lbzRqZDMKICAgICAgICBpZiAodGhhdC5sYXNzb1N0YXR1cykgewogICAgICAgICAgICB0aGF0LmRpc2FibGVab29tKCkKICAgICAgICAgICAgdGhhdC5lbmFibGVMYXNzbygpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhhdC5kaXNhYmxlTGFzc28oKSAKICAgICAgICAgICAgdGhhdC5lbmFibGVab29tUGFuKCkKICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["KGViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"KGViewer.vue","sourceRoot":"src/components/analyzer/ontparser","sourcesContent":["<template>\n    <div>\n        <v-row>\n            <v-switch\n                v-model=\"lassoStatus\"\n                inset\n                @change=\"lassoToggleHandler\"\n                :label=\"`Lasso: ${lassoStatus.toString()}`\"\n                ></v-switch>\n        </v-row>\n        <v-row>\n            <div id=\"div_graph\" class=\"fullHeight\" :style=\"{'height': height, 'width': width, 'float': 'right'}\"></div>\n        </v-row>\n    </div>\n</template>\n\n<script>\nimport * as Neo4jd3 from '@/js/Neo4jD3.js'\nimport * as d3 from 'd3'\nimport * as d3Lasso from 'd3-lasso'\n\nexport default {\n    props: ['G','height', 'width','selectedFilters'],\n    data(){\n        return{\n            lassoStatus: false\n        }\n    },\n    created(){\n        window['d3'] = d3\n    },\n    watch:{\n        G: function(newVal, oldVal){\n            this.draw()\n        } \n    },\n    methods: {\n        lassoToggleHandler(val){\n            console.log('lasso', val)\n            if(val){\n                this.disableZoom()\n                this.enableLasso()\n            }else{\n                // current is zoom \n                this.disableLasso()\n                this.enableZoomPan()\n            }\n        // console.log(this.lassoStatus, this.zoomPanStatus)\n        \n        },\n        enableZoomPan(){\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.call(d3.zoom().on('zoom', function () {\n            var scale = d3.event.transform.k,\n            translate = [d3.event.transform.x, d3.event.transform.y]\n            // console.log(1)\n            const g = svg.select(\"g\")\n            g.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')')\n        }))\n        .on('dblclick.zoom', null)\n        },\n        disableLasso() {\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.on(\".dragstart\", null);\n        svg.on(\".drag\", null);\n        svg.on(\".dragend\", null);\n        }, \n        enableLasso(){\n        const svg = d3.select('#div_graph').select(\"svg\")\n        var circles_question = svg.selectAll('.outline')\n        let that = this\n        var lasso_start = function () {\n            // console.log(111)\n            lasso.items()\n            .attr('fill', \"green\")\n            .classed('not_possible', true)\n            .classed('selected', false)\n        }\n        var lasso_draw = function () {\n            // Style the possible dots\n            lasso.possibleItems()\n            .classed('not_possible', false)\n            .classed('possible', true)\n\n            // Style the not possible dot\n            lasso.notPossibleItems()\n            .classed('not_possible', true)\n            .classed('possible', false)\n        }\n        var lasso_end = function () {\n            lasso.items()\n            .classed('not_possible', false)\n            .classed('possible', false)\n\n            lasso.selectedItems()\n            .style('stroke','red')\n            .classed('selected', true)\n            that.selectedEntities['ont'].splice(0, that.selectedEntities.length)\n            that.selectedEntities['vocab'].splice(0, that.selectedEntities.length)\n            // that.selectedRelations.splice(0, that.selectedRelations.length) \n            lasso.selectedItems().each(function(d){\n            const label = this.nodeName \n            console.log(d)\n            if(d.type==\"node\"){\n                if(d.vocab){\n                that.selectedEntities['vocab'].push(d.id)\n                }else{\n                that.selectedEntities['ont'].push(d.id)\n                }\n            }\n            console.log(that.selectedEntities)\n            })\n        }\n        var lasso = d3Lasso.lasso()\n            .closePathSelect(true)\n            .closePathDistance(100)\n            .items(circles_question)\n            .targetArea(svg)\n            .on('start', lasso_start)\n            .on('draw', lasso_draw)\n            .on('end', lasso_end)\n\n        svg.call(lasso)\n        }, \n        disableZoom() {\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.on('.zoom', null)\n        },\n        toggleZoomPanLasso(){\n        console.log(this.lassoStatus, this.zoomPanStatus)\n        this.zoomPanStatus = !this.zoomPanStatus \n        this.lassoStatus = !this.lassoStatus\n        console.log(this.lassoStatus, this.zoomPanStatus)\n        }, \n        changeFilters(val){\n        console.log(val)\n        console.log(this.selectedFilters)\n        },\n        draw(){\n        var that = this\n        var neo4jd3 = Neo4jd3.default('#div_graph', {\n            neo4jData: this.G,\n            nodeRadius: 30,\n            infoPanel: false,\n            onNodeClick: function(rel){\n                that.$emit('on-node-click-event', rel)\n                // for (const [key, value] of Object.entries(that.$refs)){\n                // that.$nextTick(() => value[0].blur())\n                // }\n                // that.$nextTick(() => that.$refs['filter-'+rel.id][0].focus())\n                \n            },\n            onRelationshipClick: function(rel){\n                that.content = \"\"\n                that.relations = []\n                console.log('click on relation', rel)\n                that.dialogVisible = true\n                var relations = rel['properties']\n                var length = Object.keys(relations).length\n                that.content += \"There is (are) \" + length.toString() + \" type(s) of links from \" + rel['startNode'] + ' to ' + rel['endNode']+'\\n' \n                that.content += \"The types contain: \" + '\\n'\n                for (const [key, value] of Object.entries(relations)) {\n                that.relations.push(key)\n                }\n            }\n        })\n        this.neo4jd3 = neo4jd3\n        if (that.lassoStatus) {\n            that.disableZoom()\n            that.enableLasso()\n        } else {\n            that.disableLasso() \n            that.enableZoomPan()\n        }\n        }\n    }\n}\n</script>\n"]}]}