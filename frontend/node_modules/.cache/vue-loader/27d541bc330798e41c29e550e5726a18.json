{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/loader/corpus/Loader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/loader/corpus/Loader.vue","mtime":1665082966243},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3VjaERCIGZyb20gJ3BvdWNoZGInCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzaW5nbGVTZWxlY3Q6IGZhbHNlLAogICAgICBzZWxlY3RlZDogW10sCiAgICAgIGhlYWRlcnM6IFsKICAgICAgICB7CiAgICAgICAgICB0ZXh0OiAnVGFibGUnLAogICAgICAgICAgYWxpZ246ICdzdGFydCcsCiAgICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgICB2YWx1ZTogJ3RhYmxlJywKICAgICAgICB9LAogICAgICAgIHsgdGV4dDogJ1NpemUnLCB2YWx1ZTogJ3NpemUnIH0sCiAgICAgICAgeyB0ZXh0OiAnTGFzdCB1c2UnLCB2YWx1ZTogJ2xhc3RfdGltZScgfSwKICAgICAgICB7IHRleHQ6ICdVcGxvYWRlZCBkYXRlJywgdmFsdWU6ICd1cGxvYWRfZGF0ZScgfSwKICAgICAgICB7IHRleHQ6ICdBY3Rpb25zJywgdmFsdWU6ICdhY3Rpb25zJywgc29ydGFibGU6IGZhbHNlIH0sCiAgICAgIF0sCiAgICAgIHRhYmxlRGF0YTogWwogICAgICAgIHsKICAgICAgICAgIHRhYmxlOiAncHBvZF90YWJsZS5qc29uJywKICAgICAgICAgIHNpemU6ICcxNS4yTUInLAogICAgICAgICAgaWQ6ICcxJywKICAgICAgICAgIGxhc3RfdGltZTogJ1RvZGF5JywKICAgICAgICAgIHVwbG9hZF9kYXRlOiAnMjAyMC0xMi0yMScsCiAgCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0YWJsZTonY2FyX3RlbXBsYXRlLmNzdicsCiAgICAgICAgICBzaXplOiczNTVLQicsCiAgICAgICAgICBpZDogJzInLAogICAgICAgICAgbGFzdF90aW1lOiAiVG9kYXkiLAogICAgICAgICAgdXBsb2FkX2RhdGU6ICcyMDIyLTEwLTA2JwogICAgICAgIH0KICAgICAgXSwKICAgICAgZGI6IG5ldyBQb3VjaERCKCJ0ZXN0X2RiIiksCiAgICAgIHJlc3VsdHM6W10KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHJlYWRjc3ZmaWxlKHJlYWRlcixmaWxlKXsKICAgICAgdmFyIHRoYXQgPSB0aGlzCiAgICAgIGNvbnN0IHJlcyA9IG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCk9PnsKICAgICAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsZnVuY3Rpb24gZ2V0KCl7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlYWRlcikKICAgICAgICAgIGNvbnN0IGQgPSByZWFkZXIucmVzdWx0CiAgICAgICAgICBjb25zdCBoZWFkZXJzID0gZC5zbGljZSgwLGQuaW5kZXhPZigiXG4iKSkucmVwbGFjZSgnXHInLCAnJykuc3BsaXQoJywnKQogICAgICAgICAgY29uc3QgcSA9IGQuc2xpY2UoZC5pbmRleE9mKCJcbiIpICsgMSkuc3BsaXQoIlxuIikKICAgICAgICAgIGNvbnN0IHJvd3MgPSBbXTsKICAgICAgICAgIGZvcihsZXQgaT0wO2k8T2JqZWN0LmtleXMocSkubGVuZ3RoO2krKyl7IC8vcmVtb3ZpbmcgYWxsIFxyIGZyb20gcm93cwogICAgICAgICAgICByb3dzLnB1c2gocVtpXS5yZXBsYWNlKCdccicsJycpKQogICAgICAgICAgfQogICAgICAgICAgLy9jb25zb2xlLmxvZyhyb3dzKQogICAgICAgICAgY29uc3QgYXJyID0gcm93cy5tYXAoZnVuY3Rpb24ocm93KSB7CiAgICAgICAgICBjb25zdCB2YWx1ZXMgPSByb3cuc3BsaXQoJywnKTsKICAgICAgICAgIGNvbnN0IGVsICA9IGhlYWRlcnMucmVkdWNlKGZ1bmN0aW9uKG9iamVjdCxoZWFkZXIsaW5kZXgpewogICAgICAgICAgICBvYmplY3RbaGVhZGVyXSA9IHZhbHVlc1tpbmRleF07CiAgICAgICAgICAgIHJldHVybiBvYmplY3QKICAgICAgICAgIH0se30pOwogICAgICAgICAgcmV0dXJuIGVsCiAgICAgICAgfSk7CiAgICAgICAgY29uc29sZS5sb2coYXJyKQogICAgICAgIC8vIGNvbnN0IHRleHQgPSBKU09OLnN0cmluZ2lmeShhcnIpCiAgICAgICAgLy8gcmVzb2x2ZSh0ZXh0KQogICAgICAgIHRoYXQuJGVtaXQoJ2xvYWRlckFjdGlvbicsIHtzdGF0dXM6ICdsb2NhbCcsIGRhdGE6IGFycn0pCiAgICAgICAgcmVhZGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLGdldCkKICAgICAgICB9KQogICAgICB9KQogICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKQogICAgICAvL2NvbnNvbGUubG9nKHJlcykKICAgICAgCiAgICAgIC8vIHJldHVybiByZXMKICB9LAogICAgYXN5bmMgdXBsb2FkZmlsZXModyl7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgLy8gdGhpcy5yZXN1bHRzLnNwbGljZSgwKQogICAgICBpZih3WyJ0eXBlIl09PSJ0ZXh0L2NzdiIpewogICAgICAgIGF3YWl0IHRoaXMucmVhZGNzdmZpbGUocmVhZGVyLCB3KQogICAgICB9CiAgICAgIC8vIH0pCiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucmVzdWx0cykKICAgIH0sCiAgICBjYW5jZWxTZWxlY3QoKXsKICAgICAgdGhpcy4kZW1pdCgnbG9hZGVyQWN0aW9uJywge3N0YXR1czogJ2ZhaWwnfSkKICAgICAgdGhpcy5zZWxlY3RlZCA9IFtdCiAgICB9LAogICAgY29uZmlybVNlbGVjdCgpewogICAgICBpZih0aGlzLnNlbGVjdGVkLmxlbmd0aCA+IDApewogICAgICAgIHRoaXMuJGVtaXQoJ2xvYWRlckFjdGlvbicsIHtzdGF0dXM6ICdleGlzdGluZycsIHNlbGVjdGVkOiB0aGlzLnNlbGVjdGVkWzBdfSkKICAgICAgICB0aGlzLnNlbGVjdGVkID0gW10KICAgICAgfWVsc2V7CiAgICAgICAgdGhpcy5jYW5jZWxTZWxlY3QoKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Loader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Loader.vue","sourceRoot":"src/components/loader/corpus","sourcesContent":["<template>\n  <v-card>\n    <v-card-title class=\"headline\">\n      Corpus\n    </v-card-title>\n    <v-divider></v-divider>\n\n    <v-card-actions class=\"mt-5\">\n      <v-row>\n        <v-col cols=\"12\">      \n          <v-file-input\n            @change=\"uploadfiles\"\n            label=\"Upload your corpus data\"\n            outlined\n            dense\n            full-width\n          ></v-file-input>\n        </v-col>\n      </v-row>\n    </v-card-actions>\n    \n    <v-card-title class=\"headline\">\n      Existing Corpus\n    </v-card-title>\n    <template>\n      <v-data-table\n      v-model=\"selected\"\n      :headers=\"headers\"\n      :items=\"tableData\"\n      :single-select=\"true\"\n      item-key=\"table\"\n      show-select\n      class=\"elevation-1\"\n      >\n        <template v-slot:item.actions=\"{ item }\">\n          <v-icon\n            small\n            class=\"mr-2\"\n            \n          >\n            mdi-pencil\n          </v-icon>\n          <v-icon\n            small\n            \n          >\n            mdi-delete\n          </v-icon>\n        </template>\n      </v-data-table>\n    </template>\n    <v-card-actions class=\"mt-5\">\n      <v-spacer></v-spacer>\n      <v-btn\n        text\n        color=\"error\"\n        @click=\"cancelSelect\"\n      >\n        Cancel\n      </v-btn>\n       <v-btn\n        text\n        color=\"primary\"\n        @click=\"confirmSelect\"\n       >\n        Confirm\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport PouchDB from 'pouchdb'\nexport default {\n  data(){\n    return {\n      singleSelect: false,\n      selected: [],\n      headers: [\n        {\n          text: 'Table',\n          align: 'start',\n          sortable: false,\n          value: 'table',\n        },\n        { text: 'Size', value: 'size' },\n        { text: 'Last use', value: 'last_time' },\n        { text: 'Uploaded date', value: 'upload_date' },\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      tableData: [\n        {\n          table: 'ppod_table.json',\n          size: '15.2MB',\n          id: '1',\n          last_time: 'Today',\n          upload_date: '2020-12-21',\n  \n        },\n        {\n          table:'car_template.csv',\n          size:'355KB',\n          id: '2',\n          last_time: \"Today\",\n          upload_date: '2022-10-06'\n        }\n      ],\n      db: new PouchDB(\"test_db\"),\n      results:[]\n    }\n  },\n  methods: {\n    readcsvfile(reader,file){\n      var that = this\n      const res = new Promise((resolve,reject)=>{\n        reader.addEventListener('load',function get(){\n          //console.log(reader)\n          const d = reader.result\n          const headers = d.slice(0,d.indexOf(\"\\n\")).replace('\\r', '').split(',')\n          const q = d.slice(d.indexOf(\"\\n\") + 1).split(\"\\n\")\n          const rows = [];\n          for(let i=0;i<Object.keys(q).length;i++){ //removing all \\r from rows\n            rows.push(q[i].replace('\\r',''))\n          }\n          //console.log(rows)\n          const arr = rows.map(function(row) {\n          const values = row.split(',');\n          const el  = headers.reduce(function(object,header,index){\n            object[header] = values[index];\n            return object\n          },{});\n          return el\n        });\n        console.log(arr)\n        // const text = JSON.stringify(arr)\n        // resolve(text)\n        that.$emit('loaderAction', {status: 'local', data: arr})\n        reader.removeEventListener('load',get)\n        })\n      })\n      reader.readAsText(file)\n      //console.log(res)\n      \n      // return res\n  },\n    async uploadfiles(w){\n      const reader = new FileReader()\n      // this.results.splice(0)\n      if(w[\"type\"]==\"text/csv\"){\n        await this.readcsvfile(reader, w)\n      }\n      // })\n      // console.log(this.results)\n    },\n    cancelSelect(){\n      this.$emit('loaderAction', {status: 'fail'})\n      this.selected = []\n    },\n    confirmSelect(){\n      if(this.selected.length > 0){\n        this.$emit('loaderAction', {status: 'existing', selected: this.selected[0]})\n        this.selected = []\n      }else{\n        this.cancelSelect()\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>"]}]}