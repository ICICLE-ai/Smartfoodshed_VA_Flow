{"remainingRequest":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/src/components/DocumentsComp.vue?vue&type=template&id=af4bdb32&scoped=true&","dependencies":[{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/src/components/DocumentsComp.vue","mtime":1644041415375},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644041617822},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/frontend/node_modules/vue-loader/lib/index.js","mtime":1644041617678}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}