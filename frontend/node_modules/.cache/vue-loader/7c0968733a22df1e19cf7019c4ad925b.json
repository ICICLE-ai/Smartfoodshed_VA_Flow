{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue","mtime":1664768288858},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIE5lbzRqZDMgZnJvbSAnQC9qcy9OZW80akQzLmpzJwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMycKaW1wb3J0ICogYXMgZDNMYXNzbyBmcm9tICdkMy1sYXNzbycKCmV4cG9ydCBkZWZhdWx0IHsKICAgIHByb3BzOiBbJ0cnLCdoZWlnaHQnLCAnd2lkdGgnXSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIGxhc3NvU3RhdHVzOiBmYWxzZSwKICAgICAgICAgICAgc2VsZWN0ZWRFbnRpdGllczogewogICAgICAgICAgICAgICAgJ29udCc6IFtdLAogICAgICAgICAgICAgICAgJ3ZvY2FiJzpbXQogICAgICAgICAgICB9LAogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCl7CiAgICAgICAgd2luZG93WydkMyddID0gZDMKICAgIH0sCiAgICB3YXRjaDp7CiAgICAgICAgRzogZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpewogICAgICAgICAgICB0aGlzLmRyYXcoKQogICAgICAgIH0sCiAgICAgICAgc2VsZWN0ZWRFbnRpdGllczogZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpewogICAgICAgICAgICBjb25zb2xlLmxvZygnZW1pdCBmdW5jJykKICAgICAgICAgICAgCiAgICAgICAgfSwKCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGxhc3NvVG9nZ2xlSGFuZGxlcih2YWwpewogICAgICAgICAgICBjb25zb2xlLmxvZygnbGFzc28nLCB2YWwpCiAgICAgICAgICAgIGlmKHZhbCl7CiAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVab29tKCkKICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlTGFzc28oKQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIC8vIGN1cnJlbnQgaXMgem9vbSAKICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZUxhc3NvKCkKICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlWm9vbVBhbigpCiAgICAgICAgICAgIH0KICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxhc3NvU3RhdHVzLCB0aGlzLnpvb21QYW5TdGF0dXMpCiAgICAgICAgCiAgICAgICAgfSwKICAgICAgICBlbmFibGVab29tUGFuKCl7CiAgICAgICAgICAgIGNvbnN0IHN2ZyA9IGQzLnNlbGVjdCgnI2Rpdl9ncmFwaCcpLnNlbGVjdCgic3ZnIikgCiAgICAgICAgICAgIHN2Zy5jYWxsKGQzLnpvb20oKS5vbignem9vbScsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciBzY2FsZSA9IGQzLmV2ZW50LnRyYW5zZm9ybS5rLAogICAgICAgICAgICAgICAgdHJhbnNsYXRlID0gW2QzLmV2ZW50LnRyYW5zZm9ybS54LCBkMy5ldmVudC50cmFuc2Zvcm0ueV0KICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKDEpCiAgICAgICAgICAgICAgICBjb25zdCBnID0gc3ZnLnNlbGVjdCgiZyIpCiAgICAgICAgICAgICAgICBnLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIHRyYW5zbGF0ZVswXSArICcsICcgKyB0cmFuc2xhdGVbMV0gKyAnKSBzY2FsZSgnICsgc2NhbGUgKyAnKScpCiAgICAgICAgICAgIH0pKQogICAgICAgICAgICAub24oJ2RibGNsaWNrLnpvb20nLCBudWxsKQogICAgICAgIH0sCiAgICAgICAgZGlzYWJsZUxhc3NvKCkgewogICAgICAgICAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3QoJyNkaXZfZ3JhcGgnKS5zZWxlY3QoInN2ZyIpIAogICAgICAgICAgICBzdmcub24oIi5kcmFnc3RhcnQiLCBudWxsKTsKICAgICAgICAgICAgc3ZnLm9uKCIuZHJhZyIsIG51bGwpOwogICAgICAgICAgICBzdmcub24oIi5kcmFnZW5kIiwgbnVsbCk7CiAgICAgICAgfSwgCiAgICAgICAgZW5hYmxlTGFzc28oKXsKICAgICAgICAgICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KCcjZGl2X2dyYXBoJykuc2VsZWN0KCJzdmciKQogICAgICAgICAgICB2YXIgY2lyY2xlc19xdWVzdGlvbiA9IHN2Zy5zZWxlY3RBbGwoJy5vdXRsaW5lJykKICAgICAgICAgICAgbGV0IHRoYXQgPSB0aGlzCiAgICAgICAgICAgIHZhciBsYXNzb19zdGFydCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKDExMSkKICAgICAgICAgICAgICAgIGxhc3NvLml0ZW1zKCkKICAgICAgICAgICAgICAgIC5hdHRyKCdmaWxsJywgImdyZWVuIikKICAgICAgICAgICAgICAgIC5jbGFzc2VkKCdub3RfcG9zc2libGUnLCB0cnVlKQogICAgICAgICAgICAgICAgLmNsYXNzZWQoJ3NlbGVjdGVkJywgZmFsc2UpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIGxhc3NvX2RyYXcgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAvLyBTdHlsZSB0aGUgcG9zc2libGUgZG90cwogICAgICAgICAgICAgICAgbGFzc28ucG9zc2libGVJdGVtcygpCiAgICAgICAgICAgICAgICAuY2xhc3NlZCgnbm90X3Bvc3NpYmxlJywgZmFsc2UpCiAgICAgICAgICAgICAgICAuY2xhc3NlZCgncG9zc2libGUnLCB0cnVlKQoKICAgICAgICAgICAgICAgIC8vIFN0eWxlIHRoZSBub3QgcG9zc2libGUgZG90CiAgICAgICAgICAgICAgICBsYXNzby5ub3RQb3NzaWJsZUl0ZW1zKCkKICAgICAgICAgICAgICAgIC5jbGFzc2VkKCdub3RfcG9zc2libGUnLCB0cnVlKQogICAgICAgICAgICAgICAgLmNsYXNzZWQoJ3Bvc3NpYmxlJywgZmFsc2UpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmFyIGxhc3NvX2VuZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGxhc3NvLml0ZW1zKCkKICAgICAgICAgICAgICAgIC5jbGFzc2VkKCdub3RfcG9zc2libGUnLCBmYWxzZSkKICAgICAgICAgICAgICAgIC5jbGFzc2VkKCdwb3NzaWJsZScsIGZhbHNlKQoKICAgICAgICAgICAgICAgIGxhc3NvLnNlbGVjdGVkSXRlbXMoKQogICAgICAgICAgICAgICAgLy8gLnN0eWxlKCdzdHJva2UnLCdyZWQnKQogICAgICAgICAgICAgICAgLmNsYXNzZWQoJ3NlbGVjdGVkJywgdHJ1ZSkKICAgICAgICAgICAgICAgIHRoYXQuc2VsZWN0ZWRFbnRpdGllc1snb250J10uc3BsaWNlKDAsIHRoYXQuc2VsZWN0ZWRFbnRpdGllcy5sZW5ndGgpCiAgICAgICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ3ZvY2FiJ10uc3BsaWNlKDAsIHRoYXQuc2VsZWN0ZWRFbnRpdGllcy5sZW5ndGgpCiAgICAgICAgICAgICAgICAvLyB0aGF0LnNlbGVjdGVkUmVsYXRpb25zLnNwbGljZSgwLCB0aGF0LnNlbGVjdGVkUmVsYXRpb25zLmxlbmd0aCkgCiAgICAgICAgICAgICAgICBsYXNzby5zZWxlY3RlZEl0ZW1zKCkuZWFjaChmdW5jdGlvbihkKXsKICAgICAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gdGhpcy5ub2RlTmFtZSAKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGQpCiAgICAgICAgICAgICAgICBpZihkLnR5cGU9PSJub2RlIil7CiAgICAgICAgICAgICAgICAgICAgaWYoZC52b2NhYil7CiAgICAgICAgICAgICAgICAgICAgdGhhdC5zZWxlY3RlZEVudGl0aWVzWyd2b2NhYiddLnB1c2goZC5pZCkKICAgICAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ29udCddLnB1c2goZC5pZCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGF0LnNlbGVjdGVkRW50aXRpZXMpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhhdC4kZW1pdCgnZ2VuU1BBUlFMJywge2VudGl0aWVzOiB0aGlzLnNlbGVjdGVkRW50aXRpZXN9KQogICAgICAgICAgICB2YXIgbGFzc28gPSBkM0xhc3NvLmxhc3NvKCkKICAgICAgICAgICAgICAgIC5jbG9zZVBhdGhTZWxlY3QodHJ1ZSkKICAgICAgICAgICAgICAgIC5jbG9zZVBhdGhEaXN0YW5jZSgxMDApCiAgICAgICAgICAgICAgICAuaXRlbXMoY2lyY2xlc19xdWVzdGlvbikKICAgICAgICAgICAgICAgIC50YXJnZXRBcmVhKHN2ZykKICAgICAgICAgICAgICAgIC5vbignc3RhcnQnLCBsYXNzb19zdGFydCkKICAgICAgICAgICAgICAgIC5vbignZHJhdycsIGxhc3NvX2RyYXcpCiAgICAgICAgICAgICAgICAub24oJ2VuZCcsIGxhc3NvX2VuZCkKCiAgICAgICAgICAgIHN2Zy5jYWxsKGxhc3NvKQogICAgICAgIH0sIAogICAgICAgIGRpc2FibGVab29tKCkgewogICAgICAgICAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3QoJyNkaXZfZ3JhcGgnKS5zZWxlY3QoInN2ZyIpIAogICAgICAgICAgICBzdmcub24oJy56b29tJywgbnVsbCkKICAgICAgICB9LAogICAgICAgIHRvZ2dsZVpvb21QYW5MYXNzbygpewogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxhc3NvU3RhdHVzLCB0aGlzLnpvb21QYW5TdGF0dXMpCiAgICAgICAgICAgIHRoaXMuem9vbVBhblN0YXR1cyA9ICF0aGlzLnpvb21QYW5TdGF0dXMgCiAgICAgICAgICAgIHRoaXMubGFzc29TdGF0dXMgPSAhdGhpcy5sYXNzb1N0YXR1cwogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxhc3NvU3RhdHVzLCB0aGlzLnpvb21QYW5TdGF0dXMpCiAgICAgICAgfSwgCiAgICAgICAgZHJhdygpewogICAgICAgIHZhciB0aGF0ID0gdGhpcwogICAgICAgIHZhciBuZW80amQzID0gTmVvNGpkMy5kZWZhdWx0KCcjZGl2X2dyYXBoJywgewogICAgICAgICAgICBuZW80akRhdGE6IHRoaXMuRywKICAgICAgICAgICAgbm9kZVJhZGl1czogMzAsCiAgICAgICAgICAgIGluZm9QYW5lbDogZmFsc2UsCiAgICAgICAgICAgIG9uTm9kZUNsaWNrOiBmdW5jdGlvbihyZWwpewogICAgICAgICAgICAgICAgdGhhdC4kZW1pdCgnb24tbm9kZS1jbGljay1ldmVudCcsIHJlbCkKICAgICAgICAgICAgICAgIC8vIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHRoYXQuJHJlZnMpKXsKICAgICAgICAgICAgICAgIC8vIHRoYXQuJG5leHRUaWNrKCgpID0+IHZhbHVlWzBdLmJsdXIoKSkKICAgICAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgICAgIC8vIHRoYXQuJG5leHRUaWNrKCgpID0+IHRoYXQuJHJlZnNbJ2ZpbHRlci0nK3JlbC5pZF1bMF0uZm9jdXMoKSkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICB9LAogICAgICAgICAgICBvblJlbGF0aW9uc2hpcENsaWNrOiBmdW5jdGlvbihyZWwpewogICAgICAgICAgICAgICAgdGhhdC5jb250ZW50ID0gIiIKICAgICAgICAgICAgICAgIHRoYXQucmVsYXRpb25zID0gW10KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjbGljayBvbiByZWxhdGlvbicsIHJlbCkKICAgICAgICAgICAgICAgIHRoYXQuZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgICAgICAgICAgICAgIHZhciByZWxhdGlvbnMgPSByZWxbJ3Byb3BlcnRpZXMnXQogICAgICAgICAgICAgICAgdmFyIGxlbmd0aCA9IE9iamVjdC5rZXlzKHJlbGF0aW9ucykubGVuZ3RoCiAgICAgICAgICAgICAgICB0aGF0LmNvbnRlbnQgKz0gIlRoZXJlIGlzIChhcmUpICIgKyBsZW5ndGgudG9TdHJpbmcoKSArICIgdHlwZShzKSBvZiBsaW5rcyBmcm9tICIgKyByZWxbJ3N0YXJ0Tm9kZSddICsgJyB0byAnICsgcmVsWydlbmROb2RlJ10rJ1xuJyAKICAgICAgICAgICAgICAgIHRoYXQuY29udGVudCArPSAiVGhlIHR5cGVzIGNvbnRhaW46ICIgKyAnXG4nCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhyZWxhdGlvbnMpKSB7CiAgICAgICAgICAgICAgICB0aGF0LnJlbGF0aW9ucy5wdXNoKGtleSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgdGhpcy5uZW80amQzID0gbmVvNGpkMwogICAgICAgIGlmICh0aGF0Lmxhc3NvU3RhdHVzKSB7CiAgICAgICAgICAgIHRoYXQuZGlzYWJsZVpvb20oKQogICAgICAgICAgICB0aGF0LmVuYWJsZUxhc3NvKCkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGF0LmRpc2FibGVMYXNzbygpIAogICAgICAgICAgICB0aGF0LmVuYWJsZVpvb21QYW4oKQogICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["KGViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"KGViewer.vue","sourceRoot":"src/components/analyzer/ontparser","sourcesContent":["<template>\n    <div id=\"div_kgviewer\">\n        <v-row>\n            <v-switch\n                v-model=\"lassoStatus\"\n                inset\n                @change=\"lassoToggleHandler\"\n                :label=\"`Lasso: ${lassoStatus.toString()}`\"\n                ></v-switch>\n        </v-row>\n        <v-row>\n            <div id=\"div_graph\" class=\"fullHeight\" :style=\"{'height': height, 'width': width, 'float': 'right'}\"></div>\n        </v-row>\n    </div>\n</template>\n\n<script>\nimport * as Neo4jd3 from '@/js/Neo4jD3.js'\nimport * as d3 from 'd3'\nimport * as d3Lasso from 'd3-lasso'\n\nexport default {\n    props: ['G','height', 'width'],\n    data(){\n        return{\n            lassoStatus: false,\n            selectedEntities: {\n                'ont': [],\n                'vocab':[]\n            },\n        }\n    },\n    created(){\n        window['d3'] = d3\n    },\n    watch:{\n        G: function(newVal, oldVal){\n            this.draw()\n        },\n        selectedEntities: function(newVal, oldVal){\n            console.log('emit func')\n            \n        },\n\n    },\n    methods: {\n        lassoToggleHandler(val){\n            console.log('lasso', val)\n            if(val){\n                this.disableZoom()\n                this.enableLasso()\n            }else{\n                // current is zoom \n                this.disableLasso()\n                this.enableZoomPan()\n            }\n        // console.log(this.lassoStatus, this.zoomPanStatus)\n        \n        },\n        enableZoomPan(){\n            const svg = d3.select('#div_graph').select(\"svg\") \n            svg.call(d3.zoom().on('zoom', function () {\n                var scale = d3.event.transform.k,\n                translate = [d3.event.transform.x, d3.event.transform.y]\n                // console.log(1)\n                const g = svg.select(\"g\")\n                g.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')')\n            }))\n            .on('dblclick.zoom', null)\n        },\n        disableLasso() {\n            const svg = d3.select('#div_graph').select(\"svg\") \n            svg.on(\".dragstart\", null);\n            svg.on(\".drag\", null);\n            svg.on(\".dragend\", null);\n        }, \n        enableLasso(){\n            const svg = d3.select('#div_graph').select(\"svg\")\n            var circles_question = svg.selectAll('.outline')\n            let that = this\n            var lasso_start = function () {\n                // console.log(111)\n                lasso.items()\n                .attr('fill', \"green\")\n                .classed('not_possible', true)\n                .classed('selected', false)\n            }\n            var lasso_draw = function () {\n                // Style the possible dots\n                lasso.possibleItems()\n                .classed('not_possible', false)\n                .classed('possible', true)\n\n                // Style the not possible dot\n                lasso.notPossibleItems()\n                .classed('not_possible', true)\n                .classed('possible', false)\n            }\n            var lasso_end = function () {\n                lasso.items()\n                .classed('not_possible', false)\n                .classed('possible', false)\n\n                lasso.selectedItems()\n                // .style('stroke','red')\n                .classed('selected', true)\n                that.selectedEntities['ont'].splice(0, that.selectedEntities.length)\n                that.selectedEntities['vocab'].splice(0, that.selectedEntities.length)\n                // that.selectedRelations.splice(0, that.selectedRelations.length) \n                lasso.selectedItems().each(function(d){\n                const label = this.nodeName \n                // console.log(d)\n                if(d.type==\"node\"){\n                    if(d.vocab){\n                    that.selectedEntities['vocab'].push(d.id)\n                    }else{\n                    that.selectedEntities['ont'].push(d.id)\n                    }\n                }\n                console.log(that.selectedEntities)\n                \n                })\n            }\n            that.$emit('genSPARQL', {entities: this.selectedEntities})\n            var lasso = d3Lasso.lasso()\n                .closePathSelect(true)\n                .closePathDistance(100)\n                .items(circles_question)\n                .targetArea(svg)\n                .on('start', lasso_start)\n                .on('draw', lasso_draw)\n                .on('end', lasso_end)\n\n            svg.call(lasso)\n        }, \n        disableZoom() {\n            const svg = d3.select('#div_graph').select(\"svg\") \n            svg.on('.zoom', null)\n        },\n        toggleZoomPanLasso(){\n            // console.log(this.lassoStatus, this.zoomPanStatus)\n            this.zoomPanStatus = !this.zoomPanStatus \n            this.lassoStatus = !this.lassoStatus\n            // console.log(this.lassoStatus, this.zoomPanStatus)\n        }, \n        draw(){\n        var that = this\n        var neo4jd3 = Neo4jd3.default('#div_graph', {\n            neo4jData: this.G,\n            nodeRadius: 30,\n            infoPanel: false,\n            onNodeClick: function(rel){\n                that.$emit('on-node-click-event', rel)\n                // for (const [key, value] of Object.entries(that.$refs)){\n                // that.$nextTick(() => value[0].blur())\n                // }\n                // that.$nextTick(() => that.$refs['filter-'+rel.id][0].focus())\n                \n            },\n            onRelationshipClick: function(rel){\n                that.content = \"\"\n                that.relations = []\n                console.log('click on relation', rel)\n                that.dialogVisible = true\n                var relations = rel['properties']\n                var length = Object.keys(relations).length\n                that.content += \"There is (are) \" + length.toString() + \" type(s) of links from \" + rel['startNode'] + ' to ' + rel['endNode']+'\\n' \n                that.content += \"The types contain: \" + '\\n'\n                for (const [key, value] of Object.entries(relations)) {\n                that.relations.push(key)\n                }\n            }\n        })\n        this.neo4jd3 = neo4jd3\n        if (that.lassoStatus) {\n            that.disableZoom()\n            that.enableLasso()\n        } else {\n            that.disableLasso() \n            that.enableZoomPan()\n        }\n        }\n    }\n}\n</script>\n<style>\n\n    .lasso path {\n        stroke: rgb(80,80,80);\n        stroke-width:2px;\n    }\n    \n    .lasso .drawn {\n        fill-opacity:.05 ;\n    }\n    \n    .lasso .loop_close {\n        fill:none;\n        stroke-dasharray: 4,4;\n    }\n    \n    .lasso .origin {\n        fill:#3399FF;\n        fill-opacity:.5;\n    }\n    \n    .not_possible {\n        fill: rgb(200,200,200);\n    }\n    \n    .possible {\n        fill: #EC888C;\n    }\n    \n    #div_kgviewer .nodes .selected {\n        /* fill: green!important; */\n        stroke: red!important;\n        stroke-width: 3px!important;\n        stroke: black;\n    }\n    #div_kgviewer .relationships .selected {\n        stroke-width: 5px !important;\n        stroke: red!important;\n        /* stroke: green!important; */\n    }\n    .graph-btn-container{\n        position: relative; \n        top: 5px;\n    }\n    .kg-view-btn{\n      margin-right: 10px;\n    }\n    \n    .circle-button:hover{\n      cursor: pointer;\n    }\n    \n    .card-name {\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    \n    .card-inner{\n      text-align: center;\n      align-items: center;\n      justify-content: center;\n      flex-wrap: wrap;\n      height: 100%;\n    }\n    \n</style>\n    \n"]}]}