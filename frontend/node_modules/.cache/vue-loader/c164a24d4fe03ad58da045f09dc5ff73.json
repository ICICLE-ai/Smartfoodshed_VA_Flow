{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/viewer/tabularviewer/Inner.vue?vue&type=style&index=0&id=c30f16ae&scoped=true&lang=css&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/viewer/tabularviewer/Inner.vue","mtime":1665084574792},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1661441977636},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1661441977645},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1661441977640},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNhcmQtbmFtZSB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgZmxleC13cmFwOiB3cmFwOwogICAgaGVpZ2h0OiAxMDAlOwogIH0KCi5jYXJkLWlubmVyewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGZsZXgtd3JhcDogd3JhcDsKICBoZWlnaHQ6IDEwMCU7Cn0K"},{"version":3,"sources":["Inner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Inner.vue","sourceRoot":"src/components/viewer/tabularviewer","sourcesContent":["<template>\n  <div class=\"card-inner\">\n    <v-card-text v-if=\"!dataStatus\" class=\"card-name\">\n      No Table Data\n    </v-card-text>\n    \n    <template v-if=\"dataStatus\">\n      <div>\n        <v-card-title>\n           Table Viewer\n          <v-spacer></v-spacer>\n          <v-text-field\n            v-model=\"search\"\n            append-icon=\"mdi-magnify\"\n            label=\"Search\"\n            single-line\n            hide-details\n          ></v-text-field>\n        </v-card-title>\n        <template>\n          <v-data-table\n            :loading=\"loadingStatus\"\n            :headers=\"headers\"\n            :items=\"desserts\"\n            class=\"elevation-1\"\n            :height=\"`${itemProps.height - 50 - 70}px`\"\n            :search=\"search\"\n            show-select\n            ref=\"table\"\n            :single-select=\"false\"\n            v-model=\"selected\"\n          >\n          </v-data-table>\n        </template>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  props: ['itemProps'], \n  data() {\n    return {\n      dataStatus: false, \n      loadingStatus: undefined,\n      selected: [],\n      search: \"\",\n      sheets: [], \n      headers: [],\n      desserts: [],\n      currentDataBase: [],\n      answerBasedRetrieval: {},\n      currentSheet: \"\", \n      flag: false,\n      tableItemKey: \"\",\n    }\n  }, \n  methods: {\n  },\n  watch: {\n    \"itemProps.inputData\": function (val, oldVal) {\n      var temp_headers = []\n      for(let key in val[0]){\n        temp_headers.push({\n          text: key,\n          value: key\n        })\n      }\n      this.headers = temp_headers\n      this.desserts = val\n      if(val){\n        this.dataStatus = true\n      }\n    },\n    dataStatus: function(val, oldVal) {\n      if (val) {\n        const resizerBElelemt = document.querySelector(\"#\" + this.itemProps.id).querySelector(\".resizer-b\"); \n        const heightOfSheet = 25;\n        resizerBElelemt.style.bottom = (-heightOfSheet - 12) + \"px\"; \n      }\n    },\n    selected() {\n      console.log(`table ${this.itemProps.id} selected items updated`) \n      console.log(this.selected)\n      this.$store.dispatch('documents/updateSelectedItems', {id: this.itemProps.id, selected: this.selected})\n    }\n  }\n}\n</script>\n\n<style scoped>\n.card-name {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n.card-inner{\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n}\n</style>"]}]}