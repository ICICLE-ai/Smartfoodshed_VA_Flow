{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/linker/codeeditor/Inner.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/linker/codeeditor/Inner.vue","mtime":1664241489734},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1661441977636},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1661441977645},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1661441977640},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGFzc28gcGF0aCB7CiAgICBzdHJva2U6IHJnYig4MCw4MCw4MCk7CiAgICBzdHJva2Utd2lkdGg6MnB4Owp9CgoubGFzc28gLmRyYXduIHsKICAgIGZpbGwtb3BhY2l0eTouMDUgOwp9CgoubGFzc28gLmxvb3BfY2xvc2UgewogICAgZmlsbDpub25lOwogICAgc3Ryb2tlLWRhc2hhcnJheTogNCw0Owp9CgoubGFzc28gLm9yaWdpbiB7CiAgICBmaWxsOiMzMzk5RkY7CiAgICBmaWxsLW9wYWNpdHk6LjU7Cn0KCi5ub3RfcG9zc2libGUgewogICAgZmlsbDogcmdiKDIwMCwyMDAsMjAwKTsKfQoKLnBvc3NpYmxlIHsKICAgIGZpbGw6ICNFQzg4OEM7Cn0KCi5ub2RlcyAuc2VsZWN0ZWQgewogICAgZmlsbDogZ3JlZW4haW1wb3J0YW50OwogICAgc3Ryb2tlLXdpZHRoOiAzcHghaW1wb3J0YW50OwogICAgc3Ryb2tlOiBibGFjazsKfQoucmVsYXRpb25zaGlwcyAuc2VsZWN0ZWQgewogICAgc3Ryb2tlLXdpZHRoOiA1cHggIWltcG9ydGFudDsKICAgIHN0cm9rZTogZ3JlZW4haW1wb3J0YW50Owp9Ci5ncmFwaC1idG4tY29udGFpbmVyewogICAgcG9zaXRpb246IHJlbGF0aXZlOyAKICAgIHRvcDogNXB4Owp9Ci5rZy12aWV3LWJ0bnsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KCi5jaXJjbGUtYnV0dG9uOmhvdmVyewogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmNhcmQtbmFtZSB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgZmxleC13cmFwOiB3cmFwOwogICAgaGVpZ2h0OiAxMDAlOwogIH0KCi5jYXJkLWlubmVyewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGZsZXgtd3JhcDogd3JhcDsKICBoZWlnaHQ6IDEwMCU7Cn0KCg=="},{"version":3,"sources":["Inner.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Inner.vue","sourceRoot":"src/components/linker/codeeditor","sourcesContent":["<template>\n    <div class=\"card-inner\" :style=\"{border: getBorder, \"overflow\": \"scroll\"}\">\n        <v-card>\n            <v-card-title class=\"headline\">\n                Code Viewer/Editor\n            </v-card-title>\n            <v-divider></v-divider>\n            <prism-editor class=\"my-editor\" v-model=\"code\" language=\"html\" :highlight=\"highlighter\" line-numbers></prism-editor>\n            <v-card-actions class=\"mt-5\">\n            <v-spacer></v-spacer>\n            \n            <v-checkbox\n            v-model=\"checkbox\"\n            :label=\"`Is it a function?: ${checkbox.toString()}`\"\n            ></v-checkbox>\n            <v-btn\n                text\n                color=\"primary\"\n                @click=\"confirmSelect\"\n            >\n                Confirm\n            </v-btn>\n            </v-card-actions>\n        </v-card>\n        <v-overlay :value=\"loading_value\">\n        <v-progress-circular\n          indeterminate\n          size=\"64\"\n        ></v-progress-circular>\n      </v-overlay>\n    </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport {componentEnableDragHandler,componentDisableDragHandler,} from \"@/utils/globalViewCardUtils/toolHelper.js\";\nimport { PrismEditor } from 'vue-prism-editor';\nimport 'vue-prism-editor/dist/prismeditor.min.css'; // import the styles somewhere\n// import highlighting library (you can use any library you want just return html string)\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport \"prismjs/themes/prism-tomorrow.css\";\n\nexport default{\n  props: ['itemProps', 'fixed', 'innerStyle'], \n  components: {\n    PrismEditor\n  },  \n  data () {\n    return {\n        selectedEntities: [], \n        selectedRelations: [],\n        currentEntities: [], \n        currentRelations: [],\n        lassoColor: \"grey\", \n        zoomPanColor: \"green\", \n        lassoStatus: false,\n        zoomPanStatus: false, \n        lasso: null, \n        zoom: null, \n        loading_value:false,\n        tip: null,\n        user_defined_thre: 5,// user defined threshold to show how many nodes we want to see if we expand one node \n        neo4jd3 : null,\n        brushed: {\"entity_type\": [], \"relationship_type\": []},\n        showOverview:false, \n        showMaxRetrieve:false,\n        fav: true,\n        menu: false,\n        message: false,\n        hints: true,\n        selectedColor: null, \n        showResThre: false, // resilience threshold bar \n        resilience_thre: 0,  // selected threshold of resilience \n        // min_resilience: 0,\n        max_resilience: 1, // maximum value of the scroll bar for resilience threshold \n        FIXED: false,\n       \n\n        // custom\n        code: `\n        PREFIX owl: <http://www.w3.org/2002/07/owl#>\n        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n        PREFIX dc: <http://purl.org/dc/elements/1.1/>\n        PREFIX : <http://dbpedia.org/resource/>\n        PREFIX dbpedia2: <http://dbpedia.org/property/>\n        PREFIX dbpedia: <http://dbpedia.org/>\n        PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n\n\n        SELECT ?resource ?link_label ?other_label WHERE {{\n          ?resource rdfs:label  \"Visualization\"@en .\n          ?other ?link ?resource .\n          ?link rdfs:label ?link_label .\n          ?other rdfs:label ?other_label .\n          OPTIONAL {{\n              ?resource ?link ?other\n          }}\n          FILTER (lang(?link_label) = 'en')\n          FILTER (lang(?other_label) = 'en')\n        }} `,\n        checkbox: false\n    }\n  },\n  created () {\n    // this.$store.dispatch('getGraphOverview')\n    // window['d3'] = d3\n   \n    \n  },\n  methods: {\n    highlighter(code) {\n        return highlight(\n        code,\n        {\n          ...languages['markup'],\n          ...languages['js'],\n          ...languages['css'],\n        },\n        'markup'\n      );\n    },\n    dblClickHandler() {\n      this.toggleFixCompPos();\n    }, \n    \n    toggleFixCompPos() {\n      this.FIXED = !this.FIXED;\n      if (!this.dataStatus) {\n        return;\n      }\n      if (this.FIXED) {\n        componentDisableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      } else {\n        componentEnableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      }\n    },\n    toolEnableToggleHandler(e) {\n      alert(e)\n    },\n    confirmSelect(){\n      if(this.checkbox){\n        var func = eval(`(${this.code})`)\n      }else{\n        var func = this.code \n      }\n      this.$store.dispatch('codeeditor/updateData', {id: this.itemProps.id, isFunc: this.checkbox, script: func})\n    }\n    \n  },\n  watch: {\n    brushed:{\n      handler(val){\n          console.log(val);\n      },\n      deep:true \n    },\n    \n  },\n  computed: {\n    getBorder() {\n      return this.FIXED ? \"2px solid grey\" : \"None\";\n    }\n  }\n}\n</script>\n<style>\n\n.lasso path {\n    stroke: rgb(80,80,80);\n    stroke-width:2px;\n}\n\n.lasso .drawn {\n    fill-opacity:.05 ;\n}\n\n.lasso .loop_close {\n    fill:none;\n    stroke-dasharray: 4,4;\n}\n\n.lasso .origin {\n    fill:#3399FF;\n    fill-opacity:.5;\n}\n\n.not_possible {\n    fill: rgb(200,200,200);\n}\n\n.possible {\n    fill: #EC888C;\n}\n\n.nodes .selected {\n    fill: green!important;\n    stroke-width: 3px!important;\n    stroke: black;\n}\n.relationships .selected {\n    stroke-width: 5px !important;\n    stroke: green!important;\n}\n.graph-btn-container{\n    position: relative; \n    top: 5px;\n}\n.kg-view-btn{\n  margin-right: 10px;\n}\n\n.circle-button:hover{\n  cursor: pointer;\n}\n\n.card-name {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n.card-inner{\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n}\n\n</style>\n"]}]}