{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/linker/codeeditor/index.vue?vue&type=style&index=0&id=365d7aa5&scoped=true&lang=css&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/linker/codeeditor/index.vue","mtime":1664241711632},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1661441977636},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1661441977645},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1661441977640},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2FyZC1vbnRwYXJzZXIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZmxleC13cmFwOiB3cmFwOwogIGhlaWdodDogMTAwJTsKfQouc2hlZXRuYW1lewogIG1hcmdpbi10b3A6IDEwcHg7CiAgaGVpZ2h0OiAyMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/linker/codeeditor","sourcesContent":["<template>\n  <Ctemplate \n    :itemProps=\"itemProps\" \n    @contextmenu=\"contextButtonClickedHandler\" \n    :contextCommands=\"contextCommands\"\n    :styleProps=\"styleProps\"\n    @dblclick=\"dblclickHandler\"\n    :fixed=\"FIXED\"\n    \n  >\n    <template v-slot:fullView>\n      <CodeEditor :itemProps=\"itemProps\" ref=\"inner\" :innerStyle=\"innerStyle\" :fixed=\"FIXED\"/>\n    </template>\n  </Ctemplate>\n</template>\n\n<script>\nimport CodeEditor from './Inner.vue'\nexport default {\n  props: ['itemProps'], \n  components: {\n    CodeEditor, \n  }, \n  data() {\n    return {\n      contextCommands: [], \n      styleProps: {width: '400px', height: '300px'},\n      FIXED: false \n    }\n  }, \n  methods: {\n    contextButtonClickedHandler(button) {\n      alert(button)\n    }, \n    dblclickHandler() {\n      this.toggleFixCompPos();\n    }, \n\n    toggleFixCompPos() {\n      this.FIXED = !this.FIXED;\n      if (!this.dataStatus) {\n        return;\n      }\n      if (this.FIXED) {\n        componentDisableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      } else {\n        componentEnableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      }\n    },\n  },\n  computed:{\n    innerStyle(){\n      return {\n        'height': parseInt(this.styleProps['height'].replace('px','')),\n        'width': parseInt(this.styleProps['width'].replace('px',''))\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.card-ontparser {\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n}\n.sheetname{\n  margin-top: 10px;\n  height: 20px;\n}\n</style>"]}]}