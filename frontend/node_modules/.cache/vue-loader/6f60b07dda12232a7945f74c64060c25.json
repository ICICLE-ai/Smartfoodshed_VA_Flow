{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/OntParser.vue?vue&type=style&index=0&id=77688d3b&scoped=true&lang=css&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/OntParser.vue","mtime":1664214530845},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1661441977636},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1661441977645},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1661441977640},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2FyZC1uYW1lewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OyAKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGZsZXgtd3JhcDogd3JhcDsKICBoZWlnaHQ6IDEwMCU7Cn0KLnRpdGxlLW1pbmkgewogIGNvbG9yOiBzdGVlbGJsdWUhaW1wb3J0YW50OwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Ci8qIC5jYXJkLWFjdGlvbnN7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKDMwMHB4LCAtMTUwcHgpOwogIHBhZGRpbmc6IDA7Cn0gKi8KCi5yZXNpemVyewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKfQoKLnJlc2l6ZXItciB7CiAgY3Vyc29yOiBjb2wtcmVzaXplOwogIGhlaWdodDogMTAwJTsKICByaWdodDogMDsKICB0b3A6IDA7CiAgd2lkdGg6IDVweDsKfQoKLyogUGxhY2VkIGF0IHRoZSBib3R0b20gc2lkZSAqLwoucmVzaXplci1iIHsKICBib3R0b206IDA7CiAgY3Vyc29yOiByb3ctcmVzaXplOwogIGhlaWdodDogNXB4OwogIGxlZnQ6IDA7CiAgd2lkdGg6IDEwMCU7Cn0KCi5jYXJkLXZlZ2FSZW5kZXI6aG92ZXJ7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["OntParser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"OntParser.vue","sourceRoot":"src/components/analyzer","sourcesContent":["<template>\n    <div>\n      <v-hover\n        v-slot=\"{hover}\"\n      >\n      <v-card\n          :elevation=\"hover ? 12 : 5\"\n          class=\"card-ontparser\"\n          :draggable=\"false\"\n          @mousedown=\"dragStartHandler\"\n          @dragstart=\"false\"\n          outlined\n          :id=\"itemProps.id\"\n          ref=\"cardComp\"\n          @dblclick.stop=\"cardDoubleClick\"\n          @contextmenu=\"rightClickMenuShow\"\n          :style=\"{top: marginTop + 'px', left: marginLeft +'px', width: `${width}px`, height: `${height}px`, position: 'absolute',}\"\n          :loading=\"itemProps.loadingStatus\"\n        >\n            ttt\n         <v-card-actions>\n            <!-- input action button on the border -->\n          <InoutputBtns\n              :resizingStatus=\"resizingStatus\"\n              :width=\"width\"\n              :height=\"height\"\n              :marginLeft=\"marginLeft\"\n              :marginTop=\"marginTop\"\n              :componentId=\"itemProps.id\"\n              :hover=\"hover\"\n            />\n          </v-card-actions>\n          <div class=\"resizer resizer-r\" @mousedown=\"mouseDownHandler\"></div>\n          <div class=\"resizer resizer-b\" @mousedown=\"mouseDownHandler\"></div>\n        </v-card>\n        \n      </v-hover>\n      <v-menu\n        v-model=\"showRightClickMenu\"\n        :position-x=\"rightMenuX\"\n        :position-y=\"rightMenuY\"\n        absolute\n        offset-y\n      >\n        <RightClickMenu \n          :vue=\"this\" \n          :container=\"container\" \n          :itemProps=\"itemProps\"\n          store=\"vegaRender\"\n        /> \n         \n      </v-menu>\n    </div>\n  </template>\n  \n  <script>\n  import {mapState} from 'vuex'\n  import RightClickMenu from \"@/components/common/rightclick/RightClickMenu\";\n  import InoutputBtns from \"@/components/common/menu/buttons/InoutputBtns\";\n  import VueVega from 'vue-vega'\n  import Vue from 'vue'\n \n  import {cardOperationMixin} from '@/mixins/cardOperationMixin.js'\n  Vue.use(VueVega)\n  \n  export default {\n    props: [\n      'itemProps'\n    ],\n    mixins:[cardOperationMixin],\n    data(){\n      return {\n        initialX: undefined,\n        initialY: undefined,\n        data: undefined,\n        resizeX: undefined,\n        resizeY: undefined,\n        // draggable: true,\n        width: 800,\n        height: 800, \n        resizeWidth: 0, //\n        resizeHeight: 0,\n        marginTop: 0,\n        marginLeft: 0,\n        topMargin: window.innerHeight / 2,\n        leftMargin: window.innerWidth / 2,\n        resizingStatus: false,\n  \n        showRightClickMenu: false,\n        rightMenuX: 0,\n        rightMenuY: 0,\n  \n        // for right click menu\n        items: [\n          { title: 'Remove node' },\n        ], \n        container: '.ontparser-components-list',\n        rightBtn: true,\n        topBtn: false,\n        leftBtn: false, \n  \n        dialog: false,\n      }\n    },\n    methods:{\n      cardDoubleClick(){\n        this.dialog = true;\n      //   this.itemProps.loadingStatus = true\n      },\n      loaderAction(e){\n        if(e.status == \"success\"){\n          delete e.status\n          e.selected.cardId = this.itemProps.id\n          this.$store.dispatch('ontparser/addCorpus', e.selected)\n        }\n        \n        this.dialog = false;\n      },\n    },\n    created(){\n      // Initialize initial position\n      this.marginTop = this.topMargin - this.height/2; \n      this.marginLeft = this.leftMargin - this.width/2;\n      this.resizeWidth = this.width;\n      this.resizeHeight = this.height; \n    },\n  \n    computed:{\n      ...mapState(['drawLink','ontparser']),\n  \n      // Determine Whether the component is draggable\n      // Not allowed when resizing and drawling link\n      draggable(){\n        return !(this.$store.state.drawLink || this.resizingStatus);\n      }, \n  \n      selectedCorpusName(){\n        if(this.itemProps.selectedTable){\n          const tableName = this.itemProps.selectedTable.table\n          this.width = 56 + 8*tableName.length\n          return tableName\n        }else{\n          return 'No Graph File'\n        }\n      }\n    },\n  \n    components: {\n      RightClickMenu,\n      InoutputBtns,\n      // BarChart: VueVega.mapVegaLiteSpec(BarChartSpec)\n  \n      // LoaderTextPre\n    }\n  }\n  </script>\n  \n  <style scoped> \n    .card-name{\n      text-align: center;\n      display: flex; \n      align-items: center;\n      justify-content: center;\n      flex-wrap: wrap;\n      height: 100%;\n    }\n    .title-mini {\n      color: steelblue!important;\n      font-weight: bold;\n    }\n    /* .card-actions{\n      position: absolute;\n      transform: translate(300px, -150px);\n      padding: 0;\n    } */\n  \n    .resizer{\n      position: absolute;\n    }\n  \n    .resizer-r {\n      cursor: col-resize;\n      height: 100%;\n      right: 0;\n      top: 0;\n      width: 5px;\n    }\n  \n    /* Placed at the bottom side */\n    .resizer-b {\n      bottom: 0;\n      cursor: row-resize;\n      height: 5px;\n      left: 0;\n      width: 100%;\n    }\n  \n    .card-vegaRender:hover{\n      cursor: pointer;\n    }\n  </style>\n  "]}]}