{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/Neo4jd3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/Neo4jd3.vue","mtime":1664220212881},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczogWydHJywnaGVpZ2h0J10sCiAgICBkYXRhKCl7CiAgICAgICAgcmV0dXJuewogICAgICAgICAgICBsYXNzb1N0YXR1czogZmFsc2UKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpewoKICAgIH0sCiAgICB3YXRjaDp7CiAgICAgICAgRzogZnVuY3Rpb24obmV3VmFsLCBvbGRWYWwpewogICAgICAgICAgICB0aGlzLmRyYXcoKQogICAgICAgIH0gCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGxhc3NvVG9nZ2xlSGFuZGxlcih2YWwpewogICAgICAgIGlmKHZhbCl7CiAgICAgICAgICAgIHRoaXMuZGlzYWJsZVpvb20oKQogICAgICAgICAgICB0aGlzLmVuYWJsZUxhc3NvKCkKICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgLy8gY3VycmVudCBpcyB6b29tIAogICAgICAgICAgICB0aGlzLmRpc2FibGVMYXNzbygpCiAgICAgICAgICAgIHRoaXMuZW5hYmxlWm9vbVBhbigpCiAgICAgICAgfQogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMubGFzc29TdGF0dXMsIHRoaXMuem9vbVBhblN0YXR1cykKICAgICAgICAKICAgICAgICB9LAogICAgICAgIGVuYWJsZVpvb21QYW4oKXsKICAgICAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3QoJyNkaXZfZ3JhcGgnKS5zZWxlY3QoInN2ZyIpIAogICAgICAgIHN2Zy5jYWxsKGQzLnpvb20oKS5vbignem9vbScsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHNjYWxlID0gZDMuZXZlbnQudHJhbnNmb3JtLmssCiAgICAgICAgICAgIHRyYW5zbGF0ZSA9IFtkMy5ldmVudC50cmFuc2Zvcm0ueCwgZDMuZXZlbnQudHJhbnNmb3JtLnldCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKDEpCiAgICAgICAgICAgIGNvbnN0IGcgPSBzdmcuc2VsZWN0KCJnIikKICAgICAgICAgICAgZy5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVbMF0gKyAnLCAnICsgdHJhbnNsYXRlWzFdICsgJykgc2NhbGUoJyArIHNjYWxlICsgJyknKQogICAgICAgIH0pKQogICAgICAgIC5vbignZGJsY2xpY2suem9vbScsIG51bGwpCiAgICAgICAgfSwKICAgICAgICBkaXNhYmxlTGFzc28oKSB7CiAgICAgICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KCcjZGl2X2dyYXBoJykuc2VsZWN0KCJzdmciKSAKICAgICAgICBzdmcub24oIi5kcmFnc3RhcnQiLCBudWxsKTsKICAgICAgICBzdmcub24oIi5kcmFnIiwgbnVsbCk7CiAgICAgICAgc3ZnLm9uKCIuZHJhZ2VuZCIsIG51bGwpOwogICAgICAgIH0sIAogICAgICAgIGVuYWJsZUxhc3NvKCl7CiAgICAgICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KCcjZGl2X2dyYXBoJykuc2VsZWN0KCJzdmciKQogICAgICAgIHZhciBjaXJjbGVzX3F1ZXN0aW9uID0gc3ZnLnNlbGVjdEFsbCgnLm91dGxpbmUnKQogICAgICAgIGxldCB0aGF0ID0gdGhpcwogICAgICAgIHZhciBsYXNzb19zdGFydCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coMTExKQogICAgICAgICAgICBsYXNzby5pdGVtcygpCiAgICAgICAgICAgIC5hdHRyKCdmaWxsJywgImdyZWVuIikKICAgICAgICAgICAgLmNsYXNzZWQoJ25vdF9wb3NzaWJsZScsIHRydWUpCiAgICAgICAgICAgIC5jbGFzc2VkKCdzZWxlY3RlZCcsIGZhbHNlKQogICAgICAgIH0KICAgICAgICB2YXIgbGFzc29fZHJhdyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8gU3R5bGUgdGhlIHBvc3NpYmxlIGRvdHMKICAgICAgICAgICAgbGFzc28ucG9zc2libGVJdGVtcygpCiAgICAgICAgICAgIC5jbGFzc2VkKCdub3RfcG9zc2libGUnLCBmYWxzZSkKICAgICAgICAgICAgLmNsYXNzZWQoJ3Bvc3NpYmxlJywgdHJ1ZSkKCiAgICAgICAgICAgIC8vIFN0eWxlIHRoZSBub3QgcG9zc2libGUgZG90CiAgICAgICAgICAgIGxhc3NvLm5vdFBvc3NpYmxlSXRlbXMoKQogICAgICAgICAgICAuY2xhc3NlZCgnbm90X3Bvc3NpYmxlJywgdHJ1ZSkKICAgICAgICAgICAgLmNsYXNzZWQoJ3Bvc3NpYmxlJywgZmFsc2UpCiAgICAgICAgfQogICAgICAgIHZhciBsYXNzb19lbmQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxhc3NvLml0ZW1zKCkKICAgICAgICAgICAgLmNsYXNzZWQoJ25vdF9wb3NzaWJsZScsIGZhbHNlKQogICAgICAgICAgICAuY2xhc3NlZCgncG9zc2libGUnLCBmYWxzZSkKCiAgICAgICAgICAgIGxhc3NvLnNlbGVjdGVkSXRlbXMoKQogICAgICAgICAgICAuc3R5bGUoJ3N0cm9rZScsJ3JlZCcpCiAgICAgICAgICAgIC5jbGFzc2VkKCdzZWxlY3RlZCcsIHRydWUpCiAgICAgICAgICAgIHRoYXQuc2VsZWN0ZWRFbnRpdGllc1snb250J10uc3BsaWNlKDAsIHRoYXQuc2VsZWN0ZWRFbnRpdGllcy5sZW5ndGgpCiAgICAgICAgICAgIHRoYXQuc2VsZWN0ZWRFbnRpdGllc1sndm9jYWInXS5zcGxpY2UoMCwgdGhhdC5zZWxlY3RlZEVudGl0aWVzLmxlbmd0aCkKICAgICAgICAgICAgLy8gdGhhdC5zZWxlY3RlZFJlbGF0aW9ucy5zcGxpY2UoMCwgdGhhdC5zZWxlY3RlZFJlbGF0aW9ucy5sZW5ndGgpIAogICAgICAgICAgICBsYXNzby5zZWxlY3RlZEl0ZW1zKCkuZWFjaChmdW5jdGlvbihkKXsKICAgICAgICAgICAgY29uc3QgbGFiZWwgPSB0aGlzLm5vZGVOYW1lIAogICAgICAgICAgICBjb25zb2xlLmxvZyhkKQogICAgICAgICAgICBpZihkLnR5cGU9PSJub2RlIil7CiAgICAgICAgICAgICAgICBpZihkLnZvY2FiKXsKICAgICAgICAgICAgICAgIHRoYXQuc2VsZWN0ZWRFbnRpdGllc1sndm9jYWInXS5wdXNoKGQuaWQpCiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIHRoYXQuc2VsZWN0ZWRFbnRpdGllc1snb250J10ucHVzaChkLmlkKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoYXQuc2VsZWN0ZWRFbnRpdGllcykKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgdmFyIGxhc3NvID0gZDNMYXNzby5sYXNzbygpCiAgICAgICAgICAgIC5jbG9zZVBhdGhTZWxlY3QodHJ1ZSkKICAgICAgICAgICAgLmNsb3NlUGF0aERpc3RhbmNlKDEwMCkKICAgICAgICAgICAgLml0ZW1zKGNpcmNsZXNfcXVlc3Rpb24pCiAgICAgICAgICAgIC50YXJnZXRBcmVhKHN2ZykKICAgICAgICAgICAgLm9uKCdzdGFydCcsIGxhc3NvX3N0YXJ0KQogICAgICAgICAgICAub24oJ2RyYXcnLCBsYXNzb19kcmF3KQogICAgICAgICAgICAub24oJ2VuZCcsIGxhc3NvX2VuZCkKCiAgICAgICAgc3ZnLmNhbGwobGFzc28pCiAgICAgICAgfSwgCiAgICAgICAgZGlzYWJsZVpvb20oKSB7CiAgICAgICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KCcjZGl2X2dyYXBoJykuc2VsZWN0KCJzdmciKSAKICAgICAgICBzdmcub24oJy56b29tJywgbnVsbCkKICAgICAgICB9LAogICAgICAgIHRvZ2dsZVpvb21QYW5MYXNzbygpewogICAgICAgIGNvbnNvbGUubG9nKHRoaXMubGFzc29TdGF0dXMsIHRoaXMuem9vbVBhblN0YXR1cykKICAgICAgICB0aGlzLnpvb21QYW5TdGF0dXMgPSAhdGhpcy56b29tUGFuU3RhdHVzIAogICAgICAgIHRoaXMubGFzc29TdGF0dXMgPSAhdGhpcy5sYXNzb1N0YXR1cwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMubGFzc29TdGF0dXMsIHRoaXMuem9vbVBhblN0YXR1cykKICAgICAgICB9LCAKICAgICAgICBjaGFuZ2VGaWx0ZXJzKHZhbCl7CiAgICAgICAgY29uc29sZS5sb2codmFsKQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWRGaWx0ZXJzKQogICAgICAgIH0sCiAgICAgICAgZHJhdygpewogICAgICAgIHZhciB0aGF0ID0gdGhpcwogICAgICAgIHZhciBuZW80amQzID0gTmVvNGpkMy5kZWZhdWx0KCcjZGl2X2dyYXBoJywgewogICAgICAgICAgICBuZW80akRhdGE6IHRoaXMuRywKICAgICAgICAgICAgbm9kZVJhZGl1czogMzAsCiAgICAgICAgICAgIGluZm9QYW5lbDogZmFsc2UsCiAgICAgICAgICAgIG9uTm9kZUNsaWNrOiBmdW5jdGlvbihyZWwpewogICAgICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXModGhhdC4kcmVmcykpewogICAgICAgICAgICAgICAgdGhhdC4kbmV4dFRpY2soKCkgPT4gdmFsdWVbMF0uYmx1cigpKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhhdC4kbmV4dFRpY2soKCkgPT4gdGhhdC4kcmVmc1snZmlsdGVyLScrcmVsLmlkXVswXS5mb2N1cygpKQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG9uUmVsYXRpb25zaGlwQ2xpY2s6IGZ1bmN0aW9uKHJlbCl7CiAgICAgICAgICAgICAgICB0aGF0LmNvbnRlbnQgPSAiIgogICAgICAgICAgICAgICAgdGhhdC5yZWxhdGlvbnMgPSBbXQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsaWNrIG9uIHJlbGF0aW9uJywgcmVsKQogICAgICAgICAgICAgICAgdGhhdC5kaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgICAgICAgICAgICAgdmFyIHJlbGF0aW9ucyA9IHJlbFsncHJvcGVydGllcyddCiAgICAgICAgICAgICAgICB2YXIgbGVuZ3RoID0gT2JqZWN0LmtleXMocmVsYXRpb25zKS5sZW5ndGgKICAgICAgICAgICAgICAgIHRoYXQuY29udGVudCArPSAiVGhlcmUgaXMgKGFyZSkgIiArIGxlbmd0aC50b1N0cmluZygpICsgIiB0eXBlKHMpIG9mIGxpbmtzIGZyb20gIiArIHJlbFsnc3RhcnROb2RlJ10gKyAnIHRvICcgKyByZWxbJ2VuZE5vZGUnXSsnXG4nIAogICAgICAgICAgICAgICAgdGhhdC5jb250ZW50ICs9ICJUaGUgdHlwZXMgY29udGFpbjogIiArICdcbicKICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHJlbGF0aW9ucykpIHsKICAgICAgICAgICAgICAgIHRoYXQucmVsYXRpb25zLnB1c2goa2V5KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICB0aGlzLm5lbzRqZDMgPSBuZW80amQzCiAgICAgICAgaWYgKHRoYXQubGFzc29TdGF0dXMpIHsKICAgICAgICAgICAgdGhhdC5kaXNhYmxlWm9vbSgpCiAgICAgICAgICAgIHRoYXQuZW5hYmxlTGFzc28oKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoYXQuZGlzYWJsZUxhc3NvKCkgCiAgICAgICAgICAgIHRoYXQuZW5hYmxlWm9vbVBhbigpCiAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["Neo4jd3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"Neo4jd3.vue","sourceRoot":"src/components/analyzer","sourcesContent":["<template>\n    <div>\n        <v-row>\n            <v-switch\n                v-model=\"lassoStatus\"\n                inset\n                :change=\"lassoToggleHandler\"\n                :label=\"`Lasso: ${lassoStatus.toString()}`\"\n                ></v-switch>\n        </v-row>\n        <v-row>\n            <div id=\"div_graph\" class=\"fullHeight\" :style=\"{'height': height}\"></div>\n        </v-row>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    props: ['G','height'],\n    data(){\n        return{\n            lassoStatus: false\n        }\n    },\n    created(){\n\n    },\n    watch:{\n        G: function(newVal, oldVal){\n            this.draw()\n        } \n    },\n    methods: {\n        lassoToggleHandler(val){\n        if(val){\n            this.disableZoom()\n            this.enableLasso()\n        }else{\n            // current is zoom \n            this.disableLasso()\n            this.enableZoomPan()\n        }\n        // console.log(this.lassoStatus, this.zoomPanStatus)\n        \n        },\n        enableZoomPan(){\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.call(d3.zoom().on('zoom', function () {\n            var scale = d3.event.transform.k,\n            translate = [d3.event.transform.x, d3.event.transform.y]\n            // console.log(1)\n            const g = svg.select(\"g\")\n            g.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')')\n        }))\n        .on('dblclick.zoom', null)\n        },\n        disableLasso() {\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.on(\".dragstart\", null);\n        svg.on(\".drag\", null);\n        svg.on(\".dragend\", null);\n        }, \n        enableLasso(){\n        const svg = d3.select('#div_graph').select(\"svg\")\n        var circles_question = svg.selectAll('.outline')\n        let that = this\n        var lasso_start = function () {\n            // console.log(111)\n            lasso.items()\n            .attr('fill', \"green\")\n            .classed('not_possible', true)\n            .classed('selected', false)\n        }\n        var lasso_draw = function () {\n            // Style the possible dots\n            lasso.possibleItems()\n            .classed('not_possible', false)\n            .classed('possible', true)\n\n            // Style the not possible dot\n            lasso.notPossibleItems()\n            .classed('not_possible', true)\n            .classed('possible', false)\n        }\n        var lasso_end = function () {\n            lasso.items()\n            .classed('not_possible', false)\n            .classed('possible', false)\n\n            lasso.selectedItems()\n            .style('stroke','red')\n            .classed('selected', true)\n            that.selectedEntities['ont'].splice(0, that.selectedEntities.length)\n            that.selectedEntities['vocab'].splice(0, that.selectedEntities.length)\n            // that.selectedRelations.splice(0, that.selectedRelations.length) \n            lasso.selectedItems().each(function(d){\n            const label = this.nodeName \n            console.log(d)\n            if(d.type==\"node\"){\n                if(d.vocab){\n                that.selectedEntities['vocab'].push(d.id)\n                }else{\n                that.selectedEntities['ont'].push(d.id)\n                }\n            }\n            console.log(that.selectedEntities)\n            })\n        }\n        var lasso = d3Lasso.lasso()\n            .closePathSelect(true)\n            .closePathDistance(100)\n            .items(circles_question)\n            .targetArea(svg)\n            .on('start', lasso_start)\n            .on('draw', lasso_draw)\n            .on('end', lasso_end)\n\n        svg.call(lasso)\n        }, \n        disableZoom() {\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.on('.zoom', null)\n        },\n        toggleZoomPanLasso(){\n        console.log(this.lassoStatus, this.zoomPanStatus)\n        this.zoomPanStatus = !this.zoomPanStatus \n        this.lassoStatus = !this.lassoStatus\n        console.log(this.lassoStatus, this.zoomPanStatus)\n        }, \n        changeFilters(val){\n        console.log(val)\n        console.log(this.selectedFilters)\n        },\n        draw(){\n        var that = this\n        var neo4jd3 = Neo4jd3.default('#div_graph', {\n            neo4jData: this.G,\n            nodeRadius: 30,\n            infoPanel: false,\n            onNodeClick: function(rel){\n                for (const [key, value] of Object.entries(that.$refs)){\n                that.$nextTick(() => value[0].blur())\n                }\n                that.$nextTick(() => that.$refs['filter-'+rel.id][0].focus())\n                \n            },\n            onRelationshipClick: function(rel){\n                that.content = \"\"\n                that.relations = []\n                console.log('click on relation', rel)\n                that.dialogVisible = true\n                var relations = rel['properties']\n                var length = Object.keys(relations).length\n                that.content += \"There is (are) \" + length.toString() + \" type(s) of links from \" + rel['startNode'] + ' to ' + rel['endNode']+'\\n' \n                that.content += \"The types contain: \" + '\\n'\n                for (const [key, value] of Object.entries(relations)) {\n                that.relations.push(key)\n                }\n            }\n        })\n        this.neo4jd3 = neo4jd3\n        if (that.lassoStatus) {\n            that.disableZoom()\n            that.enableLasso()\n        } else {\n            that.disableLasso() \n            that.enableZoomPan()\n        }\n        }\n    }\n}\n</script>\n"]}]}