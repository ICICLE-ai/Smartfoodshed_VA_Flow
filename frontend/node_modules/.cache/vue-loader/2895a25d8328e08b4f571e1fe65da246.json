{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/index.vue?vue&type=style&index=0&id=446eef7e&scoped=true&lang=css&","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/index.vue","mtime":1666792539702},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1661232574857},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1661232574959},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1661232574881},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661232574916}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2FyZC1vbnRwYXJzZXIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZmxleC13cmFwOiB3cmFwOwogIGhlaWdodDogMTAwJTsKfQouc2hlZXRuYW1lewogIG1hcmdpbi10b3A6IDEwcHg7CiAgaGVpZ2h0OiAyMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/analyzer/ontparser","sourcesContent":["<template>\n    <Ctemplate \n      :itemProps=\"itemProps\" \n      @contextmenu=\"contextButtonClickedHandler\" \n      :contextCommands=\"contextCommands\"\n      :styleProps=\"styleProps\"\n      @dblclick=\"dblclickHandler\"\n      :fixed=\"FIXED\"\n    >\n      <!-- <template v-slot:fullView>\n        <OntParser :itemProps=\"itemProps\" ref=\"inner\" :innerStyle=\"innerStyle\" :fixed=\"FIXED\"/>\n      </template> -->\n      <template #minimizeView>\n        <span>testing corpus</span>\n      </template>\n      <template #fullView>\n        <span>testing fullview</span>\n      </template>\n    </Ctemplate>\n  </template>\n  \n  <script>\n  import OntParser from './Inner.vue'\n  export default {\n    props: ['itemProps'], \n    components: {\n        OntParser, \n    }, \n    data() {\n      return {\n        contextCommands: [], \n        styleFull: {width: '1000', height: '800'},\n        styleMinimize: {width: '300', height: '300'},\n        minimizeStatus: false, \n        FIXED: false \n      }\n    }, \n    methods: {\n      contextButtonClickedHandler(button) {\n        alert(button)\n        if (button === 'Minimize') {\n          this.minimizeStatus = !this.minimizeStatus \n        }\n        \n      }, \n      dblclickHandler() {\n        this.toggleFixCompPos();\n      }, \n  \n      toggleFixCompPos() {\n        this.FIXED = !this.FIXED;\n        if (!this.dataStatus) {\n          return;\n        }\n        if (this.FIXED) {\n          componentDisableDragHandler(\n            `.globalview-canvas-${this.itemProps.id}`,\n            this.toolStatus\n          );\n        } else {\n          componentEnableDragHandler(\n            `.globalview-canvas-${this.itemProps.id}`,\n            this.toolStatus\n          );\n        }\n      },\n    },\n    computed:{\n      innerStyle(){\n        return {\n          'height': parseInt(this.styleProps['height'].replace('px','')),\n          'width': parseInt(this.styleProps['width'].replace('px',''))\n        }\n      }, \n      styleProps() {\n        if (this.minimizeStatus) {\n          return this.styleMinimize\n        }else {\n          return this.styleFull\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .card-ontparser {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n  .sheetname{\n    margin-top: 10px;\n    height: 20px;\n  }\n  </style>"]}]}