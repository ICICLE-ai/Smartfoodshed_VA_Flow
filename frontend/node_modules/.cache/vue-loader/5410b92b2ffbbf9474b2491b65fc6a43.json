{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/linker/table2cypher/Loader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/linker/table2cypher/Loader.vue","mtime":1661441978839},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFByaXNtRWRpdG9yIH0gZnJvbSAndnVlLXByaXNtLWVkaXRvcic7CmltcG9ydCAndnVlLXByaXNtLWVkaXRvci9kaXN0L3ByaXNtZWRpdG9yLm1pbi5jc3MnOyAvLyBpbXBvcnQgdGhlIHN0eWxlcyBzb21ld2hlcmUKCi8vIGltcG9ydCBoaWdobGlnaHRpbmcgbGlicmFyeSAoeW91IGNhbiB1c2UgYW55IGxpYnJhcnkgeW91IHdhbnQganVzdCByZXR1cm4gaHRtbCBzdHJpbmcpCmltcG9ydCB7IGhpZ2hsaWdodCwgbGFuZ3VhZ2VzIH0gZnJvbSAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWNvcmUnOwppbXBvcnQgJ3ByaXNtanMvY29tcG9uZW50cy9wcmlzbS1jbGlrZSc7CmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLW1hcmt1cCc7CmltcG9ydCAncHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWphdmFzY3JpcHQnOwppbXBvcnQgInByaXNtanMvdGhlbWVzL3ByaXNtLXRvbW9ycm93LmNzcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBQcmlzbUVkaXRvcgogIH0sICAKICBkYXRhKCl7CiAgICByZXR1cm4gewogICAgICBzaW5nbGVTZWxlY3Q6IGZhbHNlLAogICAgICBzZWxlY3RlZDogW10sCiAgICAgIHVwbG9hZGVkX2ZpbGU6IG51bGwsCiAgICAgIGNvZGU6IGBmdW5jdGlvbiBnZW5lcmF0aW9uRW50aXR5UmVsYXRpb25zKGl0ZW1zKXtcbiAgICBsZXQgbm9kZXMgPSBbXVxuICAgIGxldCByZWxhdGlvbnMgPSBbXSBcbiAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICBpZihpdGVtLnJlbGF0aW9uX2lkICE9IG51bGwpe1xuICAgICAgICAgICAgcmVsYXRpb25zLnB1c2goaXRlbS5yZWxhdGlvbl9pZClcbiAgICAgICAgfWVsc2UgaWYoaXRlbS5pZCAhPSBudWxsKSB7XG4gICAgICAgICAgICBub2Rlcy5wdXNoKGl0ZW0uaWQpXG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgY29uc29sZS5sb2coIkVycm9yLCBpdGVtIGRvZXNuJ3QgaGF2ZSBpZCBvciByZWxhdGlvbl9pZCIpXG4gICAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiB7bm9kZXMsIHJlbGF0aW9uc31cbn1gCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBoaWdobGlnaHRlcihjb2RlKSB7CiAgICAgICAgcmV0dXJuIGhpZ2hsaWdodCgKICAgICAgICBjb2RlLAogICAgICAgIHsKICAgICAgICAgIC4uLmxhbmd1YWdlc1snbWFya3VwJ10sCiAgICAgICAgICAuLi5sYW5ndWFnZXNbJ2pzJ10sCiAgICAgICAgICAuLi5sYW5ndWFnZXNbJ2NzcyddLAogICAgICAgIH0sCiAgICAgICAgJ21hcmt1cCcKICAgICAgKTsKICAgIH0sCiAgICBjYW5jZWxTZWxlY3QoKXsKICAgICAgdGhpcy4kZW1pdCgnbG9hZGVyQWN0aW9uJywge3N0YXR1czogJ2ZhaWwnfSkKICAgICAgdGhpcy5zZWxlY3RlZCA9IFtdCiAgICB9LAogICAgY29uZmlybVNlbGVjdCgpewogICAgICBjb25zdCBmdW5jID0gZXZhbChgKCR7dGhpcy5jb2RlfSlgKQogICAgICB0aGlzLiRlbWl0KCdsb2FkZXJBY3Rpb24nLCB7c3RhdHVzOiAnc3VjY2VzcycsIHNjcmlwdDogZnVuY30pCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdXBsb2FkZWRfZmlsZXMoKXsKICAgICAgY29uc29sZS5sb2codGhpcy51cGxvYWRlZF9maWxlcykKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Loader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Loader.vue","sourceRoot":"src/components/linker/table2cypher","sourcesContent":["<template>\n  <v-card>\n    <v-card-title class=\"headline\">\n      Parsing Script\n    </v-card-title>\n    <v-divider></v-divider>\n    <prism-editor class=\"my-editor\" v-model=\"code\" language=\"html\" :highlight=\"highlighter\" line-numbers></prism-editor>\n    <v-card-actions class=\"mt-5\">\n      <v-spacer></v-spacer>\n      <v-btn\n        text\n        color=\"error\"\n        @click=\"cancelSelect\"\n      >\n        Cancel\n      </v-btn>\n       <v-btn\n        text\n        color=\"primary\"\n        @click=\"confirmSelect\"\n       >\n        Confirm\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport { PrismEditor } from 'vue-prism-editor';\nimport 'vue-prism-editor/dist/prismeditor.min.css'; // import the styles somewhere\n\n// import highlighting library (you can use any library you want just return html string)\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-javascript';\nimport \"prismjs/themes/prism-tomorrow.css\";\nexport default {\n  components: {\n    PrismEditor\n  },  \n  data(){\n    return {\n      singleSelect: false,\n      selected: [],\n      uploaded_file: null,\n      code: `function generationEntityRelations(items){\\n    let nodes = []\\n    let relations = [] \\n    items.forEach(item => {\\n        if(item.relation_id != null){\\n            relations.push(item.relation_id)\\n        }else if(item.id != null) {\\n            nodes.push(item.id)\\n        }else{\\n            console.log(\"Error, item doesn't have id or relation_id\")\\n        }\\n    })\\n    return {nodes, relations}\\n}`\n    }\n  },\n  methods: {\n    highlighter(code) {\n        return highlight(\n        code,\n        {\n          ...languages['markup'],\n          ...languages['js'],\n          ...languages['css'],\n        },\n        'markup'\n      );\n    },\n    cancelSelect(){\n      this.$emit('loaderAction', {status: 'fail'})\n      this.selected = []\n    },\n    confirmSelect(){\n      const func = eval(`(${this.code})`)\n      this.$emit('loaderAction', {status: 'success', script: func})\n    }\n  },\n  watch: {\n    uploaded_files(){\n      console.log(this.uploaded_files)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.my-editor {\n  background-color: #fafafa;\n  color: black;\n  max-height: 400px;\n  font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\n  font-size: 14px;\n  line-height: 1.5;\n  padding: 5px 10px;\n  font-weight: bold;\n}\n\n  /* optional class for removing the outline */\n  .prism-editor__textarea:focus {\n    outline: none;\n  }\n</style>"]}]}