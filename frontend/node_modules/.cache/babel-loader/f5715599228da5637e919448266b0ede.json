{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/ontparser.js","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/ontparser.js","mtime":1664810302754},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/ontparser.js"],"names":["getComponentType","getTargetCard","base_request_url","axios","createNewOntParserCard","id","sourceLink","targetLink","marginLeft","marginTop","width","height","inputData","linkml","vocabulary","selectedItems","loadingStatus","data_ontology","data_filter","keep_in_vis_mode","namespaced","state","nextAvailableIndex","cards","component","mutations","SET_data_filter","status","i","SET_data_ontology","SET_loadingStatus","console","log","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","splice","ADD_SOURCE_LINK","linkData","source","ADD_TARGET_LINK","target","UPDATE_SOURCE","j","UPDATE_TARGET","REMOVE_SOURCELINK","REMOVE_TARGETLINK","undefined","SET_INPUTDATA","link","UPDATE_POS","UPDATE_SIZE","UPDATE_SELECTED_ITEMS","selected","KEEP_IN_VIS","actions","parseOnt","data","commit","dispatch","path","post","result","addComp","updatePos","updateSize","deleteComp","toDeletedComp","filter","card","toDeleteSourceLink","toDeleteTargetLink","forEach","root","addLink","updateLink","removeLink","updateSelectedItems","targetCard","length","inputHandler","sourceCompType","targetCompType","alert","outputHandler","wrapUpDataForTableExport","keepInVis"],"mappings":"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","sourcesContent":["import {getComponentType, getTargetCard} from '@/utils/help'\nimport { base_request_url } from '@/utils/base_url'\nimport axios from 'axios'\nfunction createNewOntParserCard(id){\n  return {\n    id: `card-ontparser-${id}`,\n    sourceLink: [], //\n    targetLink: [], \n    marginLeft: null, \n    marginTop: null, \n    width: 500, \n    height: 300,\n    inputData: {\n      linkml: null,\n      vocabulary: null\n    },\n    selectedItems: [],\n    loadingStatus: false,\n    data_ontology: [],\n    data_filter: [],\n    keep_in_vis_mode: false \n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [],\n    component: () => import('@/components/analyzer/ontparser'), \n    \n\n  }, \n  mutations: {\n    SET_data_filter(state, {id, status}){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].data_filter = status\n        }\n      }\n    },\n    SET_data_ontology(state, {id, status}){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].data_ontology = status\n        }\n      }\n    },\n    SET_loadingStatus(state, {id, status}){\n      console.log('loading status changing,,,', id, status)\n      for(let i in state.cards){\n        console.log(state.cards[i].id)\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].loadingStatus = status\n        }\n      }\n    },\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewOntParserCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          break\n        }\n      }\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      console.log('addlink!!!');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    ADD_TARGET_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          state.cards[i].targetLink.push(linkData);\n          return;\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n    REMOVE_TARGETLINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              state.cards[i].targetLink.splice(j, 1);\n              state.cards[i].inputData = undefined;\n            }\n          }\n        }\n      }\n    }, \n    SET_INPUTDATA(state, {link, inputData}){\n      for(let i in state.cards){\n        if(state.cards[i].id == link.target){\n          state.cards[i].inputData = inputData;\n          // console.log('check card data',state.cards[i].inputData)\n        }\n      }\n    }, \n    UPDATE_POS(state, {id, marginLeft, marginTop}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].marginTop = marginTop \n          state.cards[i].marginLeft = marginLeft\n        }\n      }\n    }, \n    UPDATE_SIZE(state, {id, width, height}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].width = width \n          state.cards[i].height = height\n        }\n      }\n    },\n    UPDATE_SELECTED_ITEMS(state, {id, selected}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].selectedItems = selected\n        }\n      }\n    }, \n    KEEP_IN_VIS(state, id) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].keep_in_vis_mode = !state.cards[i].keep_in_vis_mode\n        }\n      } \n    }\n  }, \n  actions: {\n\n    async parseOnt({commit, state, dispatch}, data){\n      commit('SET_loadingStatus', {'id': data['id'], 'status':true})\n      let path = base_request_url + 'getOntology'\n      let result = await axios.post(path, data)\n      \n      commit('SET_data_ontology', {'id': data['id'], 'status':result['data']['ontology']})\n      commit('SET_data_filter', {'id': data['id'], 'status': result['data']['filter']} )\n      commit('SET_loadingStatus', {'id': data['id'],'status':false})\n    },\n    addComp({commit}, ){\n      commit('ADD_COMPONENT');\n    },\n\n    updatePos({commit}, {id, marginTop, marginLeft}) {\n      commit('UPDATE_POS', {id, marginTop, marginLeft})\n    }, \n\n    updateSize({commit}, {id, width, height}) {\n      commit('UPDATE_SIZE', {id, width, height})\n    }, \n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      const toDeleteTargetLink = [...toDeletedComp.targetLink];\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      toDeleteTargetLink.forEach(link => {\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      commit('DELETE_COMPONENT', id);\n    }, \n    addLink({commit, dispatch}, data){\n      if(data.status == \"source\"){\n        commit('ADD_SOURCE_LINK', data)\n        dispatch('outputHandler', data)\n      }else{\n        commit('ADD_TARGET_LINK', data)\n        //dispatch('inputHandler', linkData)\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        commit('REMOVE_TARGETLINK', linkData)\n      }\n    },\n    \n    updateSelectedItems({state, commit, dispatch}, {id, selected}) {\n      commit('UPDATE_SELECTED_ITEMS', {id, selected})\n      const targetCard = getTargetCard(state.cards, id) \n      if (targetCard.sourceLink.length > 0) {\n        for (let i in targetCard.sourceLink) {\n          dispatch('outputHandler', targetCard.sourceLink[i])\n        }\n      }\n    },\n    // Input Handler will be triggered by other components\n    // When source Component\n    inputHandler({commit, state, dispatch}, {link, inputData}){\n      const sourceCompType = getComponentType(link.source);\n      const targetCompType = getComponentType(link.target);\n      if(inputData['linkml']!=\"\"  & inputData['vocabulary']!=\"\"){\n        console.log('commit')\n        commit('SET_INPUTDATA', {link, inputData})\n        inputData['id'] = link.target;\n        dispatch('parseOnt', inputData)\n      }else{\n        alert('linkml and vocabulary are required!')\n      }\n    }, \n\n    outputHandler({commit, state, dispatch}, linkData){\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData: wrapUpDataForTableExport(targetCompType, state.cards[i])}, {root: true})\n          return;\n        }\n      }\n    },\n    keepInVis({commit}, id) {\n      commit('KEEP_IN_VIS', id)\n    }\n  }\n}"]}]}