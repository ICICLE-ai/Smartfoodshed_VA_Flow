{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/viewer/vegacharter.js","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/viewer/vegacharter.js","mtime":1666790788331},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1660324544800},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661232574882}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/viewer/vegacharter.js"],"names":["getComponentType","axios","base_request_url","createNewVegaRender","id","inputData","sourceLink","targetLink","marginLeft","marginTop","width","height","data","info","namespaced","state","nextAvailableIndex","cards","component","mutations","SET_DATA","console","log","i","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","splice","UPDATE_POS","ADD_SOURCE_LINK","linkData","source","ADD_TARGET_LINK","target","UPDATE_SOURCE","j","UPDATE_TARGET","UPDATE_SIZE","REMOVE_SOURCELINK","REMOVE_TARGETLINK","undefined","SET_INPUTDATA","link","actions","updatePos","commit","addComp","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","toDeleteTargetLink","forEach","root","addLink","status","updateLink","removeLink","updateSize","inputHandler","sourceCompType","targetCompType","path","post","result","temp_date","temp_info","outputHandler"],"mappings":"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","sourcesContent":["import {getComponentType} from '@/utils/help'\nimport axios from 'axios'\nimport { base_request_url } from '@/utils/base_url'\n\nfunction createNewVegaRender(id){\n  return {\n    id: `card-vegacharter-${id}`,\n    inputData: null, \n    // selectedVegaRender: null, \n    sourceLink: [], //\n    targetLink: [], \n    marginLeft: null, \n    marginTop: null, \n    width: null, \n    height: null,\n    data: [], \n    info: {} // additional information about different type of data columns \n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [],\n    component: () => import('@/components/viewer/vegacharter'), \n  }, \n  mutations: {\n    SET_DATA(state, {id, data, info}){\n      console.log('inside set data', id, data, info)\n      for(let i in state.cards){\n        if(state.cards[i].id==`${id}`){\n          state.cards[i].data = data\n          state.cards[i].info = info\n        }\n      }\n    },\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewVegaRender(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          break\n        }\n      }\n    }, \n    UPDATE_POS(state, {id, marginLeft, marginTop}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].marginTop = marginTop \n          state.cards[i].marginLeft = marginLeft\n        }\n      }\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      console.log('addlink!!!');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    ADD_TARGET_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          state.cards[i].targetLink.push(linkData);\n          return;\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_SIZE(state, {id, width, height}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].width = width \n          state.cards[i].height = height\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n    REMOVE_TARGETLINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink.splice(j, 1);\n              state.cards[i].inputData = undefined;\n            }\n          }\n        }\n      }\n    }, \n    SET_INPUTDATA(state, {link, inputData}){\n      console.log('inside set inputdata', link, inputData)\n      for(let i in state.cards){\n        if(state.cards[i].id == link.target){\n          state.cards[i].inputData = inputData;\n\n        }\n      }\n    }, \n  }, \n  actions: {\n    updatePos({commit}, {id, marginTop, marginLeft}) {\n      commit('UPDATE_POS', {id, marginTop, marginLeft})\n    }, \n    addComp({commit}, ){\n      console.log('test')\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      const toDeleteTargetLink = [...toDeletedComp.targetLink];\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      toDeleteTargetLink.forEach(link => {\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      commit('DELETE_COMPONENT', id);\n    }, \n    addLink({commit}, data){\n      console.log('tuyamei test, add link')\n      if(data.status == \"source\"){\n        commit('ADD_SOURCE_LINK', data)\n        dispatch('outputHandler', linkData)\n      }else{\n        commit('ADD_TARGET_LINK', data)\n        //dispatch('inputHandler', linkData)\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        commit('REMOVE_TARGETLINK', linkData)\n      }\n    },\n    \n    updateSize({commit}, {id, width, height}) {\n      commit('UPDATE_SIZE', {id, width, height})\n    }, \n    // Input Handler will be triggered by other components\n    // When source Component\n    async inputHandler({commit, state, }, {link, inputData}){\n      const sourceCompType = getComponentType(link.source);\n      const targetCompType = getComponentType(link.target);\n      if(inputData){\n        commit('SET_INPUTDATA', {link, inputData}) \n\n        let path = base_request_url + 'genVega'\n        let result = await axios.post(path, {'data':inputData})\n        console.log(result.data)\n        let temp_date = result.data['data']\n        let temp_info = result.data['info']\n        commit('SET_DATA', {id: link.target, data: temp_date, info: temp_info})\n      }\n    }, \n\n    outputHandler({commit, state, }, linkData){\n      const targetCompType = getComponentType(linkData.target);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData: state.cards[i].inputData}, {root: true})\n          return;\n        }\n      }\n    },\n\n    \n    \n  }\n}"]}]}