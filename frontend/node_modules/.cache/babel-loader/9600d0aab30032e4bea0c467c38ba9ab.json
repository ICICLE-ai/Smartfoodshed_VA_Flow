{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/Inner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/Inner.vue","mtime":1666113169379},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Inner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"card-inner\" :style=\"{border: getBorder}\">\n       \n        <v-divider style=\"margin-top:7px; margin-bottom:4px\"></v-divider>\n        <v-row style=\"overflow: scroll\">\n          <v-col cols=\"3\">\n            <div v-if=\"showFilters\" v-for=\"(ele,index) in filtersData\" :style=\"{'width': filterWidth}\">\n                <v-select :items=\"ele.permissible_values\"\n                    item-text=\"name\"\n                    :label = \"ele.name\"\n                    :ref = \"'filter-'+ele.name\"\n                    multiple\n                    style=\"height:50px\"\n                    @change=\"changeFilters\"\n                    v-model=\"selectedFilters[ele.name]\"\n                    item-value=\"meaning\"\n                    >\n                    <template v-slot:selection=\"{ item, index }\">\n                      <v-chip v-if=\"index === 0\">\n                        <span>{{ item.name }}</span>\n                      </v-chip>\n                      <span\n                        v-if=\"index === 1\"\n                        class=\"grey--text text-caption\"\n                      >\n                        (+{{ selectedFilters[ele.name].length - 1 }} others)\n                      </span>\n                    </template>\n                  </v-select>\n                <!-- <el-select @change=\"changeFilters\" v-model=\"selectedFilters[ele.name]\" multiple :placeholder=\"ele.name\" :ref=\"'filter-'+ele.name\" automatic-dropdown collapse-tags fit-input-width\t>\n                    <el-option\n                    v-for=\"item in ele.permissible_values\"\n                    :key=\"item.name\"\n                    :label=\"item.name\"\n                    :value=\"item.meaning\"\n                    />\n                </el-select>  -->\n            </div>\n          </v-col>\n          <v-col cols=\"21\">\n            <KGViewer :G=\"itemProps.data_ontology\" :height=\"childrenHeight\" :width=\"childrenWidth\"  @on-node-click-event=\"onNodeClick\" @on-lasso-event=\"prepareGenSPAQL\"></KGViewer>\n          </v-col>\n        </v-row>\n        \n        <v-overlay :value=\"loading_value\">\n        <v-progress-circular\n          indeterminate\n          size=\"64\"\n        ></v-progress-circular>\n      </v-overlay>\n    </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport * as d3tip from '@/utils/d3-tip'\nimport GlobalviewMenuBar from '@/components/utility/GlobalViewTool/GlobalviewMenuBar'\nimport {\n  componentEnableDragHandler,\n  componentDisableDragHandler,\n} from \"@/utils/globalViewCardUtils/toolHelper.js\";\nimport KGViewer from './KGViewer.vue'\n\n// import NodeRelOverview from '@/components/NodeRelOverview'\nexport default{\n  props: ['itemProps', 'fixed', 'innerStyle'], \n  components: {\n    GlobalviewMenuBar,KGViewer\n  },  \n  data () {\n    return {\n      selectedEntities: [], \n      // selectedRelations: [],\n      // currentEntities: [], \n      // currentRelations: [],\n      lassoColor: \"grey\", \n      zoomPanColor: \"green\", \n      lassoStatus: false,\n      zoomPanStatus: false, \n      lasso: null, \n      zoom: null, \n      loading_value:false,\n      tip: null,\n      user_defined_thre: 5,// user defined threshold to show how many nodes we want to see if we expand one node \n      neo4jd3 : null,\n      brushed: {\"entity_type\": [], \"relationship_type\": []},\n      showOverview:false, \n      showMaxRetrieve:false,\n      fav: true,\n      menu: false,\n      message: false,\n      hints: true,\n      selectedColor: null, \n      showResThre: false, // resilience threshold bar \n      resilience_thre: 0,  // selected threshold of resilience \n      // min_resilience: 0,\n      max_resilience: 1, // maximum value of the scroll bar for resilience threshold \n      FIXED: false,\n       // custom\n        btn_loading: false, // parse loading \n        formData:null,\n        linkml: \"https://raw.githubusercontent.com/yasmineTYM/PPOD_KG/main/PPOD_new.yaml\",\n        vocab: \"https://raw.githubusercontent.com/yasmineTYM/PPOD_KG/main/vocabs_new.yaml\",\n\n        // pass to childrem:\n        // childrenWidth: '600px',\n        // childrenHeight: '600px',\n        filterWidth: '200px',\n        showFilters: false,\n        filtersData: [],\n        selectedFilters: {},\n    }\n  },\n  created () {\n    // this.$store.dispatch('getGraphOverview')\n    // window['d3'] = d3\n    this.tip = d3tip()\n            .attr('class', 'd3-tip')\n            .offset([-10, 80])\n            .html(function(d) {\n              return \"<strong>Relation: </strong>\" + d + \"<br></span>\";\n    })\n    console.log(document.querySelector(\"#div_graph\"));\n    \n  },\n  methods: {\n    prepareGenSPAQL: function(e){\n      this.selectedEntities = e['entities']\n      if(this.checkEmptyDict(e.entities)!=0 & this.checkEmptyDict(this.selectedFilters)!=0){\n        this.genSPARQL()\n      }\n    },\n    genSPARQL(){\n      this.$store.dispatch('ontparser/genSPARQL', {id: this.itemProps.id, selectedEntities: this.selectedEntities, selectedFilters: this.selectedFilters})\n    },  \n    // check for each \n    checkEmptyDict(dict_){\n      // console.log(dict_)\n      var c = 0\n      for (let key in dict_){\n        // console.log(dict_[key])\n        c += dict_[key].length\n      }\n      \n      console.log(c)\n      return c \n    },\n    onNodeClick: function(node_id){\n      for (const [key, value] of Object.entries(this.$refs)){\n        this.$nextTick(() => value[0].blur())\n      }\n      this.$nextTick(() => this.$refs['filter-'+node_id.id][0].focus())\n    },  \n    validate(){\n        // console.log(this.formData, this.linkml, this.vocab)\n        this.$store.dispatch('ontparser/parseOnt', {'id': this.itemProps.id,'linkml':this.linkml, 'vocab':this.vocab})\n    },\n    changeFilters(val){\n      if(this.checkEmptyDict(this.selectedEntities)!=0 & this.checkEmptyDict(this.selectedFilters)!=0){\n        this.genSPARQL()\n      }\n    },\n    dblClickHandler() {\n      this.toggleFixCompPos();\n    }, \n    \n    toggleFixCompPos() {\n      this.FIXED = !this.FIXED;\n      if (!this.dataStatus) {\n        return;\n      }\n      if (this.FIXED) {\n        componentDisableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      } else {\n        componentEnableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      }\n    },\n    toolEnableToggleHandler(e) {\n      alert(e)\n    },\n   \n    \n  },\n  watch: {\n    brushed:{\n      handler(val){\n          console.log(val);\n      },\n      deep:true \n    },\n    'itemProps.data_ontology':function(val, oldVal){\n        console.log(val, oldVal)\n      },\n    'itemProps.data_filter': function(val, oldVal){\n        this.filtersData = []\n        this.selectedFilters = {}\n        // console.log(Filters)\n        var c= 0\n        for(const [key, value] of Object.entries(val)){\n          var temp = {} \n          temp['name'] = key \n          temp['index'] = c\n          temp['head_uri'] = value['head_uri']\n          temp['permissible_values'] = []\n          // console.log(value['permissible_values'])\n          c+=1\n          for (const [key2, value2] of Object.entries(value['permissible_values'])){\n            var aa = value2 \n            aa['name'] = key2\n            temp['permissible_values'].push(aa)\n          }\n          this.filtersData.push(temp)\n          this.selectedFilters[key] = []\n        }\n        console.log(this.filtersData)\n        console.log(this.selectedFilters)\n        this.showFilters = true \n      },\n    \n  },\n  computed: {\n    getBorder() {\n      return this.FIXED ? \"2px solid grey\" : \"None\";\n    },\n    childrenWidth(){\n      return String(this.innerStyle['width'] * 0.7)+\"px\"\n    },  \n    childrenHeight(){\n      return  String(this.innerStyle['height']*0.8)+\"px\"\n    },\n  }\n}\n</script>\n<style scoped>\n.card-name {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n.card-inner{\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n  overflow:scroll\n}\n\n</style>"],"sourceRoot":"src/components/analyzer/ontparser"}]}