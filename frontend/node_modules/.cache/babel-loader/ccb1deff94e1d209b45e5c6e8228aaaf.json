{"remainingRequest":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/babel-loader/lib/index.js!/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/src/components/GlobalViewComp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/src/components/GlobalViewComp.vue","mtime":1644041415375},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/babel-loader/lib/index.js","mtime":1644041617580},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/vue-loader/lib/index.js","mtime":1644041617678}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GlobalViewComp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n  <v-hover\n    v-slot=\"{ hover }\"\n  >\n    <v-card\n      :elevation=\"hover? 12 : 5\"\n      class=\"card-gloablview\"\n      :draggable=\"draggable\"\n      @dragstart=\"dragStart\"\n      outlined\n      :id=\"itemProps.id\"\n      ref=\"cardComp\"\n      @contextmenu = \"rightClickMenuShow\"\n      :style=\"{top: marginTop + 'px', left: marginLeft +'px', width: `${width}px`, height: `${height}px`, position: 'absolute'}\"\n    > \n      <v-card\n        loading\n        v-if=\"loadingStatus\"\n        :width=\"width\"\n        :height=\"height\"\n      ></v-card>\n      <v-card-text \n        v-if=\"!dataStatus\" \n        class=\"card-name\"\n      >\n        No Global View Yet\n      </v-card-text>\n      <div \n        class=\"canvas-container\"\n        v-if=\"dataStatus\" \n      >\n        <svg\n          :class=\"`globalview-canvas-${itemProps.id}`\" \n         \n          :viewBox=\"[0, 0, width, height]\"\n        >\n\n        </svg>\n      </div>\n      <v-card-actions>\n        <InoutputBtns\n          :resizingStatus=\"resizingStatus\"\n          :width=\"width\"\n          :height=\"height\"\n          :marginLeft=\"marginLeft\"\n          :marginTop=\"marginTop\"  \n          :componentId=\"itemProps.id\"\n          :hover=\"hover\"\n        />\n      </v-card-actions>\n\n      <div \n        class=\"resizer resizer-r\"\n        @mousedown=\"mouseDownHandler\"\n      ></div>\n      <div \n        class=\"resizer resizer-b\"\n        @mousedown=\"mouseDownHandler\"\n      ></div>\n\n    </v-card>\n  </v-hover>\n\n  <v-menu\n    v-model=\"showRightClickMenu\"\n    :position-x=\"rightMenuX\"\n    :position-y=\"rightMenuY\"\n    absolute\n    offset-y\n  >\n    <RightClickMenu \n      :vue=\"this\" \n      :container=\"container\" \n      :itemProps=\"itemProps\"\n      store=\"globalview\"\n    /> \n  </v-menu>\n\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport RightClickMenu from '@/components/RightClickMenu'\nimport InoutputBtns from '@/components/InoutputBtns'\nimport * as d3 from 'd3'\nimport * as d3tip from '@/utils/d3-tip'\n\nexport default {\n  props: [\n    'itemProps'\n  ],\n  data(){\n    return {\n      initialX: undefined,\n      initialY: undefined,\n      dataStatus: undefined,\n      resizeX: undefined,\n      resizeY: undefined,\n      // draggable: true,\n      width: 500,\n      height: 500, \n      resizeWidth: 0, //\n      resizeHeight: 0,\n      marginTop: 0,\n      marginLeft: 0,\n      topMargin: window.innerHeight / 2,\n      leftMargin: window.innerWidth / 2,\n      resizingStatus: false,\n\n      showRightClickMenu: false,\n      rightMenuX: 0,\n      rightMenuY: 0,\n\n      items: [\n        { title: 'Remove node' },\n      ],\n\n      container: '.globalview-components-list',\n\n      rightBtn: true,\n\n      topBtn: false,\n\n      leftBtn: false,\n\n      loadingStatus: false,\n\n      onOperation: false, \n\n      // colors: [\"#543005\", \"#8c510a\", \"#bf812d\", \"#dfc27d\", \"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"], \n      colors: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928']\n    }\n  },\n  methods:{\n    dragStart(e){\n      // if(!this.initialX){\n      //   this.initialX = e.clientX; \n      //   this.initialY = e.clientY;\n      // }\n      // e.dataTransfer.setData('item-id', e.target.id);\n      // e.dataTransfer.setData('initialX', this.initialX);\n      // e.dataTransfer.setData('initialY', this.initialY);\n      const el = document.querySelector(`#${e.target.id}`); \n      const initialLeft = parseInt(el.style.left.split('px')[0]) - e.clientX;\n      const initialTop = parseInt(el.style.top.split('px')[0]) - e.clientY;\n      e.dataTransfer.setData('item-id', e.target.id);\n      e.dataTransfer.setData('initialLeft', initialLeft);\n      e.dataTransfer.setData('initialTop', initialTop);\n      this.$store.dispatch('changeCurrentDraggingVM', this);\n    }, \n\n    addLink(){\n      console.log(111);\n      this.$store.dispatch('changeLinkDrawingStatus', true);\n    },\n\n    finishLink(){\n      console.log(222);\n      this.$store.dispatch('changeLinkDrawingStatus', false);\n    },\n\n    // Handler for div resizing\n    mouseDownHandler(e){\n      \n      // this.$store.dispatch('changeResizerStatus', true);\n      this.resizeX = e.clientX; \n      this.resizeY = e.clientY;\n      console.log(this.resizeX, this.resizeY)\n      document.addEventListener('mousemove', this.mouseMoveHandler); \n      document.addEventListener('mouseup', this.mouseUpHandler); \n      this.resizingStatus = true\n      \n    }, \n\n    // Handler for moving mouse to resize \n    mouseMoveHandler(e){\n      const dx = e.clientX - this.resizeX; \n      const dy = e.clientY - this.resizeY; \n      this.width = this.resizeWidth + dx;\n      this.height = this.resizeHeight + dy;\n      \n    }, \n\n    // Handler for mouse up and remove the EventListener\n    mouseUpHandler(e){\n      this.resizeWidth = this.width; \n      this.resizeHeight = this.height; \n      document.removeEventListener('mousemove', this.mouseMoveHandler); \n      document.removeEventListener('mouseup', this.mouseUpHandler)\n      this.resizingStatus = false\n      // this.$store.dispatch('changeResizerStatus', false)\n    },\n\n    rightClickMenuShow(e){\n      e.preventDefault();\n      this.showRightClickMenu = true;\n      this.rightMenuX = e.clientX;\n      this.rightMenuY = e.clientY;\n    }, \n\n    draw(){\n      if(!this.itemProps.vis_tsne){\n        alert('No vis data but still triggered! check GLobalViewComp.vue')\n      }\n\n      \n      let tip = d3tip()\n            .attr('class', 'd3-tip')\n            .offset([-10, 0])\n            .html(function(d) {\n              return \"<strong>Title: </strong><span class='details'>\" + d.title + \"<br></span>\";\n            })\n\n      let visData = this.itemProps.vis_tsne.tsne.data; \n      let visArea = this.itemProps.vis_tsne.tsne.area;\n      \n      console.log('print vis data');\n      console.log(visData);\n\n      console.log('print vis area');\n      console.log(visArea);\n      const canvasContainer = d3.select(`.globalview-canvas-${this.itemProps.id}`);\n      const canvasGroup = canvasContainer.selectAll('g').data([0]);\n      const canvasEnter = canvasGroup.enter().append('g')\n\n      const canvas = canvasGroup.merge(canvasEnter);\n\n      const classColors = this.colors;\n      const areaLine = d3.line()\n        .x(d => d[0])\n        .y(d => d[1])\n        .curve(d3.curveCatmullRomClosed);\n      console.log(classColors);\n\n\n      const width = this.width\n      const height = this.height\n      const xScale = d3.scaleLinear()\n                      .domain(d3.extent(visData, d=>d.embedding[0]))\n                      .range([0, width])\n      \n      const yScale = d3.scaleLinear()\n                      .domain(d3.extent(visData, d=>d.embedding[1]))\n                      .range([0, height])\n\n\n      // for(let i in Object.keys(visArea)){\n      //   if(i==1 || i == 17){\n      //     let queryId = visArea[i];\n          \n      //     canvas.append(\"path\")\n      //     .attr(\"fill\", classColors[i % classColors.length])\n      //     .attr(\"stroke\", \"steelblue\")\n      //     .attr(\"stroke-width\", 3)\n      //     .attr(\"opacity\", 0.2)\n      //     .attr(\"d\", areaLine(hull(visArea[`q_${i}`].map(d=>[xScale(d[0]), xScale(d[1])]))));\n      //   }\n        \n      // }\n\n\n      const h = canvas.append(\"path\").attr(\"class\", \"polyhull-01\").style(\"stroke\", \"gray\").style(\"stroke-width\",\"3px\").style(\"fill-opacity\", \"0.3\").style(\"fill\", \"lightblue\");\n      const circleGroup = canvas.selectAll('circle').data(visData); //\n      const circleGroupEnter = circleGroup.enter().append('circle')\n     \n      circleGroupEnter.merge(circleGroup)\n        .attr('cx', d=>xScale(d.embedding[0]))\n        .attr('cy', d=>yScale(d.embedding[1]))\n        .attr('r', d=>{\n          return 1\n        })\n        .attr('fill', d=>{\n          // if(d['q_1']){\n          //   return classColors[5]\n          // }\n          // if(d['q_17']){\n          //   return classColors[6]\n          // }\n          return 'steelblue'\n        })\n        .on('mouseover', function(d){\n          tip.show(d);\n          d3.select(this)\n            .attr('r', 1.5)\n            .style('stroke', 'black')\n            \n        })\n        .on('mouseout', function(d){\n          tip.hide(d);\n          d3.select(this)\n            .attr('r', 1)\n            .style('stroke', null)\n            \n        })\n\n      \n      \n\n      function zoomed() {\n        console.log(111);\n        const {transform} = d3.event;\n        canvas.attr(\"transform\", transform);\n      }\n\n\n      canvasContainer.on('dblclick', ()=>{\n        console.log(111)\n        canvasContainer.call(d3.zoom()\n          .extent([[0, 0], [width, height]])\n          .scaleExtent([1, 8])\n          .on(\"zoom\", zoomed));\n\n        canvasContainer.style('border', '1px solid red')\n      })\n\n      canvasContainer.on('mouseleave', ()=>{\n        console.log('mouseout');\n        console.log(canvasContainer)\n        canvasContainer.on('.zoom', null);\n        canvasContainer.style('border', null)\n      })\n      // canvasContainer.call(d3.zoom()\n      //   .extent([[0, 0], [width, height]])\n      //   .scaleExtent([1, 8])\n      //   .on(\"zoom\", zoomed));\n\n      canvasContainer.call(tip);\n\n      const pointsTemp = visData.slice(1000, 1010); \n      // console.log(\"Check Here!\");\n      // console.log(pointsTemp);\n      const hullCurve = hull(pointsTemp.map(obj => [xScale(obj.embedding[0]), yScale(obj.embedding[1])])); \n      h.attr(\"d\", `M${hullCurve.join(\"L\")}Z`)\n\n      function hull(points) {\n        // No sense in rendering a hull for fewer than two points\n        if (points.length < 2) return;\n\n        // polygonHull seems to require a minimum of three points, but works\n        // just fine if two of the points are identical, so we can patch over\n        // the problem of a two point cluster by duplicating the first point.\n        if (points.length < 3) return d3.polygonHull([points[0], ...points]);\n\n        return d3.polygonHull(points);\n      }\n\n    },\n\n\n    \n\n  },\n\n  created(){\n    // Initialize initial position\n    this.marginTop = this.topMargin - this.height/2; \n    this.marginLeft = this.leftMargin - this.width/2;\n\n    // Initialize resizeWidth and resizeHeight\n    this.resizeWidth = this.width;\n    this.resizeHeight = this.height; \n  },\n\n  computed:{\n    ...mapState(['drawLink','resizer']),\n    draggable(){\n      return !(this.drawLink || this.resizingStatus);\n    }\n  },\n\n  components: {\n    RightClickMenu,\n    InoutputBtns\n  },\n\n  watch: {\n    'itemProps.inputData': function(newVal, oldVal){\n      if(newVal){\n        this.loadingStatus = true\n        this.dataStatus = true // means loading\n        console.log('globalView component triggered newVal')\n        console.log(newVal);\n      }else{\n        this.loadingStatus = false\n        this.dataStatus = false\n      }\n    }, \n\n    'itemProps.vis_tsne': function(newVal, oldVal){\n      console.log('visData newVal, oldVal'); //\n      console.log(newVal); //\n      console.log(oldVal);\n      if(newVal && newVal.tsne){\n        this.loadingStatus = false\n        this.dataStatus = true // no longer loading\n        console.log('here')\n        console.log(this.dataStatus);\n        this.draw();\n      }else{\n        this.loadingStatus = false\n        this.dataStatus = false;\n      }\n    },\n\n    width: function (){\n      if(this.itemProps.vis_tsne){\n        this.draw()\n      }\n      \n    }, \n\n    height: function(){\n      if(this.itemProps.vis_tsne){\n        this.draw()\n      }\n    }\n  }\n}\n</script>\n\n<style scoped> \n  .card-name{\n    text-align: center;\n    display: flex; \n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n  /* .card-actions{\n    position: absolute;\n    transform: translate(300px, -150px);\n    padding: 0;\n  } */\n\n  .resizer{\n    position: absolute;\n  }\n\n  .resizer-r {\n    cursor: col-resize;\n    height: 100%;\n    right: 0;\n    top: 0;\n    width: 5px;\n  }\n\n  /* Placed at the bottom side */\n  .resizer-b {\n    bottom: 0;\n    cursor: row-resize;\n    height: 5px;\n    left: 0;\n    width: 100%;\n  }\n</style>"],"sourceRoot":"src/components"}]}