{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/linker/table2cypher/index.js","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/linker/table2cypher/index.js","mtime":1661288952830},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1660324544800},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661232574882}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/linker/table2cypher/index.js"],"names":["getComponentType","apiClient","updateGraphInstance","getTargetCard","createNewLinkerCard","id","sourceLink","targetLink","selectedGraph","undefined","marginLeft","marginTop","width","height","data","mode","selectedGraphInstance","loadingStatus","parsingScript","parsedData","cached_data","namespaced","state","nextAvailableIndex","cards","component","mutations","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","i","splice","console","log","ADD_SOURCE_LINK","linkData","source","ADD_TARGET_LINK","target","UPDATE_SOURCE","j","UPDATE_TARGET","REMOVE_SOURCELINK","UPDATE_LOADING_STATUS","status","ADD_DATA","cardId","LOAD_DATA","SET_MODE","UPDATE_INSTANCE","instance","UPDATE_PARSING_SCRIPT","script","actions","addComp","commit","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","forEach","link","root","addLink","updateLink","removeLink","updateParsingScript","targetCard","tmp","inputData","addGraph","selectedTable","selected","formData","FormData","append","post","upload_res","GraphInstance","inputHandler","length","alert","outputHandler","targetCompType"],"mappings":"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","sourcesContent":["import { getComponentType } from '@/utils/help'\nimport { apiClient } from '@/api/apiClient';\nimport { updateGraphInstance } from '@/utils/GraphInstance';\nimport { getTargetCard } from '@/utils/help'\n\nfunction createNewLinkerCard(id) {\n  return {\n    id: `card-table2cypher-${id}`,\n    sourceLink: [], //\n    targetLink: [],\n    selectedGraph: undefined,\n    marginLeft: null,\n    marginTop: null,\n    width: null,\n    height: null,\n    data: undefined,\n    mode: 'online',\n    selectedGraphInstance: null,\n    loadingStatus: false,\n    parsingScript: null,\n    parsedData: null, \n    cached_data: null\n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [\n\n    ],\n    component: () => import('@/components/linker/table2cypher'),\n  },\n  mutations: {\n    ADD_COMPONENT(state) {\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewLinkerCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == `${id}`) {\n          state.cards.splice(i, 1);\n          console.log(id + ' has been deleted')\n          break\n        }\n      }\n\n    },\n    ADD_SOURCE_LINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    ADD_TARGET_LINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.target) {\n          state.cards[i].targetLink.push(linkData);\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          for (let j in state.cards[i].sourceLink) {\n            if (state.cards[i].sourceLink[j].id == linkData.id) {\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.target) {\n          for (let j in state.cards[i].targetLink) {\n            if (state.cards[i].targetLink[j].id == linkData.id) {\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          for (let j in state.cards[i].sourceLink) {\n            if (state.cards[i].sourceLink[j].id == linkData.id) {\n              state.cards[i].sourceLink.splice(j, 1);\n            }\n          }\n        }\n      }\n    },\n    UPDATE_LOADING_STATUS(state, { id, status }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == id) {\n          state.cards[i].loadingStatus = status;\n        }\n      }\n    },\n    ADD_DATA(state, data) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == data.cardId) {\n          state.cards[i].selectedGraph = data;\n        }\n      }\n    },\n\n    LOAD_DATA(state, { id, data }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == id) {\n          state.cards[i].data = data;\n        }\n      }\n    },\n\n    SET_MODE(state, { id, mode }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id === id) {\n          state.cards[i].mode = mode\n        }\n      }\n    },\n\n    UPDATE_INSTANCE(state, { id, instance }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id === id) {\n          state.cards[i].selectedGraphInstance = instance\n        }\n      }\n    },\n    UPDATE_PARSING_SCRIPT(state, { id, script }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id === id) {\n          state.cards[i].parsingScript = script\n          console.log('here is script')\n          console.log(script)\n        }\n      }\n    }\n  },\n  actions: {\n    addComp({ commit },) {\n      console.log('adding')\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({ commit, state, dispatch }, id) {\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n\n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, { root: true })\n      })\n      console.log('deleting' + id)\n      commit('DELETE_COMPONENT', id);\n    },\n    addLink({ commit, dispatch }, linkData) {\n      if (linkData.status == \"source\") {\n        commit('ADD_SOURCE_LINK', linkData)\n        dispatch('outputHandler', linkData)\n      } else {\n        commit('ADD_TARGET_LINK', linkData)\n        // // alert('Corpus card has to be the starting point');\n        // dispatch('link/deleteComp', linkData.id, { root: true });\n      }\n    },\n    updateLink({ commit }, linkData) {\n      if (linkData.status == 'source') {\n        commit('UPDATE_SOURCE', linkData)\n      } else {\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({ commit }, linkData) {\n      if (linkData.status == 'source') {\n        commit('REMOVE_SOURCELINK', linkData)\n      } else {\n        console.log('no use, trying to remove target link for corpus, which does not exist')\n      }\n    },\n    updateParsingScript({state, commit, dispatch}, { id, script }) {\n      commit('UPDATE_PARSING_SCRIPT', { id, script })\n      const targetCard = getTargetCard(state.cards, id) \n      if (targetCard.cached_data) {\n        let tmp = targetCard.cached_data\n        dispatch('inputHandler', {link: {target:id}, inputData: tmp})\n      }\n    },\n    async addGraph({ commit, dispatch, state }, data) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == data.cardId && state.cards[i].selectedTable !== data) {\n          // commit('ADD_DATA', data);\n          commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: true })\n          console.log('data from graph loader')\n          console.log(data);\n          if (data.source == 'uploaded_file' && data.selected) {\n            // upload file \n\n            const formData = new FormData();\n            formData.append(\"files\", data.selected);\n\n            let upload_res = await apiClient.post('/upload_graphfile', formData)\n            console.log('uploadding finished!!!')\n            console.log(upload_res)\n            commit('SET_MODE', { id: data.cardId, mode: 'file' })\n            commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: false })\n          } else {\n            commit('SET_MODE', { id: data.cardId, mode: 'online' })\n            const GraphInstance = updateGraphInstance(data.selected)\n            // let graphData = await axios.get('/getTable')\n            // console.log(graphData);\n            // commit('LOAD_DATA', {\n            //   id: data.cardId, data: {\n            //     data: { ...graphData.data },\n            //     tableNames: Object.keys(graphData.data)\n            //   }\n            // })\n            // commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: false })\n            // console.log('adding corpusdata ############')\n            commit('UPDATE_INSTANCE', { id: data.cardId, instance: GraphInstance })\n            commit('LOAD_DATA', {\n              id: data.cardId, data: null\n            })\n            commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: false })\n            for (let i in state.cards) {\n              if (state.cards[i].id == data.cardId) {\n                for (let j in state.cards[i].sourceLink) {\n                  dispatch('outputHandler', state.cards[i].sourceLink[j])\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n\n    inputHandler({ state, commit, dispatch }, { link, inputData }) {\n      const targetCard = getTargetCard(state.cards, link.target)\n      console.log(targetCard)\n      if (targetCard && targetCard.parsingScript) {\n        try {\n          targetCard.parsedData = targetCard.parsingScript(inputData)\n          console.log(targetCard.parsedData)\n          if (targetCard.sourceLink.length > 0) {\n            for (let i in targetCard.sourceLink) {\n              dispatch('outputHandler', targetCard.sourceLink[i])\n            }\n          }\n        } catch {\n          alert('Error parsing code')\n        }\n      }else {\n        alert('no parsing script available') \n      }\n      targetCard.cached_data = inputData\n    },\n\n    outputHandler({ dispatch, state }, linkData) {\n      // Need to handler output since self is source\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          console.log(state.cards[i].parsedData)\n          dispatch(`${targetCompType}/inputHandler`, { link: linkData, inputData: state.cards[i].parsedData}, { root: true })\n          // return;\n        }\n      }\n    }\n  }\n}"]}]}