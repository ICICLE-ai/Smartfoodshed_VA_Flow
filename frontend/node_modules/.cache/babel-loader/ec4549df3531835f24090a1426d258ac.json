{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue","mtime":1668548511914},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["KGViewer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,KAAA,OAAA,MAAA,iBAAA;AACA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,OAAA,KAAA,OAAA,MAAA,UAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,GAAA,EAAA,QAAA,EAAA,OAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KADA;AAEA,MAAA,gBAAA,EAAA;AACA,eAAA,EADA;AAEA,oBAAA,EAFA;AAGA,iBAAA;AAHA,OAFA;AAOA,MAAA,aAAA,EAAA,KAPA;AAQA,MAAA,gBAAA,EAAA,EARA;AASA,MAAA,iBAAA,EAAA,EATA;AAUA,MAAA,gBAAA,EAAA,EAVA;AAUA;AAEA,MAAA,eAAA,EAAA,EAZA,CAYA;;AAZA,KAAA;AAcA,GAjBA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,IAAA,MAAA,CAAA,IAAA,CAAA,GAAA,EAAA;AACA,GApBA;AAqBA,EAAA,KAAA,EAAA;AACA,IAAA,CAAA,EAAA,WAAA,MAAA,EAAA,MAAA,EAAA;AACA,WAAA,IAAA;AACA,KAHA;AAIA,IAAA,iBAAA,EAAA,2BAAA,MAAA,EAAA,MAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA;;AAEA,UAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,IAAA,CAAA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,EADA,CAEA;;AACA,QAAA,IAAA,CAAA,eAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,MAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,CAAA,gBAAA,CAAA,SAAA,CAAA;AACA,QAAA,IAAA,CAAA,gBAAA,CAAA,UAAA,EAAA,MAAA,MAAA,GAAA,GAAA,GAAA,MAAA,GAAA,GAAA,IAAA,MAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,gBAAA;AACA,OARA,MAQA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,QAAA;AACA,QAAA,IAAA,CAAA,eAAA,GAAA,IAAA,CAAA,eAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,IAAA,IAAA,CAAA,gBAAA,CAAA,IAAA,CAAA;AAAA,SAAA,CAAA;AACA,QAAA,IAAA,CAAA,eAAA;AACA;;AACA,MAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA;AAAA,QAAA,QAAA,EAAA,IAAA,CAAA;AAAA,OAAA;AACA;AAtBA,GArBA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA;AAAA,QAAA,QAAA,EAAA,IAAA,CAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,eAJA,6BAIA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,YAAA,EAAA,MAAA,CAAA,KAAA,CAAA;AACA,MAAA,GAAA,CAAA,SAAA,CAAA,UAAA,EAAA,KAAA,CAAA,QAAA,EAAA,UAAA,MAAA,EAAA;AACA,YAAA,IAAA,CAAA,eAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AACA,iBAAA,SAAA;AACA,SAFA,MAEA;AACA,iBAAA,SAAA;AACA;AACA,OANA;AAOA,KAdA;AAeA,IAAA,kBAfA,8BAeA,GAfA,EAeA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,GAAA;;AACA,UAAA,GAAA,EAAA;AACA,aAAA,WAAA;AACA,aAAA,WAAA;AACA,OAHA,MAGA;AACA;AACA,aAAA,YAAA;AACA,aAAA,aAAA;AACA,OATA,CAUA;;AAEA,KA3BA;AA4BA,IAAA,aA5BA,2BA4BA;AACA,UAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,YAAA,EAAA,MAAA,CAAA,KAAA,CAAA;AACA,MAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,GAAA,EAAA,CAAA,MAAA,EAAA,YAAA;AACA,YAAA,KAAA,GAAA,EAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AAAA,YACA,SAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA,CADA,CADA,CAGA;;AACA,YAAA,CAAA,GAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AACA,QAAA,CAAA,CAAA,IAAA,CAAA,WAAA,EAAA,eAAA,SAAA,CAAA,CAAA,CAAA,GAAA,IAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,UAAA,GAAA,KAAA,GAAA,GAAA;AACA,OANA,CAAA,EAOA,EAPA,CAOA,eAPA,EAOA,IAPA;AAQA,KAtCA;AAuCA,IAAA,YAvCA,0BAuCA;AACA,UAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,YAAA,EAAA,MAAA,CAAA,KAAA,CAAA;AACA,MAAA,GAAA,CAAA,EAAA,CAAA,YAAA,EAAA,IAAA;AACA,MAAA,GAAA,CAAA,EAAA,CAAA,OAAA,EAAA,IAAA;AACA,MAAA,GAAA,CAAA,EAAA,CAAA,UAAA,EAAA,IAAA;AACA,KA5CA;AA6CA,IAAA,WA7CA,yBA6CA;AACA,UAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,YAAA,EAAA,MAAA,CAAA,KAAA,CAAA;AACA,UAAA,gBAAA,GAAA,GAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA;;AACA,UAAA,WAAA,GAAA,SAAA,WAAA,GAAA;AACA;AACA;AACA;AACA;AACA,QAAA,IAAA,CAAA,gBAAA,CAAA,KAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,gBAAA,CAAA,OAAA,IAAA,EAAA,CANA,CAOA;;AACA,QAAA,KAAA,CAAA,KAAA,GACA;AADA,SAEA,OAFA,CAEA,cAFA,EAEA,IAFA,EAGA,OAHA,CAGA,UAHA,EAGA,KAHA;AAIA,OAZA;;AAaA,UAAA,UAAA,GAAA,SAAA,UAAA,GAAA;AACA;AACA,QAAA,KAAA,CAAA,aAAA,GACA,OADA,CACA,cADA,EACA,KADA,EAEA,OAFA,CAEA,UAFA,EAEA,IAFA,EAFA,CAMA;;AACA,QAAA,KAAA,CAAA,gBAAA,GACA,OADA,CACA,cADA,EACA,IADA,EAEA,OAFA,CAEA,UAFA,EAEA,KAFA;AAGA,OAVA;;AAWA,UAAA,SAAA,GAAA,SAAA,SAAA,GAAA;AACA,QAAA,KAAA,CAAA,KAAA,GACA,OADA,CACA,cADA,EACA,KADA,EAEA,OAFA,CAEA,UAFA,EAEA,KAFA;AAIA,QAAA,KAAA,CAAA,aAAA,GACA;AADA,SAEA,OAFA,CAEA,UAFA,EAEA,IAFA;AAGA,QAAA,IAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,gBAAA,CAAA,MAAA;AACA,QAAA,IAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,gBAAA,CAAA,MAAA,EATA,CAUA;;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,cAAA,KAAA,GAAA,KAAA,QAAA,CADA,CAEA;;AACA,cAAA,CAAA,CAAA,IAAA,IAAA,MAAA,EAAA;AACA,gBAAA,CAAA,CAAA,KAAA,EAAA;AACA,cAAA,IAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAFA,MAEA;AACA,cAAA,IAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA;AACA,WATA,CAUA;;;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,EAAA;AAAA,YAAA,QAAA,EAAA,IAAA,CAAA;AAAA,WAAA;AAEA,SAbA;AAcA,OAzBA;;AA2BA,UAAA,KAAA,GAAA,OAAA,CAAA,KAAA,GACA,eADA,CACA,IADA,EAEA,iBAFA,CAEA,GAFA,EAGA,KAHA,CAGA,gBAHA,EAIA,UAJA,CAIA,GAJA,EAKA,EALA,CAKA,OALA,EAKA,WALA,EAMA,EANA,CAMA,MANA,EAMA,UANA,EAOA,EAPA,CAOA,KAPA,EAOA,SAPA,CAAA;AASA,MAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,KA9GA;AA+GA,IAAA,WA/GA,yBA+GA;AACA,UAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,YAAA,EAAA,MAAA,CAAA,KAAA,CAAA;AACA,MAAA,GAAA,CAAA,EAAA,CAAA,OAAA,EAAA,IAAA;AACA,KAlHA;AAmHA,IAAA,kBAnHA,gCAmHA;AACA;AACA,WAAA,aAAA,GAAA,CAAA,KAAA,aAAA;AACA,WAAA,WAAA,GAAA,CAAA,KAAA,WAAA,CAHA,CAIA;AACA,KAxHA;AAyHA,IAAA,IAzHA,kBAyHA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,OAAA,GAAA,OAAA,WAAA,CAAA,YAAA,EAAA;AACA,QAAA,SAAA,EAAA,KAAA,CADA;AAEA,QAAA,UAAA,EAAA,EAFA;AAGA,QAAA,SAAA,EAAA,KAHA;AAIA,QAAA,WAAA,EAAA,qBAAA,GAAA,EAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,qBAAA,EAAA,GAAA,EADA,CAGA;AACA;AACA;AACA;AAEA,SAZA;AAaA,QAAA,mBAAA,EAAA,6BAAA,GAAA,EAAA;AACA;AAEA,UAAA,IAAA,CAAA,gBAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,EAJA,CAMA;;AACA,cAAA,SAAA,GAAA,GAAA,CAAA,YAAA,CAAA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,IAAA,CAAA,SAAA,EAAA,MAAA;;AACA,6CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,CAAA,qCAAA;AAAA;AAAA,gBAAA,GAAA;AAAA,gBAAA,KAAA;;AACA,YAAA,IAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,GAAA;AACA;;AACA,UAAA,IAAA,CAAA,gBAAA,GAAA,GAAA;AACA,UAAA,IAAA,CAAA,aAAA,GAAA,IAAA,CAbA,CAcA;AACA;AAEA;AA9BA,OAAA,CAAA;AAgCA,WAAA,OAAA,GAAA,OAAA;;AACA,UAAA,IAAA,CAAA,WAAA,EAAA;AACA,QAAA,IAAA,CAAA,WAAA;AACA,QAAA,IAAA,CAAA,WAAA;AACA,OAHA,MAGA;AACA,QAAA,IAAA,CAAA,YAAA;AACA,QAAA,IAAA,CAAA,aAAA;AACA;AACA;AAnKA;AA7CA,CAAA","sourcesContent":["<template>\n    <div id=\"div_kgviewer\">\n        <v-row>\n            <v-switch\n                v-model=\"lassoStatus\"\n                inset\n                @change=\"lassoToggleHandler\"\n                :label=\"`Lasso: ${lassoStatus.toString()}`\"\n                ></v-switch>\n            <!-- <v-button @click=\"updateInfo\"></v-button> -->\n        </v-row>\n        <v-row>\n            <div id=\"div_graph\" class=\"fullHeight\" :style=\"{'height': height, 'width': width, 'float': 'right'}\"></div>\n        </v-row>\n       \n        <v-dialog\n         v-model=\"dialogVisible\" width=\"400\">  \n          <v-card width=\"400\" height=\"400\">\n            <v-select\n            multiple\n            style=\"margin:20px\"\n            :items=\"relation_options\"\n            label = \"Relations\"\n            outlined\n            v-model=\"selected_relation\"\n            ></v-select>\n          </v-card>  \n        </v-dialog>\n    </div>\n</template>\n\n<script>\nimport * as Neo4jd3 from '@/js/Neo4jD3.js'\nimport * as d3 from 'd3'\nimport * as d3Lasso from 'd3-lasso'\n\nexport default {\n    props: ['G','height', 'width'],\n    data(){\n        return{\n            lassoStatus: false,\n            selectedEntities: {\n                'ont': [],\n                'relation': {},\n                'vocab':[]\n            },\n            dialogVisible: false,\n            relation_options: [],\n            selected_relation: [],\n            current_relation: {}, // once we click an edge, pop up a dialog, we need to update the current_relaiton with the info \n\n            colored_edge_id: [] //maintain a list to keep record of highlighted links \n        }\n    },\n    created(){\n        window['d3'] = d3\n    },\n    watch:{\n        G: function(newVal, oldVal){\n            this.draw()\n        },\n        selected_relation: function(newVal, oldVal){\n            var that = this\n            \n            if(newVal.length>0){\n                that.colored_edge_id.push(that.current_relation['id'])\n                // console.log('==========',that.current_relation)\n                that.updateEdgeColor()\n                const source = that.current_relation['source']['name']\n                const target = that.current_relation['endNode']\n                that.selectedEntities['relation'][\"(\"+source+\",\"+target+\")\"] = newVal\n                console.log(that.selectedEntities)\n            }else{\n                // remove the link from colored_edge_id \n                console.log(newVal,'ffffff')\n                that.colored_edge_id = that.colored_edge_id.filter(item=> item!= that.current_relation['id'])\n                that.updateEdgeColor()\n            }\n            that.$emit('on-lasso-event', {entities: that.selectedEntities})\n        }\n    },\n    methods: {\n        updateInfo(){\n            this.$emit('on-lasso-event', {entities: that.selectedEntities})\n        },\n        updateEdgeColor(){\n            var that = this\n            const svg = d3.select('#div_graph').select(\"svg\")\n            svg.selectAll('.outline').style('stroke', function(link_d){\n                if(that.colored_edge_id.includes(link_d['id'])){\n                    return '#e36868'\n                }else{\n                    return '#a5abb6'\n                }\n            })\n        },\n        lassoToggleHandler(val){\n            console.log('lasso', val)\n            if(val){\n                this.disableZoom()\n                this.enableLasso()\n            }else{\n                // current is zoom \n                this.disableLasso()\n                this.enableZoomPan()\n            }\n        // console.log(this.lassoStatus, this.zoomPanStatus)\n        \n        },\n        enableZoomPan(){\n            const svg = d3.select('#div_graph').select(\"svg\") \n            svg.call(d3.zoom().on('zoom', function () {\n                var scale = d3.event.transform.k,\n                translate = [d3.event.transform.x, d3.event.transform.y]\n                // console.log(1)\n                const g = svg.select(\"g\")\n                g.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')')\n            }))\n            .on('dblclick.zoom', null)\n        },\n        disableLasso() {\n            const svg = d3.select('#div_graph').select(\"svg\") \n            svg.on(\".dragstart\", null);\n            svg.on(\".drag\", null);\n            svg.on(\".dragend\", null);\n        }, \n        enableLasso(){\n            const svg = d3.select('#div_graph').select(\"svg\")\n            var circles_question = svg.selectAll('.outline')\n            let that = this\n            var lasso_start = function () {\n                // that.selectedEntities = {\n                //     'ont': [],\n                //     'vocab': []\n                // }\n                that.selectedEntities['ont'] = []\n                that.selectedEntities['vocab'] = []\n                // console.log(111)\n                lasso.items()\n                // .attr('fill', \"green\")\n                .classed('not_possible', true)\n                .classed('selected', false)\n            }\n            var lasso_draw = function () {\n                // Style the possible dots\n                lasso.possibleItems()\n                .classed('not_possible', false)\n                .classed('possible', true)\n\n                // Style the not possible dot\n                lasso.notPossibleItems()\n                .classed('not_possible', true)\n                .classed('possible', false)\n            }\n            var lasso_end = function () {\n                lasso.items()\n                .classed('not_possible', false)\n                .classed('possible', false)\n\n                lasso.selectedItems()\n                // .style('stroke','red')\n                .classed('selected', true)\n                that.selectedEntities['ont'].splice(0, that.selectedEntities.length)\n                that.selectedEntities['vocab'].splice(0, that.selectedEntities.length)\n                // that.selectedRelations.splice(0, that.selectedRelations.length) \n                lasso.selectedItems().each(function(d){\n                const label = this.nodeName \n                // console.log(d)\n                if(d.type==\"node\"){\n                    if(d.vocab){\n                    that.selectedEntities['vocab'].push(d.id)\n                    }else{\n                    that.selectedEntities['ont'].push(d.id)\n                    }\n                }\n                // console.log(that.selectedEntities)\n                that.$emit('on-lasso-event', {entities: that.selectedEntities})\n                \n                })\n            }\n            \n            var lasso = d3Lasso.lasso()\n                .closePathSelect(true)\n                .closePathDistance(100)\n                .items(circles_question)\n                .targetArea(svg)\n                .on('start', lasso_start)\n                .on('draw', lasso_draw)\n                .on('end', lasso_end)\n\n            svg.call(lasso)\n        }, \n        disableZoom() {\n            const svg = d3.select('#div_graph').select(\"svg\") \n            svg.on('.zoom', null)\n        },\n        toggleZoomPanLasso(){\n            // console.log(this.lassoStatus, this.zoomPanStatus)\n            this.zoomPanStatus = !this.zoomPanStatus \n            this.lassoStatus = !this.lassoStatus\n            // console.log(this.lassoStatus, this.zoomPanStatus)\n        }, \n        draw(){\n        var that = this\n        var neo4jd3 = Neo4jd3.default('#div_graph', {\n            neo4jData: this.G,\n            nodeRadius: 30,\n            infoPanel: false,\n            onNodeClick: function(rel){\n                that.$emit('on-node-click-event', rel)\n            \n                // for (const [key, value] of Object.entries(that.$refs)){\n                // that.$nextTick(() => value[0].blur())\n                // }\n                // that.$nextTick(() => that.$refs['filter-'+rel.id][0].focus())\n                \n            },\n            onRelationshipClick: function(rel){\n                // d3.select(this).classed('selected', true)\n                \n                that.relation_options = []\n                console.log('click on relation', rel)\n                \n                // generating the options for selector \n                var relations = rel['properties']\n                var length = Object.keys(relations).length\n                for (const [key, value] of Object.entries(relations)) {\n                    that.relation_options.push(key)\n                }\n                that.current_relation = rel \n                that.dialogVisible = true\n                // console.log(that.selected_relation)\n                //whether user select anything or not \n                \n            }\n        })\n        this.neo4jd3 = neo4jd3\n        if (that.lassoStatus) {\n            that.disableZoom()\n            that.enableLasso()\n        } else {\n            that.disableLasso() \n            that.enableZoomPan()\n        }\n        }\n    }\n}\n</script>\n<style>\n\n    .lasso path {\n        stroke: rgb(80,80,80);\n        stroke-width:2px;\n    }\n    \n    .lasso .drawn {\n        fill-opacity:.05 ;\n    }\n    \n    .lasso .loop_close {\n        fill:none;\n        stroke-dasharray: 4,4;\n    }\n    \n    .lasso .origin {\n        fill:#3399FF;\n        fill-opacity:.5;\n    }\n    \n    .not_possible {\n        fill: rgb(200,200,200);\n    }\n    \n    .possible {\n        fill: #EC888C;\n    }\n    \n    #div_kgviewer .nodes .selected {\n        /* fill: green!important; */\n        stroke: rgb(227, 104, 104)!important;\n        stroke-width: 3px!important;\n        stroke: black;\n    }\n    /* #div_kgviewer .relationships .selected {\n        stroke-width: 5px !important;\n        stroke: red!important;\n        stroke: green!important;\n    } */\n    .graph-btn-container{\n        position: relative; \n        top: 5px;\n    }\n    .kg-view-btn{\n      margin-right: 10px;\n    }\n    \n    .circle-button:hover{\n      cursor: pointer;\n    }\n    \n    .card-name {\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-wrap: wrap;\n        height: 100%;\n      }\n    \n    .card-inner{\n      text-align: center;\n      align-items: center;\n      justify-content: center;\n      flex-wrap: wrap;\n      height: 100%;\n    }\n    \n</style>\n    \n"],"sourceRoot":"src/components/analyzer/ontparser"}]}