{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/graph.js","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/graph.js","mtime":1660516517421},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1660327264739}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/graph.js"],"names":["getComponentType","axios","createNewCorpusCard","id","sourceLink","selectedGraph","undefined","marginLeft","marginTop","width","height","data","loadingStatus","namespaced","state","nextAvailableIndex","cards","component","mutations","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","i","splice","console","log","ADD_SOURCE_LINK","linkData","source","UPDATE_SOURCE","j","UPDATE_TARGET","target","targetLink","REMOVE_SOURCELINK","UPDATE_LOADING_STATUS","status","ADD_DATA","cardId","LOAD_DATA","actions","addComp","commit","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","forEach","link","root","addLink","alert","updateLink","removeLink","addGraph","selectedTable","selected","formData","FormData","append","post","headers","upload_res","get","tabularData","tableNames","Object","keys","outputHandler","targetCompType","inputData"],"mappings":"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","sourcesContent":["import { getComponentType } from '@/utils/help'\nimport axios from 'axios'\n\nfunction createNewCorpusCard(id) {\n  return {\n    id: `card-graph-${id}`,\n    sourceLink: [], //\n    selectedGraph: undefined,\n    marginLeft: null,\n    marginTop: null,\n    width: null,\n    height: null,\n    data: undefined,\n    loadingStatus: false,\n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [\n\n    ],\n    component: () => import('@/components/GraphLoaderComp'),\n  },\n  mutations: {\n    ADD_COMPONENT(state) {\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewCorpusCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == `${id}`) {\n          state.cards.splice(i, 1);\n          console.log(id + ' has been deleted')\n          break\n        }\n      }\n\n    },\n    ADD_SOURCE_LINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          for (let j in state.cards[i].sourceLink) {\n            if (state.cards[i].sourceLink[j].id == linkData.id) {\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.target) {\n          for (let j in state.cards[i].targetLink) {\n            if (state.cards[i].targetLink[j].id == linkData.id) {\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          for (let j in state.cards[i].sourceLink) {\n            if (state.cards[i].sourceLink[j].id == linkData.id) {\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].sourceLink.splice(j, 1);\n            }\n          }\n        }\n      }\n    },\n    UPDATE_LOADING_STATUS(state, { id, status }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == id) {\n          state.cards[i].loadingStatus = status;\n        }\n      }\n    },\n    ADD_DATA(state, data) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == data.cardId) {\n          state.cards[i].selectedGraph = data;\n        }\n      }\n    },\n\n    LOAD_DATA(state, { id, data }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == id) {\n          state.cards[i].data = data;\n        }\n      }\n    },\n  },\n  actions: {\n    addComp({ commit },) {\n      console.log('adding')\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({ commit, state, dispatch }, id) {\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n\n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, { root: true })\n      })\n      console.log('deleting' + id)\n      commit('DELETE_COMPONENT', id);\n    },\n    addLink({ commit, dispatch }, linkData) {\n      if (linkData.status == \"source\") {\n        commit('ADD_SOURCE_LINK', linkData)\n        dispatch('outputHandler', linkData)\n      } else {\n        alert('Corpus card has to be the starting point');\n        dispatch('link/deleteComp', linkData.id, { root: true });\n      }\n    },\n    updateLink({ commit }, linkData) {\n      if (linkData.status == 'source') {\n        commit('UPDATE_SOURCE', linkData)\n      } else {\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({ commit }, linkData) {\n      if (linkData.status == 'source') {\n        commit('REMOVE_SOURCELINK', linkData)\n      } else {\n        console.log('no use, trying to remove target link for corpus, which does not exist')\n      }\n    },\n\n    async addGraph({ commit, dispatch, state }, data) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == data.cardId && state.cards[i].selectedTable !== data) {\n          // commit('ADD_DATA', data);\n          commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: true })\n          console.log('data from graph loader')\n          console.log(data);\n          if (data.source == 'uploaded_file' && data.selected) {\n            // upload file \n\n            const formData = new FormData();\n            formData.append(\"files\", data.selected);\n            let upload_res = await axios.post('http://127.0.0.1:5000/upload_graphfile', formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            })\n            console.log('uploadding finished!!!')\n            console.log(upload_res)\n\n          } else {\n            let tabularData = await axios.get('http://127.0.0.1:5000/getTable')\n            console.log(tabularData);\n            commit('LOAD_DATA', {\n              id: data.cardId, data: {\n                data: { ...tabularData.data },\n                tableNames: Object.keys(tabularData.data)\n              }\n            })\n            commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: false })\n            console.log('adding corpusdata ############')\n\n            for (let i in state.cards) {\n              if (state.cards[i].id == data.cardId) {\n                for (let j in state.cards[i].sourceLink) {\n                  dispatch('outputHandler', state.cards[i].sourceLink[j])\n                }\n              }\n            }\n          }\n        }\n      }\n\n\n    },\n\n\n    outputHandler({ commit, dispatch, state }, linkData) {\n      // Need to handler output since self is source\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          dispatch(`${targetCompType}/inputHandler`, { link: linkData, inputData: state.cards[i].data }, { root: true })\n          // return;\n        }\n      }\n    }\n  }\n}"]}]}