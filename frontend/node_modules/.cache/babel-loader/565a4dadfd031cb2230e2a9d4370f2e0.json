{"remainingRequest":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/babel-loader/lib/index.js!/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/src/store/modules/corpus.js","dependencies":[{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/src/store/modules/corpus.js","mtime":1644041415377},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/node_modules/babel-loader/lib/index.js","mtime":1644041617580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/yameitu/Documents/Yamei/Research/ICIRCLE/flowisallyouneed/src/store/modules/corpus.js"],"names":["getComponentType","axios","createNewCorpusCard","id","sourceLink","selectedCorpus","undefined","marginLeft","marginTop","width","height","data","namespaced","state","nextAvailableIndex","cards","component","mutations","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","i","splice","console","log","ADD_SOURCE_LINK","linkData","source","UPDATE_SOURCE","j","UPDATE_TARGET","target","targetLink","REMOVE_SOURCELINK","ADD_CORPUS","cardId","LOAD_DATA","actions","addComp","commit","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","forEach","link","root","addLink","status","alert","updateLink","removeLink","addCorpus","post","corpusData","corpusName","corpus","outputHandler","targetCompType","inputData"],"mappings":"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","sourcesContent":["import {getComponentType} from '@/utils/help'\nimport axios from 'axios'\n\nfunction createNewCorpusCard(id){\n  return {\n    id: `card-corpus-${id}`,\n    sourceLink: [], //\n    selectedCorpus: undefined, \n    marginLeft: null, \n    marginTop: null, \n    width: null, \n    height: null,\n    data: undefined,\n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [\n       \n    ],\n    component: () => import('@/components/CorpusComp'), \n  }, \n  mutations: {\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewCorpusCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          console.log(id + ' has been deleted')\n          break\n        }\n      }\n\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n\n    ADD_CORPUS(state, data){\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId){\n          state.cards[i].selectedCorpus = data;\n        }\n      }\n    },\n\n    LOAD_DATA(state, {id, data}){\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].data = data;\n        }\n      }\n    },\n  }, \n  actions: {\n    addComp({commit}, ){\n      console.log('adding')\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      \n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      console.log('deleting' + id)\n      commit('DELETE_COMPONENT', id);\n    },\n    addLink({commit, dispatch}, linkData){\n      if(linkData.status == \"source\"){\n        commit('ADD_SOURCE_LINK', linkData)\n        dispatch('outputHandler', linkData)\n      }else{\n        alert('Corpus card has to be the starting point');\n        dispatch('link/deleteComp', linkData.id, {root: true});\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        console.log('no use, trying to remove target link for corpus, which does not exist')\n      }\n    }, \n\n    async addCorpus({commit, dispatch, state}, data){\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId && state.cards[i].selectedCorpus !== data){\n          commit('https://columbuscaraudio.com/', data);\n          let corpusData = await axios.post('http://127.0.0.1:8888/data_retrieve', data)\n\n          commit('LOAD_DATA', {id: data.cardId, data: {\n            ...corpusData.data, \n            corpusName: data.corpus\n          }})\n\n          console.log('adding corpusdata ############')\n          console.log({\n            ...corpusData.data, \n            corpusName: data.corpus\n          })\n          for(let i in state.cards){\n            if(state.cards[i].id == data.cardId){\n              for(let j in state.cards[i].sourceLink){\n                dispatch('outputHandler', state.cards[i].sourceLink[j])\n              }\n            }\n          }\n        }\n      }\n\n     \n    }, \n\n\n    outputHandler({commit, dispatch, state}, linkData){\n      // Need to handler output since self is source\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData: state.cards[i].data}, {root: true})\n          return;\n        }\n      }\n      alert('No corresponding input card');\n    }    \n  }\n}"]}]}