{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/viewer/vegacharter/Inner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/viewer/vegacharter/Inner.vue","mtime":1669063760651},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZVZlZ2EgZnJvbSAndnVlLXZlZ2EnOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCB2ZWdhRW1iZWQgZnJvbSAndmVnYS1lbWJlZCc7ClZ1ZS51c2UoVnVlVmVnYSk7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydpdGVtUHJvcHMnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdmVnYUxpdGU6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVwbGFjZTogZnVuY3Rpb24gcmVwbGFjZShkYXRhLCBjb2x1bW5fbmFtZSkgewogICAgICBpZiAoY29sdW1uX25hbWUgaW4gZGF0YVsnZGF0YSddWyd2YWx1ZXMnXVswXSkgewogICAgICAgIC8vIHdlIG5lZWQgdG8gcmVwbGFjZSB0aGUgZGF0ZSB3aXRoIERhdGUgdHlwZQogICAgICAgIHZhciB0ZW1wID0gewogICAgICAgICAgJ2NvbG9yJzogZGF0YVsnY29sb3InXSwKICAgICAgICAgICdtYXJrJzogZGF0YVsnbWFyayddLAogICAgICAgICAgJ2VuY29kaW5nJzogZGF0YVsnZW5jb2RpbmcnXSwKICAgICAgICAgICdkYXRhJzogewogICAgICAgICAgICAndmFsdWVzJzogW10KICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGFbJ2RhdGEnXVsndmFsdWVzJ10ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHZhciBjdXJyZW50XyA9IGRhdGFbJ2RhdGEnXVsndmFsdWVzJ11baV07IC8vIGN1cnJlbnRfWyd5ZWFyJ10gPSBuZXcgRGF0ZShjdXJyZW50X1sneWVhciddKQoKICAgICAgICAgIGN1cnJlbnRfW2NvbHVtbl9uYW1lXSA9IG5ldyBEYXRlKGN1cnJlbnRfW2NvbHVtbl9uYW1lXSk7CiAgICAgICAgICB0ZW1wWydkYXRhJ11bJ3ZhbHVlcyddLnB1c2goY3VycmVudF8pOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRlbXA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAiaXRlbVByb3BzLmRhdGEiOiBmdW5jdGlvbiBpdGVtUHJvcHNEYXRhKG5ld1Jhdywgb2xkVmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT09PSBwcm9wcyAhISEhIT09PT09PT09PT09PT0nLCB0aGlzLml0ZW1Qcm9wcyk7IC8vIGNvbnNvbGUubG9nKHRoaXMuaXRlbVByb3BzLmluZm8sIHRoaXMuaXRlbVByb3BzLmRhdGEpCgogICAgICB2YXIgaWQgPSB0aGlzLml0ZW1Qcm9wcy5pZDsKICAgICAgdmFyIGNsZWFuZWRfZGF0YSA9IFtdOwoKICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLml0ZW1Qcm9wcy5kYXRhLmxlbmd0aDsgaisrKSB7CiAgICAgICAgdmFyIG9uZV9kYXRhID0gdGhpcy5pdGVtUHJvcHMuZGF0YVtqXTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLml0ZW1Qcm9wcy5pbmZvWydkYXRlX2NvbHVtbiddLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgZGF0ZV9jb2x1bW5fbmFtZSA9IHRoaXMuaXRlbVByb3BzLmluZm9bJ2RhdGVfY29sdW1uJ11baV07CiAgICAgICAgICBvbmVfZGF0YSA9IHRoaXMucmVwbGFjZShvbmVfZGF0YSwgZGF0ZV9jb2x1bW5fbmFtZSk7CiAgICAgICAgfQoKICAgICAgICBvbmVfZGF0YVsnSUQnXSA9IGlkICsgImNoYXJ0IiArIGoudG9TdHJpbmcoKTsKICAgICAgICBjbGVhbmVkX2RhdGEucHVzaChvbmVfZGF0YSk7CiAgICAgIH0gLy8gY29uc29sZS5sb2coY2xlYW5lZF9kYXRhKQoKCiAgICAgIHRoaXMudmVnYUxpdGUgPSBjbGVhbmVkX2RhdGE7CgogICAgICBmb3IgKHZhciBfaiA9IDA7IF9qIDwgdGhpcy52ZWdhTGl0ZS5sZW5ndGg7IF9qKyspIHsKICAgICAgICBjb25zb2xlLmxvZygncmVuZGVyaW5nLi4uJyk7CiAgICAgICAgdmVnYUVtYmVkKCIjIiArIGlkICsgJ2NoYXJ0JyArIF9qLnRvU3RyaW5nKCksIHRoaXMudmVnYUxpdGVbX2pdKTsKICAgICAgfSAvLyBpZihuZXdSYXcubGVuZ3RoPjApewogICAgICAvLyAgIHZhciBuZXdWYWwgPSBuZXdSYXdbMF0KICAgICAgLy8gICB2YXIgdGVtcCA9IHsKICAgICAgLy8gICAgICdjb2xvcic6IG5ld1ZhbFsnY29sb3InXSwKICAgICAgLy8gICAgICdtYXJrJzogbmV3VmFsWydtYXJrJ10sCiAgICAgIC8vICAgICAnZW5jb2RpbmcnOiBuZXdWYWxbJ2VuY29kaW5nJ10sCiAgICAgIC8vICAgICAnZGF0YSc6IHsKICAgICAgLy8gICAgICAgJ3ZhbHVlcyc6IFtdCiAgICAgIC8vICAgICB9CiAgICAgIC8vICAgfQogICAgICAvLyAgIGZvcihsZXQgaT0wOyBpPG5ld1ZhbFsnZGF0YSddWyd2YWx1ZXMnXS5sZW5ndGg7IGkrKyl7CiAgICAgIC8vICAgICBsZXQgY3VycmVudF8gPSBuZXdWYWxbJ2RhdGEnXVsndmFsdWVzJ11baV0KICAgICAgLy8gICAgIC8vIGN1cnJlbnRfWyd5ZWFyJ10gPSBuZXcgRGF0ZShjdXJyZW50X1sneWVhciddKQogICAgICAvLyAgICAgdGVtcFsnZGF0YSddWyd2YWx1ZXMnXS5wdXNoKHsKICAgICAgLy8gICAgICAgJ25hbWUnOiBjdXJyZW50X1snbmFtZSddLAogICAgICAvLyAgICAgICAnc2VsbGluZ19wcmljZSc6IGN1cnJlbnRfWydzZWxsaW5nX3ByaWNlJ10sCiAgICAgIC8vICAgICAgICd5ZWFyJzogbmV3IERhdGUoY3VycmVudF9bJ3llYXInXSkKICAgICAgLy8gICAgIH0pCiAgICAgIC8vICAgfQogICAgICAvLyAgIGNvbnNvbGUubG9nKCdhZnRlciBjbGVhbmluZycsIHRlbXApCiAgICAgIC8vICAgdGhpcy52ZWdhTGl0ZSA9IFt0ZW1wXSAKICAgICAgLy8gfQoKICAgIH0KICB9Cn07"},{"version":3,"sources":["Inner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"card-inner\">\n    <!-- <vega-lite :data=\"values\" mark=\"bar\" :encoding=\"encoding\"/> -->\n    <!-- {{itemProps.inputData}} -->\n    <div v-for=\"(item, index) in vegaLite\" :key=\"index\">\n        <div v-bind:id=item.ID></div>\n      <!-- <vega-lite :data=\"item.data.values\" :mark=\"item.mark\" :encoding=\"item.encoding\" :color=\"item.color\" :shape=\"item.shape\"/> -->\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueVega from 'vue-vega'\nimport Vue from 'vue'\nimport vegaEmbed from 'vega-embed'\n\nVue.use(VueVega)\nexport default {\n  props: ['itemProps'], \n  data() {\n    return {\n      vegaLite: []\n    }\n  }, \n  methods: {\n    replace(data, column_name){\n      if(column_name in data['data']['values'][0]){\n        // we need to replace the date with Date type\n        var temp = {\n          'color': data['color'],\n          'mark': data['mark'],\n          'encoding': data['encoding'],\n          'data': {\n            'values': []\n          }\n        }\n        for(let i=0; i<data['data']['values'].length; i++){\n          let current_ = data['data']['values'][i]\n          // current_['year'] = new Date(current_['year'])\n          current_[column_name]  = new Date(current_[column_name])\n          temp['data']['values'].push(current_)\n        }\n        return temp \n\n      }else{\n        return data \n      }\n    }\n  \n  },\n  watch: {\n    \"itemProps.data\": function(newRaw, oldVal){\n      console.log('=========== props !!!!!=============',this.itemProps)\n      // console.log(this.itemProps.info, this.itemProps.data)\n      var id = this.itemProps.id\n      var cleaned_data = []\n      for(let j=0; j<this.itemProps.data.length; j++){\n          var one_data = this.itemProps.data[j]\n          for(let i=0; i<this.itemProps.info['date_column'].length; i++){\n            var date_column_name = this.itemProps.info['date_column'][i]\n             one_data = this.replace(one_data, date_column_name)\n          }\n          one_data['ID'] = id+\"chart\"+ j.toString()\n          cleaned_data.push(one_data)\n          \n      }\n      // console.log(cleaned_data)\n      this.vegaLite = cleaned_data\n      for(let j=0; j<this.vegaLite.length;j++){\n        console.log('rendering...')\n        vegaEmbed(\"#\"+id+'chart'+j.toString(), this.vegaLite[j])\n      }\n      \n      \n      // if(newRaw.length>0){\n      //   var newVal = newRaw[0]\n      //   var temp = {\n      //     'color': newVal['color'],\n      //     'mark': newVal['mark'],\n      //     'encoding': newVal['encoding'],\n      //     'data': {\n      //       'values': []\n      //     }\n      //   }\n      //   for(let i=0; i<newVal['data']['values'].length; i++){\n      //     let current_ = newVal['data']['values'][i]\n      //     // current_['year'] = new Date(current_['year'])\n      //     temp['data']['values'].push({\n      //       'name': current_['name'],\n      //       'selling_price': current_['selling_price'],\n      //       'year': new Date(current_['year'])\n      //     })\n      //   }\n      //   console.log('after cleaning', temp)\n      //   this.vegaLite = [temp] \n      // }\n    }\n   \n  }\n}\n</script>\n\n<style scoped>\n.card-name {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n.card-inner{\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n  overflow:scroll;\n}\nsvg{\n  width:245;\n  height:245\n}\n</style>"],"sourceRoot":"src/components/viewer/vegacharter"}]}