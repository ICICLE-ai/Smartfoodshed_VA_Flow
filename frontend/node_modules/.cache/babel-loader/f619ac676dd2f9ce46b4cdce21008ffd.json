{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/ontparser.js","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/ontparser.js","mtime":1666790787307},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1660324544800},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661232574882}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/ontparser.js"],"names":["getComponentType","getTargetCard","base_request_url","axios","createNewOntParserCard","id","sourceLink","targetLink","marginLeft","marginTop","width","height","inputData","linkml","vocabulary","selectedItems","loadingStatus","data_ontology","data_filter","keep_in_vis_mode","outputData","namespaced","state","nextAvailableIndex","cards","component","mutations","SET_outputData","data","i","console","log","SET_data_filter","status","SET_data_ontology","SET_loadingStatus","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","splice","ADD_SOURCE_LINK","linkData","source","ADD_TARGET_LINK","target","UPDATE_SOURCE","j","UPDATE_TARGET","REMOVE_SOURCELINK","REMOVE_TARGETLINK","undefined","SET_INPUTDATA","link","UPDATE_POS","UPDATE_SIZE","UPDATE_SELECTED_ITEMS","selected","KEEP_IN_VIS","actions","genSPARQL","commit","dispatch","path","post","result","targetCard","length","parseOnt","addComp","updatePos","updateSize","deleteComp","toDeletedComp","filter","card","toDeleteSourceLink","toDeleteTargetLink","forEach","root","addLink","updateLink","removeLink","updateSelectedItems","inputHandler","sourceCompType","targetCompType","alert","outputHandler","keepInVis"],"mappings":"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","sourcesContent":["import {getComponentType, getTargetCard} from '@/utils/help'\nimport { base_request_url } from '@/utils/base_url'\nimport axios from 'axios'\nfunction createNewOntParserCard(id){\n  return {\n    id: `card-ontparser-${id}`,\n    sourceLink: [], //\n    targetLink: [], \n    marginLeft: null, \n    marginTop: null, \n    width: 500, \n    height: 300,\n    inputData: {\n      linkml: null,\n      vocabulary: null\n    },\n    selectedItems: [],\n    loadingStatus: false,\n    data_ontology: [],\n    data_filter: [],\n    keep_in_vis_mode: false,\n    outputData: \"\"\n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [],\n    component: () => import('@/components/analyzer/ontparser'), \n    \n\n  }, \n  mutations: {\n    SET_outputData(state, {id, data}){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].outputData = data\n          console.log(data)\n        }\n      } \n    },\n    SET_data_filter(state, {id, status}){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].data_filter = status\n        }\n      }\n    },\n    SET_data_ontology(state, {id, status}){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].data_ontology = status\n        }\n      }\n    },\n    SET_loadingStatus(state, {id, status}){\n      console.log('loading status changing,,,', id, status)\n      for(let i in state.cards){\n        console.log(state.cards[i].id)\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].loadingStatus = status\n        }\n      }\n    },\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewOntParserCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          break\n        }\n      }\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      console.log('addlink!!!');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    ADD_TARGET_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          state.cards[i].targetLink.push(linkData);\n          return;\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n    REMOVE_TARGETLINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              state.cards[i].targetLink.splice(j, 1);\n              state.cards[i].inputData = undefined;\n            }\n          }\n        }\n      }\n    }, \n    SET_INPUTDATA(state, {link, inputData}){\n      for(let i in state.cards){\n        if(state.cards[i].id == link.target){\n          state.cards[i].inputData = inputData;\n          // console.log('check card data',state.cards[i].inputData)\n        }\n      }\n    }, \n    UPDATE_POS(state, {id, marginLeft, marginTop}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].marginTop = marginTop \n          state.cards[i].marginLeft = marginLeft\n        }\n      }\n    }, \n    UPDATE_SIZE(state, {id, width, height}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].width = width \n          state.cards[i].height = height\n        }\n      }\n    },\n    UPDATE_SELECTED_ITEMS(state, {id, selected}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].selectedItems = selected\n        }\n      }\n    }, \n    KEEP_IN_VIS(state, id) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].keep_in_vis_mode = !state.cards[i].keep_in_vis_mode\n        }\n      } \n    }\n  }, \n  actions: {\n    async genSPARQL({commit, state, dispatch}, data){\n      commit('SET_loadingStatus', {'id': data['id'], 'status':true})\n      for(let i in state.cards){\n        if(state.cards[i].id == data.id){\n          data['linkml'] = state.cards[i].inputData['linkml']\n          data['vocabulary']= state.cards[i].inputData['vocabulary']\n        }\n      }\n      let path = base_request_url + 'genSPARQL'\n      let result = await axios.post(path, data)\n      // update output data \n      commit('SET_outputData', {'id': data['id'], 'data':result['data']['SPARQL']})\n      // update target components \n      const targetCard = getTargetCard(state.cards, data['id']) \n      if (targetCard.sourceLink.length > 0) {\n        for (let i in targetCard.sourceLink) {\n          dispatch('outputHandler', targetCard.sourceLink[i])\n        }\n      }\n      \n    },\n    async parseOnt({commit, state, dispatch}, data){\n      commit('SET_loadingStatus', {'id': data['id'], 'status':true})\n      let path = base_request_url + 'getOntology'\n      let result = await axios.post(path, data)\n      \n      commit('SET_data_ontology', {'id': data['id'], 'status':result['data']['ontology']})\n      commit('SET_data_filter', {'id': data['id'], 'status': result['data']['filter']} )\n      commit('SET_loadingStatus', {'id': data['id'],'status':false})\n    },\n    addComp({commit}, ){\n      commit('ADD_COMPONENT');\n    },\n\n    updatePos({commit}, {id, marginTop, marginLeft}) {\n      commit('UPDATE_POS', {id, marginTop, marginLeft})\n    }, \n\n    updateSize({commit}, {id, width, height}) {\n      commit('UPDATE_SIZE', {id, width, height})\n    }, \n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      const toDeleteTargetLink = [...toDeletedComp.targetLink];\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      toDeleteTargetLink.forEach(link => {\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      commit('DELETE_COMPONENT', id);\n    }, \n    addLink({commit, dispatch}, data){\n      if(data.status == \"source\"){\n        commit('ADD_SOURCE_LINK', data)\n        dispatch('outputHandler', data)\n      }else{\n        commit('ADD_TARGET_LINK', data)\n        //dispatch('inputHandler', linkData)\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        commit('REMOVE_TARGETLINK', linkData)\n      }\n    },\n    \n    updateSelectedItems({state, commit, dispatch}, {id, selected}) {\n      commit('UPDATE_SELECTED_ITEMS', {id, selected})\n      const targetCard = getTargetCard(state.cards, id) \n      if (targetCard.sourceLink.length > 0) {\n        for (let i in targetCard.sourceLink) {\n          dispatch('outputHandler', targetCard.sourceLink[i])\n        }\n      }\n    },\n    // Input Handler will be triggered by other components\n    // When source Component\n    inputHandler({commit, state, dispatch}, {link, inputData}){\n      const sourceCompType = getComponentType(link.source);\n      const targetCompType = getComponentType(link.target);\n      if(inputData['linkml']!=\"\"  & inputData['vocabulary']!=\"\"){\n        console.log('commit')\n        commit('SET_INPUTDATA', {link, inputData})\n        inputData['id'] = link.target;\n        dispatch('parseOnt', inputData)\n      }else{\n        alert('linkml and vocabulary are required!')\n      }\n    }, \n\n    outputHandler({commit, state, dispatch}, linkData){\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          // console.log(state.cards[i])\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData:  state.cards[i].outputData}, {root: true})\n          return;\n        }\n      }\n    },\n    keepInVis({commit}, id) {\n      commit('KEEP_IN_VIS', id)\n    }\n  }\n}"]}]}