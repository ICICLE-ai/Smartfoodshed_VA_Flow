{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/kgquerier/Inner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/kgquerier/Inner.vue","mtime":1666798920505},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgY29tcG9uZW50RW5hYmxlRHJhZ0hhbmRsZXIsIGNvbXBvbmVudERpc2FibGVEcmFnSGFuZGxlciB9IGZyb20gIkAvdXRpbHMvZ2xvYmFsVmlld0NhcmRVdGlscy90b29sSGVscGVyLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ2l0ZW1Qcm9wcycsICdmaXhlZCcsICdpbm5lclN0eWxlJ10sCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkRW50aXRpZXM6IFtdLAogICAgICBzZWxlY3RlZFJlbGF0aW9uczogW10sCiAgICAgIGN1cnJlbnRFbnRpdGllczogW10sCiAgICAgIGN1cnJlbnRSZWxhdGlvbnM6IFtdLAogICAgICBsYXNzb0NvbG9yOiAiZ3JleSIsCiAgICAgIHpvb21QYW5Db2xvcjogImdyZWVuIiwKICAgICAgbGFzc29TdGF0dXM6IGZhbHNlLAogICAgICB6b29tUGFuU3RhdHVzOiBmYWxzZSwKICAgICAgbGFzc286IG51bGwsCiAgICAgIHpvb206IG51bGwsCiAgICAgIGxvYWRpbmdfdmFsdWU6IGZhbHNlLAogICAgICB0aXA6IG51bGwsCiAgICAgIHVzZXJfZGVmaW5lZF90aHJlOiA1LAogICAgICAvLyB1c2VyIGRlZmluZWQgdGhyZXNob2xkIHRvIHNob3cgaG93IG1hbnkgbm9kZXMgd2Ugd2FudCB0byBzZWUgaWYgd2UgZXhwYW5kIG9uZSBub2RlIAogICAgICBuZW80amQzOiBudWxsLAogICAgICBicnVzaGVkOiB7CiAgICAgICAgImVudGl0eV90eXBlIjogW10sCiAgICAgICAgInJlbGF0aW9uc2hpcF90eXBlIjogW10KICAgICAgfSwKICAgICAgc2hvd092ZXJ2aWV3OiBmYWxzZSwKICAgICAgc2hvd01heFJldHJpZXZlOiBmYWxzZSwKICAgICAgZmF2OiB0cnVlLAogICAgICBtZW51OiBmYWxzZSwKICAgICAgbWVzc2FnZTogZmFsc2UsCiAgICAgIGhpbnRzOiB0cnVlLAogICAgICBzZWxlY3RlZENvbG9yOiBudWxsLAogICAgICBzaG93UmVzVGhyZTogZmFsc2UsCiAgICAgIC8vIHJlc2lsaWVuY2UgdGhyZXNob2xkIGJhciAKICAgICAgcmVzaWxpZW5jZV90aHJlOiAwLAogICAgICAvLyBzZWxlY3RlZCB0aHJlc2hvbGQgb2YgcmVzaWxpZW5jZSAKICAgICAgLy8gbWluX3Jlc2lsaWVuY2U6IDAsCiAgICAgIG1heF9yZXNpbGllbmNlOiAxLAogICAgICAvLyBtYXhpbXVtIHZhbHVlIG9mIHRoZSBzY3JvbGwgYmFyIGZvciByZXNpbGllbmNlIHRocmVzaG9sZCAKICAgICAgRklYRUQ6IGZhbHNlLAogICAgICAvLyBjdXN0b20KICAgICAgLy8gIGVuZHBvaW50OiAnaHR0cDovL2RicGVkaWEub3JnL3NwYXJxbCcsCiAgICAgIC8vICBlbmRwb2ludDogJ2h0dHBzOi8vbWFrZy5vcmcvc3BhcnFsJywKICAgICAgZW5kcG9pbnQ6ICcnLAogICAgICBnaXR1cmw6ICcnIC8vIGdpdHVybDogJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hZGhvbGxhbmRlci9QUE9EdG90dGwvbWFpbi9QUE9EMC50dGwnCgogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7Ly8gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2dldEdyYXBoT3ZlcnZpZXcnKQogICAgLy8gd2luZG93WydkMyddID0gZDMKICB9LAogIG1ldGhvZHM6IHsKICAgIHF1ZXJ5OiBmdW5jdGlvbiBxdWVyeSgpIHsKICAgICAgaWYgKHRoaXMuZW5kcG9pbnQgIT0gIiIgJiYgdGhpcy5naXR1cmwgPT0gIiIpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgna2dxdWVyaWVyL3F1ZXJ5RW5kcG9pbnQnLCB7CiAgICAgICAgICAnaWQnOiB0aGlzLml0ZW1Qcm9wcy5pZCwKICAgICAgICAgICd1cmwnOiB0aGlzLmVuZHBvaW50CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5lbmRwb2ludCA9PSAiIiAmJiB0aGlzLmdpdHVybCAhPSAnJykgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdrZ3F1ZXJpZXIvcXVlcnlUVEwnLCB7CiAgICAgICAgICBpZDogdGhpcy5pdGVtUHJvcHMuaWQsCiAgICAgICAgICB1cmw6IHRoaXMuZ2l0dXJsCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2tncXVlcmllci9xdWVyeUdJVCcsIHtpZDogdGhpcy5pdGVtUHJvcHMuaWQsICd1cmwnOiB0aGlzLmRibENsaWNrSGFuZGxlci59KQogICAgICAgIGFsZXJ0KCdwbGVhc2UgZWl0aGVyIGVudGVyIGFuIGVuZHBvaW50IG9yIGdpdGh1YiBsaW5rIHRvIHR0bCBmaWxlJyk7CiAgICAgIH0KICAgIH0sCiAgICBkYmxDbGlja0hhbmRsZXI6IGZ1bmN0aW9uIGRibENsaWNrSGFuZGxlcigpIHsKICAgICAgdGhpcy50b2dnbGVGaXhDb21wUG9zKCk7CiAgICB9LAogICAgdG9nZ2xlRml4Q29tcFBvczogZnVuY3Rpb24gdG9nZ2xlRml4Q29tcFBvcygpIHsKICAgICAgdGhpcy5GSVhFRCA9ICF0aGlzLkZJWEVEOwoKICAgICAgaWYgKCF0aGlzLmRhdGFTdGF0dXMpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLkZJWEVEKSB7CiAgICAgICAgY29tcG9uZW50RGlzYWJsZURyYWdIYW5kbGVyKCIuZ2xvYmFsdmlldy1jYW52YXMtIi5jb25jYXQodGhpcy5pdGVtUHJvcHMuaWQpLCB0aGlzLnRvb2xTdGF0dXMpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbXBvbmVudEVuYWJsZURyYWdIYW5kbGVyKCIuZ2xvYmFsdmlldy1jYW52YXMtIi5jb25jYXQodGhpcy5pdGVtUHJvcHMuaWQpLCB0aGlzLnRvb2xTdGF0dXMpOwogICAgICB9CiAgICB9LAogICAgdG9vbEVuYWJsZVRvZ2dsZUhhbmRsZXI6IGZ1bmN0aW9uIHRvb2xFbmFibGVUb2dnbGVIYW5kbGVyKGUpIHsKICAgICAgYWxlcnQoZSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgYnJ1c2hlZDogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHZhbCkgewogICAgICAgIGNvbnNvbGUubG9nKHZhbCk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0sCiAgICAnaXRlbVByb3BzLmlucHV0RGF0YSc6IGZ1bmN0aW9uIGl0ZW1Qcm9wc0lucHV0RGF0YShuZXd2YWwsIG9sZHZhbCkgewogICAgICBjb25zb2xlLmxvZyhuZXd2YWwpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGdldEJvcmRlcjogZnVuY3Rpb24gZ2V0Qm9yZGVyKCkgewogICAgICByZXR1cm4gdGhpcy5GSVhFRCA/ICIycHggc29saWQgZ3JleSIgOiAiTm9uZSI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Inner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"card-inner\" :style=\"{border: getBorder}\">\n        <!-- <v-card> -->\n          <v-card-title>\n            Knowledge Graph Querier \n          </v-card-title>\n          <v-row>\n            <v-col cols=\"5\">\n              <v-text-field\n              v-model=\"endpoint\"\n              label=\"KG Endpoint\"\n              required\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"5\">\n              <v-text-field\n              v-model=\"giturl\"\n              label=\"Github URL of KG\"\n              required\n              ></v-text-field>\n            </v-col>\n            </v-row>\n            <v-btn\n            color=\"success\"\n            class=\"mr-4\"\n            @click=\"query\"\n            :loading = \"itemProps.loadingStatus\"\n            >\n            Query\n            </v-btn>\n        <!-- </v-card> -->\n        <v-overlay :value=\"loading_value\">\n        <v-progress-circular\n          indeterminate\n          size=\"64\"\n        ></v-progress-circular>\n      </v-overlay>\n    </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport {componentEnableDragHandler,componentDisableDragHandler,} from \"@/utils/globalViewCardUtils/toolHelper.js\";\n\nexport default{\n  props: ['itemProps', 'fixed', 'innerStyle'], \n  components: {\n  },  \n  data () {\n    return {\n        selectedEntities: [], \n        selectedRelations: [],\n        currentEntities: [], \n        currentRelations: [],\n        lassoColor: \"grey\", \n        zoomPanColor: \"green\", \n        lassoStatus: false,\n        zoomPanStatus: false, \n        lasso: null, \n        zoom: null, \n        loading_value:false,\n        tip: null,\n        user_defined_thre: 5,// user defined threshold to show how many nodes we want to see if we expand one node \n        neo4jd3 : null,\n        brushed: {\"entity_type\": [], \"relationship_type\": []},\n        showOverview:false, \n        showMaxRetrieve:false,\n        fav: true,\n        menu: false,\n        message: false,\n        hints: true,\n        selectedColor: null, \n        showResThre: false, // resilience threshold bar \n        resilience_thre: 0,  // selected threshold of resilience \n        // min_resilience: 0,\n        max_resilience: 1, // maximum value of the scroll bar for resilience threshold \n        FIXED: false,\n\n        \n      // custom\n      //  endpoint: 'http://dbpedia.org/sparql',\n      //  endpoint: 'https://makg.org/sparql',\n      endpoint: '',\n      giturl:''\n      // giturl: 'https://raw.githubusercontent.com/adhollander/PPODtottl/main/PPOD0.ttl'\n    }\n  },\n  created () {\n    // this.$store.dispatch('getGraphOverview')\n    // window['d3'] = d3\n   \n    \n  },\n  methods: {\n    query(){\n      if(this.endpoint!=\"\" &&  this.giturl==\"\"){\n        this.$store.dispatch('kgquerier/queryEndpoint', {'id': this.itemProps.id, 'url': this.endpoint})\n      }else if(this.endpoint ==\"\" && this.giturl!=''){\n        this.$store.dispatch('kgquerier/queryTTL', {id: this.itemProps.id, url: this.giturl})\n      }else{\n        // this.$store.dispatch('kgquerier/queryGIT', {id: this.itemProps.id, 'url': this.dblClickHandler.})\n        alert('please either enter an endpoint or github link to ttl file')\n      }\n    },\n    dblClickHandler() {\n      this.toggleFixCompPos();\n    }, \n    \n    toggleFixCompPos() {\n      this.FIXED = !this.FIXED;\n      if (!this.dataStatus) {\n        return;\n      }\n      if (this.FIXED) {\n        componentDisableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      } else {\n        componentEnableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      }\n    },\n    toolEnableToggleHandler(e) {\n      alert(e)\n    },\n   \n    \n  },\n  watch: {\n    brushed:{\n      handler(val){\n          console.log(val);\n      },\n      deep:true \n    },\n    'itemProps.inputData'(newval, oldval){\n      console.log(newval)\n    }\n    \n  },\n  computed: {\n    getBorder() {\n      return this.FIXED ? \"2px solid grey\" : \"None\";\n    }\n  }\n}\n</script>\n<style>\n.graph-btn-container{\n    position: relative; \n    top: 5px;\n}\n.kg-view-btn{\n  margin-right: 10px;\n}\n\n.circle-button:hover{\n  cursor: pointer;\n}\n\n.card-name {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n.card-inner{\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n}\n\n</style>\n"],"sourceRoot":"src/components/analyzer/kgquerier"}]}