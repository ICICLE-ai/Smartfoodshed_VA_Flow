{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/kgquerier/Inner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/kgquerier/Inner.vue","mtime":1669059161534},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMveWFtZWl0dS9EZXNrdG9wL0lDSVJDTEUvU21hcnRmb29kc2hlZF9WQV9GbG93L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IGNvbXBvbmVudEVuYWJsZURyYWdIYW5kbGVyLCBjb21wb25lbnREaXNhYmxlRHJhZ0hhbmRsZXIgfSBmcm9tICJAL3V0aWxzL2dsb2JhbFZpZXdDYXJkVXRpbHMvdG9vbEhlbHBlci5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydpdGVtUHJvcHMnLCAnZml4ZWQnLCAnaW5uZXJTdHlsZSddLAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgX3JlZjsKCiAgICByZXR1cm4gX3JlZiA9IHsKICAgICAgc2VsZWN0ZWRFbnRpdGllczogW10sCiAgICAgIHNlbGVjdGVkUmVsYXRpb25zOiBbXSwKICAgICAgY3VycmVudEVudGl0aWVzOiBbXSwKICAgICAgY3VycmVudFJlbGF0aW9uczogW10sCiAgICAgIGxhc3NvQ29sb3I6ICJncmV5IiwKICAgICAgem9vbVBhbkNvbG9yOiAiZ3JlZW4iLAogICAgICBsYXNzb1N0YXR1czogZmFsc2UsCiAgICAgIHpvb21QYW5TdGF0dXM6IGZhbHNlLAogICAgICBsYXNzbzogbnVsbCwKICAgICAgem9vbTogbnVsbCwKICAgICAgbG9hZGluZ192YWx1ZTogZmFsc2UsCiAgICAgIHRpcDogbnVsbCwKICAgICAgdXNlcl9kZWZpbmVkX3RocmU6IDUsCiAgICAgIC8vIHVzZXIgZGVmaW5lZCB0aHJlc2hvbGQgdG8gc2hvdyBob3cgbWFueSBub2RlcyB3ZSB3YW50IHRvIHNlZSBpZiB3ZSBleHBhbmQgb25lIG5vZGUgCiAgICAgIG5lbzRqZDM6IG51bGwsCiAgICAgIGJydXNoZWQ6IHsKICAgICAgICAiZW50aXR5X3R5cGUiOiBbXSwKICAgICAgICAicmVsYXRpb25zaGlwX3R5cGUiOiBbXQogICAgICB9LAogICAgICBzaG93T3ZlcnZpZXc6IGZhbHNlLAogICAgICBzaG93TWF4UmV0cmlldmU6IGZhbHNlLAogICAgICBmYXY6IHRydWUsCiAgICAgIG1lbnU6IGZhbHNlLAogICAgICBtZXNzYWdlOiBmYWxzZSwKICAgICAgaGludHM6IHRydWUsCiAgICAgIHNlbGVjdGVkQ29sb3I6IG51bGwsCiAgICAgIHNob3dSZXNUaHJlOiBmYWxzZSwKICAgICAgLy8gcmVzaWxpZW5jZSB0aHJlc2hvbGQgYmFyIAogICAgICByZXNpbGllbmNlX3RocmU6IDAsCiAgICAgIC8vIHNlbGVjdGVkIHRocmVzaG9sZCBvZiByZXNpbGllbmNlIAogICAgICAvLyBtaW5fcmVzaWxpZW5jZTogMCwKICAgICAgbWF4X3Jlc2lsaWVuY2U6IDEsCiAgICAgIC8vIG1heGltdW0gdmFsdWUgb2YgdGhlIHNjcm9sbCBiYXIgZm9yIHJlc2lsaWVuY2UgdGhyZXNob2xkIAogICAgICBGSVhFRDogZmFsc2UsCiAgICAgIC8vIGN1c3RvbQogICAgICAvLyAgZW5kcG9pbnQ6ICdodHRwOi8vZGJwZWRpYS5vcmcvc3BhcnFsJywKICAgICAgZW5kcG9pbnQ6ICdodHRwczovL21ha2cub3JnL3NwYXJxbCcKICAgIH0sIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCAiZW5kcG9pbnQiLCAnJyksIF9kZWZpbmVQcm9wZXJ0eShfcmVmLCAiZ2l0dXJsIiwgJycpLCBfcmVmOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsvLyB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnZ2V0R3JhcGhPdmVydmlldycpCiAgICAvLyB3aW5kb3dbJ2QzJ10gPSBkMwogIH0sCiAgbWV0aG9kczogewogICAgcXVlcnk6IGZ1bmN0aW9uIHF1ZXJ5KCkgewogICAgICBpZiAodGhpcy5lbmRwb2ludCAhPSAiIiAmJiB0aGlzLmdpdHVybCA9PSAiIikgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdrZ3F1ZXJpZXIvcXVlcnlFbmRwb2ludCcsIHsKICAgICAgICAgICdpZCc6IHRoaXMuaXRlbVByb3BzLmlkLAogICAgICAgICAgJ3VybCc6IHRoaXMuZW5kcG9pbnQKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmVuZHBvaW50ID09ICIiICYmIHRoaXMuZ2l0dXJsICE9ICcnKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2tncXVlcmllci9xdWVyeVRUTCcsIHsKICAgICAgICAgIGlkOiB0aGlzLml0ZW1Qcm9wcy5pZCwKICAgICAgICAgIHVybDogdGhpcy5naXR1cmwKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyB0aGlzLiRzdG9yZS5kaXNwYXRjaCgna2dxdWVyaWVyL3F1ZXJ5R0lUJywge2lkOiB0aGlzLml0ZW1Qcm9wcy5pZCwgJ3VybCc6IHRoaXMuZGJsQ2xpY2tIYW5kbGVyLn0pCiAgICAgICAgYWxlcnQoJ3BsZWFzZSBlaXRoZXIgZW50ZXIgYW4gZW5kcG9pbnQgb3IgZ2l0aHViIGxpbmsgdG8gdHRsIGZpbGUnKTsKICAgICAgfQogICAgfSwKICAgIGRibENsaWNrSGFuZGxlcjogZnVuY3Rpb24gZGJsQ2xpY2tIYW5kbGVyKCkgewogICAgICB0aGlzLnRvZ2dsZUZpeENvbXBQb3MoKTsKICAgIH0sCiAgICB0b2dnbGVGaXhDb21wUG9zOiBmdW5jdGlvbiB0b2dnbGVGaXhDb21wUG9zKCkgewogICAgICB0aGlzLkZJWEVEID0gIXRoaXMuRklYRUQ7CgogICAgICBpZiAoIXRoaXMuZGF0YVN0YXR1cykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuRklYRUQpIHsKICAgICAgICBjb21wb25lbnREaXNhYmxlRHJhZ0hhbmRsZXIoIi5nbG9iYWx2aWV3LWNhbnZhcy0iLmNvbmNhdCh0aGlzLml0ZW1Qcm9wcy5pZCksIHRoaXMudG9vbFN0YXR1cyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29tcG9uZW50RW5hYmxlRHJhZ0hhbmRsZXIoIi5nbG9iYWx2aWV3LWNhbnZhcy0iLmNvbmNhdCh0aGlzLml0ZW1Qcm9wcy5pZCksIHRoaXMudG9vbFN0YXR1cyk7CiAgICAgIH0KICAgIH0sCiAgICB0b29sRW5hYmxlVG9nZ2xlSGFuZGxlcjogZnVuY3Rpb24gdG9vbEVuYWJsZVRvZ2dsZUhhbmRsZXIoZSkgewogICAgICBhbGVydChlKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBicnVzaGVkOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIodmFsKSB7CiAgICAgICAgY29uc29sZS5sb2codmFsKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfSwKICAgICdpdGVtUHJvcHMuaW5wdXREYXRhJzogZnVuY3Rpb24gaXRlbVByb3BzSW5wdXREYXRhKG5ld3ZhbCwgb2xkdmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKG5ld3ZhbCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0Qm9yZGVyOiBmdW5jdGlvbiBnZXRCb3JkZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLkZJWEVEID8gIjJweCBzb2xpZCBncmV5IiA6ICJOb25lIjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Inner.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"card-inner\" :style=\"{border: getBorder}\">\n        <!-- <v-card> -->\n          <v-card-title>\n            Knowledge Graph Querier \n          </v-card-title>\n          <v-row>\n            <v-col cols=\"5\">\n              <v-text-field\n              v-model=\"endpoint\"\n              label=\"KG Endpoint\"\n              required\n              ></v-text-field>\n            </v-col>\n            <v-col cols=\"5\">\n              <v-text-field\n              v-model=\"giturl\"\n              label=\"Github URL of KG\"\n              required\n              ></v-text-field>\n            </v-col>\n            </v-row>\n            <v-btn\n            color=\"success\"\n            class=\"mr-4\"\n            @click=\"query\"\n            :loading = \"itemProps.loadingStatus\"\n            >\n            Query\n            </v-btn>\n        <!-- </v-card> -->\n        <v-overlay :value=\"loading_value\">\n        <v-progress-circular\n          indeterminate\n          size=\"64\"\n        ></v-progress-circular>\n      </v-overlay>\n    </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport {componentEnableDragHandler,componentDisableDragHandler,} from \"@/utils/globalViewCardUtils/toolHelper.js\";\n\nexport default{\n  props: ['itemProps', 'fixed', 'innerStyle'], \n  components: {\n  },  \n  data () {\n    return {\n        selectedEntities: [], \n        selectedRelations: [],\n        currentEntities: [], \n        currentRelations: [],\n        lassoColor: \"grey\", \n        zoomPanColor: \"green\", \n        lassoStatus: false,\n        zoomPanStatus: false, \n        lasso: null, \n        zoom: null, \n        loading_value:false,\n        tip: null,\n        user_defined_thre: 5,// user defined threshold to show how many nodes we want to see if we expand one node \n        neo4jd3 : null,\n        brushed: {\"entity_type\": [], \"relationship_type\": []},\n        showOverview:false, \n        showMaxRetrieve:false,\n        fav: true,\n        menu: false,\n        message: false,\n        hints: true,\n        selectedColor: null, \n        showResThre: false, // resilience threshold bar \n        resilience_thre: 0,  // selected threshold of resilience \n        // min_resilience: 0,\n        max_resilience: 1, // maximum value of the scroll bar for resilience threshold \n        FIXED: false,\n\n        \n      // custom\n      //  endpoint: 'http://dbpedia.org/sparql',\n       endpoint: 'https://makg.org/sparql',\n      endpoint: '',\n      giturl:'',\n      // giturl: 'https://raw.githubusercontent.com/adhollander/PPODtottl/main/PPOD0.ttl'\n    }\n  },\n  created () {\n    // this.$store.dispatch('getGraphOverview')\n    // window['d3'] = d3\n   \n    \n  },\n  methods: {\n    query(){\n      if(this.endpoint!=\"\" &&  this.giturl==\"\"){\n        this.$store.dispatch('kgquerier/queryEndpoint', {'id': this.itemProps.id, 'url': this.endpoint})\n      }else if(this.endpoint ==\"\" && this.giturl!=''){\n        this.$store.dispatch('kgquerier/queryTTL', {id: this.itemProps.id, url: this.giturl})\n      }else{\n        // this.$store.dispatch('kgquerier/queryGIT', {id: this.itemProps.id, 'url': this.dblClickHandler.})\n        alert('please either enter an endpoint or github link to ttl file')\n      }\n    },\n    dblClickHandler() {\n      this.toggleFixCompPos();\n    }, \n    \n    toggleFixCompPos() {\n      this.FIXED = !this.FIXED;\n      if (!this.dataStatus) {\n        return;\n      }\n      if (this.FIXED) {\n        componentDisableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      } else {\n        componentEnableDragHandler(\n          `.globalview-canvas-${this.itemProps.id}`,\n          this.toolStatus\n        );\n      }\n    },\n    toolEnableToggleHandler(e) {\n      alert(e)\n    },\n   \n    \n  },\n  watch: {\n    brushed:{\n      handler(val){\n          console.log(val);\n      },\n      deep:true \n    },\n    'itemProps.inputData'(newval, oldval){\n      console.log(newval)\n    }\n    \n  },\n  computed: {\n    getBorder() {\n      return this.FIXED ? \"2px solid grey\" : \"None\";\n    }\n  }\n}\n</script>\n<style>\n.graph-btn-container{\n    position: relative; \n    top: 5px;\n}\n.kg-view-btn{\n  margin-right: 10px;\n}\n\n.circle-button:hover{\n  cursor: pointer;\n}\n\n.card-name {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n.card-inner{\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n}\n\n</style>\n"],"sourceRoot":"src/components/analyzer/kgquerier"}]}