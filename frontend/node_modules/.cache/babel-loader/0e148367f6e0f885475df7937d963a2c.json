{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/babel-loader@8.2.5_5ouqwanl7jnotevpn4w6qovjqm/node_modules/babel-loader/lib/index.js!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/ontology.js","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/ontology.js","mtime":1660324547629},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1660324544800},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/cache-loader@4.1.0_webpack@4.46.0/node_modules/cache-loader/dist/cjs.js","mtime":1660324597580},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/.pnpm/babel-loader@8.2.5_5ouqwanl7jnotevpn4w6qovjqm/node_modules/babel-loader/lib/index.js","mtime":1660324598487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getComponentType","axios","createNewOntology","id","selectedOntology","sourceLink","targetLink","marginLeft","marginTop","width","height","data","undefined","namespaced","state","nextAvailableIndex","cards","component","mutations","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","i","splice","ADD_SOURCE_LINK","linkData","console","log","source","ADD_TARGET_LINK","target","UPDATE_SOURCE","j","UPDATE_TARGET","REMOVE_SOURCELINK","REMOVE_TARGETLINK","inputData","SET_INPUTDATA","link","ADD_DATA","cardId","ontology","LOAD_DATA","actions","addComp","commit","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","toDeleteTargetLink","forEach","root","addLink","status","updateLink","removeLink","addOntology","selectedTable","ontologyData","post","ontologyName","cardid","sourcelink","inputHandler","sourceCompType","targetCompType","tableNames","outputHandler"],"sources":["/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/ontology.js"],"sourcesContent":["import {getComponentType} from '@/utils/help'\nimport axios from 'axios'\n\nfunction createNewOntology(id){\n  return {\n    id: `card-ontology-${id}`,\n    selectedOntology: null, \n    sourceLink: [], //\n    targetLink: [], \n    marginLeft: null, \n    marginTop: null, \n    width: null, \n    height: null,\n    data: undefined, \n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [],\n    component: () => import('@/components/OntologyComp'), \n  }, \n  mutations: {\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewOntology(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          break\n        }\n      }\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      console.log('addlink!!!');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    ADD_TARGET_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          state.cards[i].targetLink.push(linkData);\n          return;\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              // state.cards[i].sourceLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].sourceLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].sourceLink[j].d = linkData.d;\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n    REMOVE_TARGETLINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink.splice(j, 1);\n              state.cards[i].inputData = undefined;\n            }\n          }\n        }\n      }\n    }, \n    SET_INPUTDATA(state, {link, inputData}){\n      for(let i in state.cards){\n        if(state.cards[i].id == link.target){\n          // Object.keys(inputData).forEach(\n          //   key => {state.cards[i].inputData[key] = inputData[key]}\n          // )\n          // console.log(state.cards[i].inputData)\n          state.cards[i].inputData = inputData;\n        }\n      }\n    }, \n    ADD_DATA(state, data){\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId){\n          state.cards[i].selectedOntology = data.ontology;\n        }\n      }\n    },\n    LOAD_DATA(state, {id, data}){\n      for(let i in state.cards){\n        console.log(\"=========\")\n        console.log(data)\n        console.log(state.cards[i].id)\n        console.log(id)\n        console.log(\"=========\")\n        if(state.cards[i].id == id){\n          state.cards[i].data = data;\n        }\n      }\n    },\n  }, \n  actions: {\n    addComp({commit}, ){\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      const toDeleteTargetLink = [...toDeletedComp.targetLink];\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      toDeleteTargetLink.forEach(link => {\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      commit('DELETE_COMPONENT', id);\n    }, \n    addLink({commit}, data){\n      if(data.status == \"source\"){\n        commit('ADD_SOURCE_LINK', data)\n        dispatch('outputHandler', linkData)\n      }else{\n        commit('ADD_TARGET_LINK', data)\n        //dispatch('inputHandler', linkData)\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        commit('REMOVE_TARGETLINK', linkData)\n      }\n    },\n    \n    \n    async addOntology({commit, dispatch, state}, data){\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId && state.cards[i].selectedTable !== data){\n          commit('ADD_DATA', data);\n          console.log(data);\n          let ontologyData = await axios.post('http://127.0.0.1:5000/getOntology')\n          console.log(ontologyData.data); \n          commit('LOAD_DATA', {id: data.cardId, data: {\n            data: {...ontologyData.data} , \n            ontologyName: data.ontology\n          }})\n\n          console.log('adding ontologyData ############')\n         \n          for(let i in state.cards){\n            if(state.cards[i].id == data.cardid){\n              for(let j in state.cards[i].sourcelink){\n                dispatch('outputhandler', state.cards[i].sourcelink[j])\n              }\n            }\n          }\n        }\n      }\n    },\n\n    // Input Handler will be triggered by other components\n    // When source Component\n    inputHandler({commit, state, }, {link, inputData}){\n      const sourceCompType = getComponentType(link.source);\n      const targetCompType = getComponentType(link.target);\n      console.log('document Hanlde Input 123');\n      console.log(inputData);\n      if(inputData && inputData.tableNames){\n        commit('SET_INPUTDATA', {link, inputData})  \n      }\n    }, \n\n    outputHandler({commit, state, }, linkData){\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData: state.cards[i].inputData}, {root: true})\n          return;\n        }\n      }\n    },\n\n    \n    \n  }\n}"],"mappings":"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"}]}