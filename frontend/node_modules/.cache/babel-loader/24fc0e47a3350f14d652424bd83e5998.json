{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/loader/corpus.js","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/loader/corpus.js","mtime":1665084931781},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/loader/corpus.js"],"names":["getComponentType","formatTable","axios","apiClient","createNewCorpusCard","id","sourceLink","selectedTable","undefined","marginLeft","marginTop","width","height","data","loadingStatus","namespaced","state","nextAvailableIndex","cards","component","mutations","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","i","splice","console","log","ADD_SOURCE_LINK","linkData","source","UPDATE_SOURCE","j","UPDATE_TARGET","target","targetLink","REMOVE_SOURCELINK","UPDATE_LOADING_STATUS","status","ADD_DATA","cardId","LOAD_DATA","UPDATE_POS","UPDATE_SIZE","actions","updatePos","commit","updateSize","addComp","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","forEach","link","root","addLink","alert","updateLink","removeLink","addLocal","rawData","addCorpus","post","filename","table","tabularData","outputHandler","targetCompType","inputData"],"mappings":"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","sourcesContent":["import {getComponentType} from '@/utils/help'\nimport {formatTable} from '@/utils/loader'\nimport axios from 'axios'\nimport { apiClient } from '../../../api/apiClient';\n\nfunction createNewCorpusCard(id){\n  return {\n    id: `card-corpus-${id}`,\n    sourceLink: [], //\n    selectedTable: undefined, \n    marginLeft: null, \n    marginTop: null, \n    width: null, \n    height: null,\n    data: undefined,\n    loadingStatus: false, \n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [\n       \n    ],\n    component: () => import('@/components/loader/corpus'), \n  }, \n  mutations: {\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewCorpusCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          console.log(id + ' has been deleted')\n          break\n        }\n      }\n\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n    UPDATE_LOADING_STATUS(state, {id, status}){\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].loadingStatus = status;\n        }\n      } \n    },\n    ADD_DATA(state, data){\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId){\n          state.cards[i].selectedTable = data;\n        }\n      }\n    },\n\n    LOAD_DATA(state, {id, data}){\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].data = data;\n        }\n      }\n    },\n    UPDATE_POS(state, {id, marginLeft, marginTop}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].marginTop = marginTop \n          state.cards[i].marginLeft = marginLeft\n        }\n      }\n    }, \n    UPDATE_SIZE(state, {id, width, height}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].width = width \n          state.cards[i].height = height\n        }\n      }\n    }\n  }, \n  actions: {\n    updatePos({commit}, {id, marginTop, marginLeft}) {\n      commit('UPDATE_POS', {id, marginTop, marginLeft})\n    }, \n\n    updateSize({commit}, {id, width, height}) {\n      commit('UPDATE_SIZE', {id, width, height})\n    }, \n    addComp({commit}, ){\n      console.log('adding')\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      \n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      console.log('deleting' + id)\n      commit('DELETE_COMPONENT', id);\n    },\n    addLink({commit, dispatch}, linkData){\n      if(linkData.status == \"source\"){\n        commit('ADD_SOURCE_LINK', linkData)\n        dispatch('outputHandler', linkData)\n      }else{\n        alert('Corpus card has to be the starting point');\n        dispatch('link/deleteComp', linkData.id, {root: true});\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        console.log('no use, trying to remove target link for corpus, which does not exist')\n      }\n    }, \n   \n    async addLocal({commit, dispatch, state}, rawData){\n      for(let i in state.cards){\n        if(state.cards[i].id == rawData.cardId && state.cards[i].data !== rawData){\n          commit('ADD_DATA','local')\n          commit('UPDATE_LOADING_STATUS', {id: rawData.cardId, status: true})\n          commit('LOAD_DATA', {id: rawData.cardId, data: rawData.data})\n          commit('UPDATE_LOADING_STATUS', {id: rawData.cardId, status: false})\n          console.log('adding local data ############')\n          for(let i in state.cards){\n            if(state.cards[i].id == rawData.cardId){\n              for(let j in state.cards[i].sourceLink){\n                dispatch('outputHandler', state.cards[i].sourceLink[j])\n              }\n            }\n          }\n        }\n      }\n    },\n    async addCorpus({commit, dispatch, state}, data){\n      // console.log('addcorpus')\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId && state.cards[i].selectedTable !== data){\n          commit('ADD_DATA', data);\n          commit('UPDATE_LOADING_STATUS', {id: data.cardId, status: true})\n          let tabularData = (await apiClient.post('/getTableData', {filename: data.table})).data\n          commit('LOAD_DATA', {id: data.cardId,data:tabularData })\n          commit('UPDATE_LOADING_STATUS', {id: data.cardId, status: false})\n          console.log('adding corpusdata ############')\n         \n          for(let i in state.cards){\n            if(state.cards[i].id == data.cardId){\n              for(let j in state.cards[i].sourceLink){\n                dispatch('outputHandler', state.cards[i].sourceLink[j])\n              }\n            }\n          }\n        }\n      }\n\n     \n    }, \n\n\n    outputHandler({commit, dispatch, state}, linkData){\n      // Need to handler output since self is source\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData: state.cards[i].data}, {root: true})\n          // return;\n        }\n      }\n    }    \n  }\n}"]}]}