{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/analyzer/ontparser/KGViewer.vue","mtime":1664228721951},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661441977645}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL1VzZXJzL3lhbWVpdHUvRGVza3RvcC9JQ0lSQ0xFL1NtYXJ0Zm9vZHNoZWRfVkFfRmxvdy9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIE5lbzRqZDMgZnJvbSAnQC9qcy9OZW80akQzLmpzJzsKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgKiBhcyBkM0xhc3NvIGZyb20gJ2QzLWxhc3NvJzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ0cnLCAnaGVpZ2h0JywgJ3dpZHRoJywgJ3NlbGVjdGVkRmlsdGVycyddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYXNzb1N0YXR1czogZmFsc2UKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgd2luZG93WydkMyddID0gZDM7CiAgfSwKICB3YXRjaDogewogICAgRzogZnVuY3Rpb24gRyhuZXdWYWwsIG9sZFZhbCkgewogICAgICB0aGlzLmRyYXcoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxhc3NvVG9nZ2xlSGFuZGxlcjogZnVuY3Rpb24gbGFzc29Ub2dnbGVIYW5kbGVyKHZhbCkgewogICAgICBjb25zb2xlLmxvZygnbGFzc28nLCB2YWwpOwoKICAgICAgaWYgKHZhbCkgewogICAgICAgIHRoaXMuZGlzYWJsZVpvb20oKTsKICAgICAgICB0aGlzLmVuYWJsZUxhc3NvKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gY3VycmVudCBpcyB6b29tIAogICAgICAgIHRoaXMuZGlzYWJsZUxhc3NvKCk7CiAgICAgICAgdGhpcy5lbmFibGVab29tUGFuKCk7CiAgICAgIH0gLy8gY29uc29sZS5sb2codGhpcy5sYXNzb1N0YXR1cywgdGhpcy56b29tUGFuU3RhdHVzKQoKICAgIH0sCiAgICBlbmFibGVab29tUGFuOiBmdW5jdGlvbiBlbmFibGVab29tUGFuKCkgewogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCcjZGl2X2dyYXBoJykuc2VsZWN0KCJzdmciKTsKICAgICAgc3ZnLmNhbGwoZDMuem9vbSgpLm9uKCd6b29tJywgZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBzY2FsZSA9IGQzLmV2ZW50LnRyYW5zZm9ybS5rLAogICAgICAgICAgICB0cmFuc2xhdGUgPSBbZDMuZXZlbnQudHJhbnNmb3JtLngsIGQzLmV2ZW50LnRyYW5zZm9ybS55XTsgLy8gY29uc29sZS5sb2coMSkKCiAgICAgICAgdmFyIGcgPSBzdmcuc2VsZWN0KCJnIik7CiAgICAgICAgZy5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyB0cmFuc2xhdGVbMF0gKyAnLCAnICsgdHJhbnNsYXRlWzFdICsgJykgc2NhbGUoJyArIHNjYWxlICsgJyknKTsKICAgICAgfSkpLm9uKCdkYmxjbGljay56b29tJywgbnVsbCk7CiAgICB9LAogICAgZGlzYWJsZUxhc3NvOiBmdW5jdGlvbiBkaXNhYmxlTGFzc28oKSB7CiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoJyNkaXZfZ3JhcGgnKS5zZWxlY3QoInN2ZyIpOwogICAgICBzdmcub24oIi5kcmFnc3RhcnQiLCBudWxsKTsKICAgICAgc3ZnLm9uKCIuZHJhZyIsIG51bGwpOwogICAgICBzdmcub24oIi5kcmFnZW5kIiwgbnVsbCk7CiAgICB9LAogICAgZW5hYmxlTGFzc286IGZ1bmN0aW9uIGVuYWJsZUxhc3NvKCkgewogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCcjZGl2X2dyYXBoJykuc2VsZWN0KCJzdmciKTsKICAgICAgdmFyIGNpcmNsZXNfcXVlc3Rpb24gPSBzdmcuc2VsZWN0QWxsKCcub3V0bGluZScpOwogICAgICB2YXIgdGhhdCA9IHRoaXM7CgogICAgICB2YXIgbGFzc29fc3RhcnQgPSBmdW5jdGlvbiBsYXNzb19zdGFydCgpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZygxMTEpCiAgICAgICAgbGFzc28uaXRlbXMoKS5hdHRyKCdmaWxsJywgImdyZWVuIikuY2xhc3NlZCgnbm90X3Bvc3NpYmxlJywgdHJ1ZSkuY2xhc3NlZCgnc2VsZWN0ZWQnLCBmYWxzZSk7CiAgICAgIH07CgogICAgICB2YXIgbGFzc29fZHJhdyA9IGZ1bmN0aW9uIGxhc3NvX2RyYXcoKSB7CiAgICAgICAgLy8gU3R5bGUgdGhlIHBvc3NpYmxlIGRvdHMKICAgICAgICBsYXNzby5wb3NzaWJsZUl0ZW1zKCkuY2xhc3NlZCgnbm90X3Bvc3NpYmxlJywgZmFsc2UpLmNsYXNzZWQoJ3Bvc3NpYmxlJywgdHJ1ZSk7IC8vIFN0eWxlIHRoZSBub3QgcG9zc2libGUgZG90CgogICAgICAgIGxhc3NvLm5vdFBvc3NpYmxlSXRlbXMoKS5jbGFzc2VkKCdub3RfcG9zc2libGUnLCB0cnVlKS5jbGFzc2VkKCdwb3NzaWJsZScsIGZhbHNlKTsKICAgICAgfTsKCiAgICAgIHZhciBsYXNzb19lbmQgPSBmdW5jdGlvbiBsYXNzb19lbmQoKSB7CiAgICAgICAgbGFzc28uaXRlbXMoKS5jbGFzc2VkKCdub3RfcG9zc2libGUnLCBmYWxzZSkuY2xhc3NlZCgncG9zc2libGUnLCBmYWxzZSk7CiAgICAgICAgbGFzc28uc2VsZWN0ZWRJdGVtcygpLnN0eWxlKCdzdHJva2UnLCAncmVkJykuY2xhc3NlZCgnc2VsZWN0ZWQnLCB0cnVlKTsKICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ29udCddLnNwbGljZSgwLCB0aGF0LnNlbGVjdGVkRW50aXRpZXMubGVuZ3RoKTsKICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ3ZvY2FiJ10uc3BsaWNlKDAsIHRoYXQuc2VsZWN0ZWRFbnRpdGllcy5sZW5ndGgpOyAvLyB0aGF0LnNlbGVjdGVkUmVsYXRpb25zLnNwbGljZSgwLCB0aGF0LnNlbGVjdGVkUmVsYXRpb25zLmxlbmd0aCkgCgogICAgICAgIGxhc3NvLnNlbGVjdGVkSXRlbXMoKS5lYWNoKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICB2YXIgbGFiZWwgPSB0aGlzLm5vZGVOYW1lOwogICAgICAgICAgY29uc29sZS5sb2coZCk7CgogICAgICAgICAgaWYgKGQudHlwZSA9PSAibm9kZSIpIHsKICAgICAgICAgICAgaWYgKGQudm9jYWIpIHsKICAgICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ3ZvY2FiJ10ucHVzaChkLmlkKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGF0LnNlbGVjdGVkRW50aXRpZXNbJ29udCddLnB1c2goZC5pZCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGF0LnNlbGVjdGVkRW50aXRpZXMpOwogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgdmFyIGxhc3NvID0gZDNMYXNzby5sYXNzbygpLmNsb3NlUGF0aFNlbGVjdCh0cnVlKS5jbG9zZVBhdGhEaXN0YW5jZSgxMDApLml0ZW1zKGNpcmNsZXNfcXVlc3Rpb24pLnRhcmdldEFyZWEoc3ZnKS5vbignc3RhcnQnLCBsYXNzb19zdGFydCkub24oJ2RyYXcnLCBsYXNzb19kcmF3KS5vbignZW5kJywgbGFzc29fZW5kKTsKICAgICAgc3ZnLmNhbGwobGFzc28pOwogICAgfSwKICAgIGRpc2FibGVab29tOiBmdW5jdGlvbiBkaXNhYmxlWm9vbSgpIHsKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI2Rpdl9ncmFwaCcpLnNlbGVjdCgic3ZnIik7CiAgICAgIHN2Zy5vbignLnpvb20nLCBudWxsKTsKICAgIH0sCiAgICB0b2dnbGVab29tUGFuTGFzc286IGZ1bmN0aW9uIHRvZ2dsZVpvb21QYW5MYXNzbygpIHsKICAgICAgY29uc29sZS5sb2codGhpcy5sYXNzb1N0YXR1cywgdGhpcy56b29tUGFuU3RhdHVzKTsKICAgICAgdGhpcy56b29tUGFuU3RhdHVzID0gIXRoaXMuem9vbVBhblN0YXR1czsKICAgICAgdGhpcy5sYXNzb1N0YXR1cyA9ICF0aGlzLmxhc3NvU3RhdHVzOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmxhc3NvU3RhdHVzLCB0aGlzLnpvb21QYW5TdGF0dXMpOwogICAgfSwKICAgIGNoYW5nZUZpbHRlcnM6IGZ1bmN0aW9uIGNoYW5nZUZpbHRlcnModmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKHZhbCk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWRGaWx0ZXJzKTsKICAgIH0sCiAgICBkcmF3OiBmdW5jdGlvbiBkcmF3KCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHZhciBuZW80amQzID0gTmVvNGpkM1siZGVmYXVsdCJdKCcjZGl2X2dyYXBoJywgewogICAgICAgIG5lbzRqRGF0YTogdGhpcy5HLAogICAgICAgIG5vZGVSYWRpdXM6IDMwLAogICAgICAgIGluZm9QYW5lbDogZmFsc2UsCiAgICAgICAgb25Ob2RlQ2xpY2s6IGZ1bmN0aW9uIG9uTm9kZUNsaWNrKHJlbCkgewogICAgICAgICAgdGhhdC4kZW1pdCgnb24tbm9kZS1jbGljay1ldmVudCcsIHJlbCk7IC8vIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHRoYXQuJHJlZnMpKXsKICAgICAgICAgIC8vIHRoYXQuJG5leHRUaWNrKCgpID0+IHZhbHVlWzBdLmJsdXIoKSkKICAgICAgICAgIC8vIH0KICAgICAgICAgIC8vIHRoYXQuJG5leHRUaWNrKCgpID0+IHRoYXQuJHJlZnNbJ2ZpbHRlci0nK3JlbC5pZF1bMF0uZm9jdXMoKSkKICAgICAgICB9LAogICAgICAgIG9uUmVsYXRpb25zaGlwQ2xpY2s6IGZ1bmN0aW9uIG9uUmVsYXRpb25zaGlwQ2xpY2socmVsKSB7CiAgICAgICAgICB0aGF0LmNvbnRlbnQgPSAiIjsKICAgICAgICAgIHRoYXQucmVsYXRpb25zID0gW107CiAgICAgICAgICBjb25zb2xlLmxvZygnY2xpY2sgb24gcmVsYXRpb24nLCByZWwpOwogICAgICAgICAgdGhhdC5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsKICAgICAgICAgIHZhciByZWxhdGlvbnMgPSByZWxbJ3Byb3BlcnRpZXMnXTsKICAgICAgICAgIHZhciBsZW5ndGggPSBPYmplY3Qua2V5cyhyZWxhdGlvbnMpLmxlbmd0aDsKICAgICAgICAgIHRoYXQuY29udGVudCArPSAiVGhlcmUgaXMgKGFyZSkgIiArIGxlbmd0aC50b1N0cmluZygpICsgIiB0eXBlKHMpIG9mIGxpbmtzIGZyb20gIiArIHJlbFsnc3RhcnROb2RlJ10gKyAnIHRvICcgKyByZWxbJ2VuZE5vZGUnXSArICdcbic7CiAgICAgICAgICB0aGF0LmNvbnRlbnQgKz0gIlRoZSB0eXBlcyBjb250YWluOiAiICsgJ1xuJzsKCiAgICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9PYmplY3QkZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKHJlbGF0aW9ucyk7IF9pIDwgX09iamVjdCRlbnRyaWVzLmxlbmd0aDsgX2krKykgewogICAgICAgICAgICB2YXIgX09iamVjdCRlbnRyaWVzJF9pID0gX3NsaWNlZFRvQXJyYXkoX09iamVjdCRlbnRyaWVzW19pXSwgMiksCiAgICAgICAgICAgICAgICBrZXkgPSBfT2JqZWN0JGVudHJpZXMkX2lbMF0sCiAgICAgICAgICAgICAgICB2YWx1ZSA9IF9PYmplY3QkZW50cmllcyRfaVsxXTsKCiAgICAgICAgICAgIHRoYXQucmVsYXRpb25zLnB1c2goa2V5KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLm5lbzRqZDMgPSBuZW80amQzOwoKICAgICAgaWYgKHRoYXQubGFzc29TdGF0dXMpIHsKICAgICAgICB0aGF0LmRpc2FibGVab29tKCk7CiAgICAgICAgdGhhdC5lbmFibGVMYXNzbygpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoYXQuZGlzYWJsZUxhc3NvKCk7CiAgICAgICAgdGhhdC5lbmFibGVab29tUGFuKCk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["KGViewer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-row>\n            <v-switch\n                v-model=\"lassoStatus\"\n                inset\n                @change=\"lassoToggleHandler\"\n                :label=\"`Lasso: ${lassoStatus.toString()}`\"\n                ></v-switch>\n        </v-row>\n        <v-row>\n            <div id=\"div_graph\" class=\"fullHeight\" :style=\"{'height': height, 'width': width, 'float': 'right'}\"></div>\n        </v-row>\n    </div>\n</template>\n\n<script>\nimport * as Neo4jd3 from '@/js/Neo4jD3.js'\nimport * as d3 from 'd3'\nimport * as d3Lasso from 'd3-lasso'\n\nexport default {\n    props: ['G','height', 'width','selectedFilters'],\n    data(){\n        return{\n            lassoStatus: false\n        }\n    },\n    created(){\n        window['d3'] = d3\n    },\n    watch:{\n        G: function(newVal, oldVal){\n            this.draw()\n        } \n    },\n    methods: {\n        lassoToggleHandler(val){\n            console.log('lasso', val)\n            if(val){\n                this.disableZoom()\n                this.enableLasso()\n            }else{\n                // current is zoom \n                this.disableLasso()\n                this.enableZoomPan()\n            }\n        // console.log(this.lassoStatus, this.zoomPanStatus)\n        \n        },\n        enableZoomPan(){\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.call(d3.zoom().on('zoom', function () {\n            var scale = d3.event.transform.k,\n            translate = [d3.event.transform.x, d3.event.transform.y]\n            // console.log(1)\n            const g = svg.select(\"g\")\n            g.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')')\n        }))\n        .on('dblclick.zoom', null)\n        },\n        disableLasso() {\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.on(\".dragstart\", null);\n        svg.on(\".drag\", null);\n        svg.on(\".dragend\", null);\n        }, \n        enableLasso(){\n        const svg = d3.select('#div_graph').select(\"svg\")\n        var circles_question = svg.selectAll('.outline')\n        let that = this\n        var lasso_start = function () {\n            // console.log(111)\n            lasso.items()\n            .attr('fill', \"green\")\n            .classed('not_possible', true)\n            .classed('selected', false)\n        }\n        var lasso_draw = function () {\n            // Style the possible dots\n            lasso.possibleItems()\n            .classed('not_possible', false)\n            .classed('possible', true)\n\n            // Style the not possible dot\n            lasso.notPossibleItems()\n            .classed('not_possible', true)\n            .classed('possible', false)\n        }\n        var lasso_end = function () {\n            lasso.items()\n            .classed('not_possible', false)\n            .classed('possible', false)\n\n            lasso.selectedItems()\n            .style('stroke','red')\n            .classed('selected', true)\n            that.selectedEntities['ont'].splice(0, that.selectedEntities.length)\n            that.selectedEntities['vocab'].splice(0, that.selectedEntities.length)\n            // that.selectedRelations.splice(0, that.selectedRelations.length) \n            lasso.selectedItems().each(function(d){\n            const label = this.nodeName \n            console.log(d)\n            if(d.type==\"node\"){\n                if(d.vocab){\n                that.selectedEntities['vocab'].push(d.id)\n                }else{\n                that.selectedEntities['ont'].push(d.id)\n                }\n            }\n            console.log(that.selectedEntities)\n            })\n        }\n        var lasso = d3Lasso.lasso()\n            .closePathSelect(true)\n            .closePathDistance(100)\n            .items(circles_question)\n            .targetArea(svg)\n            .on('start', lasso_start)\n            .on('draw', lasso_draw)\n            .on('end', lasso_end)\n\n        svg.call(lasso)\n        }, \n        disableZoom() {\n        const svg = d3.select('#div_graph').select(\"svg\") \n        svg.on('.zoom', null)\n        },\n        toggleZoomPanLasso(){\n        console.log(this.lassoStatus, this.zoomPanStatus)\n        this.zoomPanStatus = !this.zoomPanStatus \n        this.lassoStatus = !this.lassoStatus\n        console.log(this.lassoStatus, this.zoomPanStatus)\n        }, \n        changeFilters(val){\n        console.log(val)\n        console.log(this.selectedFilters)\n        },\n        draw(){\n        var that = this\n        var neo4jd3 = Neo4jd3.default('#div_graph', {\n            neo4jData: this.G,\n            nodeRadius: 30,\n            infoPanel: false,\n            onNodeClick: function(rel){\n                that.$emit('on-node-click-event', rel)\n                // for (const [key, value] of Object.entries(that.$refs)){\n                // that.$nextTick(() => value[0].blur())\n                // }\n                // that.$nextTick(() => that.$refs['filter-'+rel.id][0].focus())\n                \n            },\n            onRelationshipClick: function(rel){\n                that.content = \"\"\n                that.relations = []\n                console.log('click on relation', rel)\n                that.dialogVisible = true\n                var relations = rel['properties']\n                var length = Object.keys(relations).length\n                that.content += \"There is (are) \" + length.toString() + \" type(s) of links from \" + rel['startNode'] + ' to ' + rel['endNode']+'\\n' \n                that.content += \"The types contain: \" + '\\n'\n                for (const [key, value] of Object.entries(relations)) {\n                that.relations.push(key)\n                }\n            }\n        })\n        this.neo4jd3 = neo4jd3\n        if (that.lassoStatus) {\n            that.disableZoom()\n            that.enableLasso()\n        } else {\n            that.disableLasso() \n            that.enableZoomPan()\n        }\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/components/analyzer/ontparser"}]}