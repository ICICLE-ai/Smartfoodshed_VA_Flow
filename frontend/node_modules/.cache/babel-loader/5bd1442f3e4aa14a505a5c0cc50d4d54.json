{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/loader/corpus/Loader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/components/loader/corpus/Loader.vue","mtime":1666790787279},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1660324544800},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661232574882},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1661232574916}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvcWl1cnVpL0Rlc2t0b3AvSUNJQ0xFL25ld19ndWlfMjAyMi9TbWFydGZvb2RzaGVkX1ZBX0Zsb3cvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUG91Y2hEQiBmcm9tICdwb3VjaGRiJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzaW5nbGVTZWxlY3Q6IGZhbHNlLAogICAgICBzZWxlY3RlZDogW10sCiAgICAgIGhlYWRlcnM6IFt7CiAgICAgICAgdGV4dDogJ1RhYmxlJywKICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICd0YWJsZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTaXplJywKICAgICAgICB2YWx1ZTogJ3NpemUnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnTGFzdCB1c2UnLAogICAgICAgIHZhbHVlOiAnbGFzdF90aW1lJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1VwbG9hZGVkIGRhdGUnLAogICAgICAgIHZhbHVlOiAndXBsb2FkX2RhdGUnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnQWN0aW9ucycsCiAgICAgICAgdmFsdWU6ICdhY3Rpb25zJywKICAgICAgICBzb3J0YWJsZTogZmFsc2UKICAgICAgfV0sCiAgICAgIHRhYmxlRGF0YTogW3sKICAgICAgICB0YWJsZTogJ2Nhcl90ZW1wbGF0ZS5jc3YnLAogICAgICAgIHNpemU6ICczNTVLQicsCiAgICAgICAgaWQ6ICcyJywKICAgICAgICBsYXN0X3RpbWU6ICJUb2RheSIsCiAgICAgICAgdXBsb2FkX2RhdGU6ICcyMDIyLTEwLTA2JwogICAgICB9LCB7CiAgICAgICAgdGFibGU6ICdpcmlzLmNzdicsCiAgICAgICAgc2l6ZTogJzRLQicsCiAgICAgICAgaWQ6ICcyJywKICAgICAgICBsYXN0X3RpbWU6ICJUb2RheSIsCiAgICAgICAgdXBsb2FkX2RhdGU6ICcyMDIyLTEwLTA2JwogICAgICB9XSwKICAgICAgZGI6IG5ldyBQb3VjaERCKCJ0ZXN0X2RiIiksCiAgICAgIHJlc3VsdHM6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVhZGNzdmZpbGU6IGZ1bmN0aW9uIHJlYWRjc3ZmaWxlKHJlYWRlciwgZmlsZSkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHZhciByZXMgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlYWRlcikKICAgICAgICAgIHZhciBkID0gcmVhZGVyLnJlc3VsdDsKICAgICAgICAgIHZhciBoZWFkZXJzID0gZC5zbGljZSgwLCBkLmluZGV4T2YoIlxuIikpLnJlcGxhY2UoJ1xyJywgJycpLnNwbGl0KCcsJyk7CiAgICAgICAgICB2YXIgcSA9IGQuc2xpY2UoZC5pbmRleE9mKCJcbiIpICsgMSkuc3BsaXQoIlxuIik7CiAgICAgICAgICB2YXIgcm93cyA9IFtdOwoKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgT2JqZWN0LmtleXMocSkubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgLy9yZW1vdmluZyBhbGwgXHIgZnJvbSByb3dzCiAgICAgICAgICAgIHJvd3MucHVzaChxW2ldLnJlcGxhY2UoJ1xyJywgJycpKTsKICAgICAgICAgIH0gLy9jb25zb2xlLmxvZyhyb3dzKQoKCiAgICAgICAgICB2YXIgYXJyID0gcm93cy5tYXAoZnVuY3Rpb24gKHJvdykgewogICAgICAgICAgICB2YXIgdmFsdWVzID0gcm93LnNwbGl0KCcsJyk7CiAgICAgICAgICAgIHZhciBlbCA9IGhlYWRlcnMucmVkdWNlKGZ1bmN0aW9uIChvYmplY3QsIGhlYWRlciwgaW5kZXgpIHsKICAgICAgICAgICAgICBvYmplY3RbaGVhZGVyXSA9IHZhbHVlc1tpbmRleF07CiAgICAgICAgICAgICAgcmV0dXJuIG9iamVjdDsKICAgICAgICAgICAgfSwge30pOwogICAgICAgICAgICByZXR1cm4gZWw7CiAgICAgICAgICB9KTsKICAgICAgICAgIGNvbnNvbGUubG9nKGFycik7IC8vIGNvbnN0IHRleHQgPSBKU09OLnN0cmluZ2lmeShhcnIpCiAgICAgICAgICAvLyByZXNvbHZlKHRleHQpCgogICAgICAgICAgdGhhdC4kZW1pdCgnbG9hZGVyQWN0aW9uJywgewogICAgICAgICAgICBzdGF0dXM6ICdsb2NhbCcsCiAgICAgICAgICAgIGRhdGE6IGFycgogICAgICAgICAgfSk7CiAgICAgICAgICByZWFkZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZCcsIGdldCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTsgLy9jb25zb2xlLmxvZyhyZXMpCiAgICAgIC8vIHJldHVybiByZXMKICAgIH0sCiAgICB1cGxvYWRmaWxlczogZnVuY3Rpb24gdXBsb2FkZmlsZXModykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVhZGVyOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7IC8vIHRoaXMucmVzdWx0cy5zcGxpY2UoMCkKCiAgICAgICAgICAgICAgICBpZiAoISh3WyJ0eXBlIl0gPT0gInRleHQvY3N2IikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnJlYWRjc3ZmaWxlKHJlYWRlciwgdyk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjYW5jZWxTZWxlY3Q6IGZ1bmN0aW9uIGNhbmNlbFNlbGVjdCgpIHsKICAgICAgdGhpcy4kZW1pdCgnbG9hZGVyQWN0aW9uJywgewogICAgICAgIHN0YXR1czogJ2ZhaWwnCiAgICAgIH0pOwogICAgICB0aGlzLnNlbGVjdGVkID0gW107CiAgICB9LAogICAgY29uZmlybVNlbGVjdDogZnVuY3Rpb24gY29uZmlybVNlbGVjdCgpIHsKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWQubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuJGVtaXQoJ2xvYWRlckFjdGlvbicsIHsKICAgICAgICAgIHN0YXR1czogJ2V4aXN0aW5nJywKICAgICAgICAgIHNlbGVjdGVkOiB0aGlzLnNlbGVjdGVkWzBdCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IFtdOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuY2FuY2VsU2VsZWN0KCk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Loader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n    <v-card-title class=\"headline\">\n      Corpus\n    </v-card-title>\n    <v-divider></v-divider>\n\n    <v-card-actions class=\"mt-5\">\n      <v-row>\n        <v-col cols=\"12\">      \n          <v-file-input\n            @change=\"uploadfiles\"\n            label=\"Upload your corpus data\"\n            outlined\n            dense\n            full-width\n          ></v-file-input>\n        </v-col>\n      </v-row>\n    </v-card-actions>\n    \n    <v-card-title class=\"headline\">\n      Existing Corpus\n    </v-card-title>\n    <template>\n      <v-data-table\n      v-model=\"selected\"\n      :headers=\"headers\"\n      :items=\"tableData\"\n      :single-select=\"true\"\n      item-key=\"table\"\n      show-select\n      class=\"elevation-1\"\n      >\n        <template v-slot:item.actions=\"{ item }\">\n          <v-icon\n            small\n            class=\"mr-2\"\n            \n          >\n            mdi-pencil\n          </v-icon>\n          <v-icon\n            small\n            \n          >\n            mdi-delete\n          </v-icon>\n        </template>\n      </v-data-table>\n    </template>\n    <v-card-actions class=\"mt-5\">\n      <v-spacer></v-spacer>\n      <v-btn\n        text\n        color=\"error\"\n        @click=\"cancelSelect\"\n      >\n        Cancel\n      </v-btn>\n       <v-btn\n        text\n        color=\"primary\"\n        @click=\"confirmSelect\"\n       >\n        Confirm\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport PouchDB from 'pouchdb'\nexport default {\n  data(){\n    return {\n      singleSelect: false,\n      selected: [],\n      headers: [\n        {\n          text: 'Table',\n          align: 'start',\n          sortable: false,\n          value: 'table',\n        },\n        { text: 'Size', value: 'size' },\n        { text: 'Last use', value: 'last_time' },\n        { text: 'Uploaded date', value: 'upload_date' },\n        { text: 'Actions', value: 'actions', sortable: false },\n      ],\n      tableData: [\n        \n        {\n          table:'car_template.csv',\n          size:'355KB',\n          id: '2',\n          last_time: \"Today\",\n          upload_date: '2022-10-06'\n        },\n        {\n          table:'iris.csv',\n          size:'4KB',\n          id: '2',\n          last_time: \"Today\",\n          upload_date: '2022-10-06'\n        }\n      ],\n      db: new PouchDB(\"test_db\"),\n      results:[]\n    }\n  },\n  methods: {\n    readcsvfile(reader,file){\n      var that = this\n      const res = new Promise((resolve,reject)=>{\n        reader.addEventListener('load',function get(){\n          //console.log(reader)\n          const d = reader.result\n          const headers = d.slice(0,d.indexOf(\"\\n\")).replace('\\r', '').split(',')\n          const q = d.slice(d.indexOf(\"\\n\") + 1).split(\"\\n\")\n          const rows = [];\n          for(let i=0;i<Object.keys(q).length;i++){ //removing all \\r from rows\n            rows.push(q[i].replace('\\r',''))\n          }\n          //console.log(rows)\n          const arr = rows.map(function(row) {\n          const values = row.split(',');\n          const el  = headers.reduce(function(object,header,index){\n            object[header] = values[index];\n            return object\n          },{});\n          return el\n        });\n        console.log(arr)\n        // const text = JSON.stringify(arr)\n        // resolve(text)\n        that.$emit('loaderAction', {status: 'local', data: arr})\n        reader.removeEventListener('load',get)\n        })\n      })\n      reader.readAsText(file)\n      //console.log(res)\n      \n      // return res\n  },\n    async uploadfiles(w){\n      const reader = new FileReader()\n      // this.results.splice(0)\n      if(w[\"type\"]==\"text/csv\"){\n        await this.readcsvfile(reader, w)\n      }\n      // })\n      // console.log(this.results)\n    },\n    cancelSelect(){\n      this.$emit('loaderAction', {status: 'fail'})\n      this.selected = []\n    },\n    confirmSelect(){\n      if(this.selected.length > 0){\n        this.$emit('loaderAction', {status: 'existing', selected: this.selected[0]})\n        this.selected = []\n      }else{\n        this.cancelSelect()\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/components/loader/corpus"}]}