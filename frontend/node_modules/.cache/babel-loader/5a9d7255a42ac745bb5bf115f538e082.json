{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/OntologyComp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/components/OntologyComp.vue","mtime":1660516517421},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1660327264739},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1660327264786}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["OntologyComp.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n  <v-hover\n    v-slot=\"{ hover }\"\n  > \n    <v-card\n      :elevation=\"hover? 12 : 5\"\n      class=\"card-ontology\"\n      @mousedown=\"dragProxy\"\n      outlined\n      :id=\"itemProps.id\"\n      ref=\"cardComp\"\n      @contextmenu = \"rightClickMenuShow\"\n      @dblclick.stop=\"doubleClickToLoad\"\n      :style=\"{top: marginTop + 'px', left: marginLeft +'px', width: `${width}px`, height: `${height}px`, position: 'absolute'}\"\n    > \n      <v-card\n        loading\n        v-if=\"loadingStatus\"\n        :width=\"width\"\n        :height=\"height\"\n      >\n      </v-card>\n      \n      <v-card-text \n        v-if=\"!dataStatus\" \n        class=\"card-name\"\n      >\n        No Ontology Yet\n      </v-card-text>\n      <div \n        class=\"canvas-container\"\n        v-if=\"dataStatus\"\n        :id=\"`ontologyview-canvas-${itemProps.id}`\" \n        :style=\"{width: width + 'px', height: height + 'px'}\" \n      >\n      </div>\n      <v-card-actions>\n        <InoutputBtns\n          :resizingStatus=\"resizingStatus\"\n          :width=\"width\"\n          :height=\"height\"\n          :marginLeft=\"marginLeft\"\n          :marginTop=\"marginTop\"  \n          :componentId=\"itemProps.id\"\n          :hover=\"hover\"\n        />\n      </v-card-actions>\n\n      <div \n        class=\"resizer resizer-r\"\n        @mousedown=\"mouseDownHandler\"\n      ></div>\n      <div \n        class=\"resizer resizer-b\"\n        @mousedown=\"mouseDownHandler\"\n      ></div>\n\n    </v-card>\n  </v-hover>\n\n  <v-dialog\n    v-model=\"dialog\"\n    max-width=\"800\"\n  >\n    <OntologyLoader\n      @loaderAction=\"loaderAction\"\n    />\n  </v-dialog>\n\n  <v-menu\n    v-model=\"showRightClickMenu\"\n    :position-x=\"rightMenuX\"\n    :position-y=\"rightMenuY\"\n    absolute\n    offset-y\n  >\n    <RightClickMenu \n      :vue=\"this\" \n      :container=\"container\" \n      :itemProps=\"itemProps\"\n      :store=\"itemProps.id.split('-')[1]\"\n      :commands=\"contextCommands\"\n      @contextButtonClicked=\"contextButtonClicked\"\n    /> \n  </v-menu>\n\n  </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\nimport RightClickMenu from '@/components/RightClickMenu'\nimport OntologyLoader from '@/components/OntologyLoader'\nimport * as Neo4jd3 from '@/js/Neo4jD3'\nimport InoutputBtns from '@/components/InoutputBtns'\nimport * as d3 from 'd3'\nimport * as d3tip from '@/utils/d3-tip'\n\nexport default {\n  props: [\n    'itemProps'\n  ],\n  data(){\n    return {\n      initialX: undefined,\n      initialY: undefined,\n      dataStatus: undefined,\n      resizeX: undefined,\n      resizeY: undefined,\n      // draggable: true,\n      width: 500,\n      height: 500, \n      resizeWidth: 0, //\n      resizeHeight: 0,\n      marginTop: 0,\n      marginLeft: 0,\n      topMargin: window.innerHeight / 2,\n      leftMargin: window.innerWidth / 2,\n      resizingStatus: false,\n\n      showRightClickMenu: false,\n      rightMenuX: 0,\n      rightMenuY: 0,\n\n      items: [\n        { title: 'Remove node' },\n      ],\n\n      container: '.globalview-components-list',\n\n      rightBtn: true,\n\n      topBtn: false,\n\n      leftBtn: false,\n\n      loadingStatus: false,\n\n      onOperation: false, \n\n      dialog: false, \n      ontologyData: null, \n      contextCommands: [\n        {icon: \"mdi-cog-outline\", command: \"Select Ontology\"}, \n      ],\n      // colors: [\"#543005\", \"#8c510a\", \"#bf812d\", \"#dfc27d\", \"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"], \n      colors: ['#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a','#ffff99','#b15928']\n    }\n  },\n  methods:{\n    cardDoubleClick(){\n      this.dialog = true;\n    },\n\n    contextButtonClicked(button){\n      if(button == \"Select Ontology\"){\n        this.dialog = true; \n      }\n    },\n    dragProxy(e) {\n      this.dragStartHandler(e)\n    },\n    moveAt(posX, posY) { \n      const comp = document.querySelector(`#${this.itemProps.id}`)\n      this.marginTop = posY \n      this.marginLeft = posX\n    }, \n    dragStartHandler(e){\n      if (e.buttons == 1 && this.draggable) {\n        const that = this\n        const comp = document.querySelector(`#${this.itemProps.id}`)\n        const initialLeft = parseInt(comp.style.left.split('px')[0]) - e.clientX\n        const initialTop = parseInt(comp.style.top.split('px')[0]) - e.clientY\n        function onMouseMove(event) { \n          that.moveAt(event.pageX + initialLeft, event.pageY + initialTop) \n        }\n        document.addEventListener(\"mousemove\", onMouseMove)\n        comp.onmouseup = function () {\n          document.removeEventListener('mousemove', onMouseMove)\n          comp.onmouseup = null\n        }\n      }\n    }, \n    dragStart(e){\n      // if(!this.initialX){\n      //   this.initialX = e.clientX; \n      //   this.initialY = e.clientY;\n      // }\n      // e.dataTransfer.setData('item-id', e.target.id);\n      // e.dataTransfer.setData('initialX', this.initialX);\n      // e.dataTransfer.setData('initialY', this.initialY);\n      const el = document.querySelector(`#${e.target.id}`); \n      const initialLeft = parseInt(el.style.left.split('px')[0]) - e.clientX;\n      const initialTop = parseInt(el.style.top.split('px')[0]) - e.clientY;\n      e.dataTransfer.setData('item-id', e.target.id);\n      e.dataTransfer.setData('initialLeft', initialLeft);\n      e.dataTransfer.setData('initialTop', initialTop);\n      this.$store.dispatch('changeCurrentDraggingVM', this);\n    }, \n\n    addLink(){\n      this.$store.dispatch('changeLinkDrawingStatus', true);\n    },\n\n    finishLink(){\n      this.$store.dispatch('changeLinkDrawingStatus', false);\n    },\n\n    // Handler for div resizing\n    mouseDownHandler(e){\n      \n      // this.$store.dispatch('changeResizerStatus', true);\n      this.resizeX = e.clientX; \n      this.resizeY = e.clientY;\n      document.addEventListener('mousemove', this.mouseMoveHandler); \n      document.addEventListener('mouseup', this.mouseUpHandler); \n      this.resizingStatus = true\n      \n    }, \n\n    // Handler for moving mouse to resize \n    mouseMoveHandler(e){\n      const dx = e.clientX - this.resizeX; \n      const dy = e.clientY - this.resizeY; \n      this.width = this.resizeWidth + dx;\n      this.height = this.resizeHeight + dy;\n      \n    }, \n\n    // Handler for mouse up and remove the EventListener\n    mouseUpHandler(e){\n      this.resizeWidth = this.width; \n      this.resizeHeight = this.height; \n      document.removeEventListener('mousemove', this.mouseMoveHandler); \n      document.removeEventListener('mouseup', this.mouseUpHandler)\n      this.resizingStatus = false\n      // this.$store.dispatch('changeResizerStatus', false)\n    },\n\n    rightClickMenuShow(e){\n      e.preventDefault();\n      this.showRightClickMenu = true;\n      this.rightMenuX = e.clientX;\n      this.rightMenuY = e.clientY;\n    }, \n\n\n    loaderAction(e){\n      if(e.status == \"success\"){\n        delete e.status\n        e.selected.cardId = this.itemProps.id\n        this.$store.dispatch('ontology/addOntology', e.selected)\n      }\n      this.dialog = false;\n    }, \n\n    drawNeo4jd3(data){\n\n      console.log(\"start draw ontology!!!\")\n      console.log(data)\n      console.log(`ontologyview-canvas-${this.itemProps.id}`)\n      var ele = document.querySelector(`#ontologyview-canvas-${this.itemProps.id}`);\n      console.log(ele);\n      let neo4jd3 = Neo4jd3.default(`#ontologyview-canvas-${this.itemProps.id}`, {\n        neo4jData: data,\n        nodeRadius: 30,\n        infoPanel: false,\n      \n      });\n\n    },\n    \n    doubleClickToLoad(){\n      if(!this.dataStatus){\n        this.cardDoubleClick()\n      }\n    },\n\n    draw(){\n      if(!this.itemProps.vis_tsne){\n        alert('No vis data but still triggered! check GLobalViewComp.vue')\n      }\n\n      \n      let tip = d3tip()\n            .attr('class', 'd3-tip')\n            .offset([-10, 0])\n            .html(function(d) {\n              return \"<strong>Title: </strong><span class='details'>\" + d.title + \"<br></span>\";\n            })\n\n      let visData = this.itemProps.vis_tsne.tsne.data; \n      let visArea = this.itemProps.vis_tsne.tsne.area;\n      \n      console.log('print vis data');\n      console.log(visData);\n\n      console.log('print vis area');\n      console.log(visArea);\n      const canvasContainer = d3.select(`.globalview-canvas-${this.itemProps.id}`);\n      const canvasGroup = canvasContainer.selectAll('g').data([0]);\n      const canvasEnter = canvasGroup.enter().append('g')\n\n      const canvas = canvasGroup.merge(canvasEnter);\n\n      const classColors = this.colors;\n      const areaLine = d3.line()\n        .x(d => d[0])\n        .y(d => d[1])\n        .curve(d3.curveCatmullRomClosed);\n      console.log(classColors);\n\n\n      const width = this.width\n      const height = this.height\n      const xScale = d3.scaleLinear()\n                      .domain(d3.extent(visData, d=>d.embedding[0]))\n                      .range([0, width])\n      \n      const yScale = d3.scaleLinear()\n                      .domain(d3.extent(visData, d=>d.embedding[1]))\n                      .range([0, height])\n\n\n\n\n      const h = canvas.append(\"path\").attr(\"class\", \"polyhull-01\").style(\"stroke\", \"gray\").style(\"stroke-width\",\"3px\").style(\"fill-opacity\", \"0.3\").style(\"fill\", \"lightblue\");\n      const circleGroup = canvas.selectAll('circle').data(visData); //\n      const circleGroupEnter = circleGroup.enter().append('circle')\n     \n      circleGroupEnter.merge(circleGroup)\n        .attr('cx', d=>xScale(d.embedding[0]))\n        .attr('cy', d=>yScale(d.embedding[1]))\n        .attr('r', d=>{\n          return 1\n        })\n        .attr('fill', d=>{\n          // if(d['q_1']){\n          //   return classColors[5]\n          // }\n          // if(d['q_17']){\n          //   return classColors[6]\n          // }\n          return 'steelblue'\n        })\n        .on('mouseover', function(d){\n          tip.show(d);\n          d3.select(this)\n            .attr('r', 1.5)\n            .style('stroke', 'black')\n            \n        })\n        .on('mouseout', function(d){\n          tip.hide(d);\n          d3.select(this)\n            .attr('r', 1)\n            .style('stroke', null)\n            \n        })\n\n      \n      \n\n      function zoomed() {\n        console.log(111);\n        const {transform} = d3.event;\n        canvas.attr(\"transform\", transform);\n      }\n\n\n      canvasContainer.on('dblclick', ()=>{\n        console.log(111)\n        canvasContainer.call(d3.zoom()\n          .extent([[0, 0], [width, height]])\n          .scaleExtent([1, 8])\n          .on(\"zoom\", zoomed));\n\n        canvasContainer.style('border', '1px solid red')\n      })\n\n      canvasContainer.on('mouseleave', ()=>{\n        console.log('mouseout');\n        console.log(canvasContainer)\n        canvasContainer.on('.zoom', null);\n        canvasContainer.style('border', null)\n      })\n      // canvasContainer.call(d3.zoom()\n      //   .extent([[0, 0], [width, height]])\n      //   .scaleExtent([1, 8])\n      //   .on(\"zoom\", zoomed));\n\n      canvasContainer.call(tip);\n\n      const pointsTemp = visData.slice(1000, 1010); \n      // console.log(\"Check Here!\");\n      // console.log(pointsTemp);\n      const hullCurve = hull(pointsTemp.map(obj => [xScale(obj.embedding[0]), yScale(obj.embedding[1])])); \n      h.attr(\"d\", `M${hullCurve.join(\"L\")}Z`)\n\n      function hull(points) {\n        // No sense in rendering a hull for fewer than two points\n        if (points.length < 2) return;\n\n        // polygonHull seems to require a minimum of three points, but works\n        // just fine if two of the points are identical, so we can patch over\n        // the problem of a two point cluster by duplicating the first point.\n        if (points.length < 3) return d3.polygonHull([points[0], ...points]);\n\n        return d3.polygonHull(points);\n      }\n\n    },\n\n\n    \n\n  },\n\n  created(){\n    // Initialize initial position\n    this.marginTop = this.topMargin - this.height/2; \n    this.marginLeft = this.leftMargin - this.width/2;\n\n    // Initialize resizeWidth and resizeHeight\n    this.resizeWidth = this.width;\n    this.resizeHeight = this.height; \n  },\n\n  computed:{\n    ...mapState(['drawLink','resizer']),\n    draggable(){\n      return !(this.drawLink || this.resizingStatus);\n    }\n  },\n\n  components: {\n    RightClickMenu,\n    InoutputBtns, \n    OntologyLoader,\n  },\n\n  watch: {\n    'itemProps.data': function(newVal, oldVal){\n      if(newVal){\n        this.loadingStatus = true\n        this.dataStatus = true // means loading \n        this.loadingStatus = false;\n        this.$nextTick(function(){\n          this.drawNeo4jd3(this.itemProps.data.data)\n        })\n      }else{\n        this.loadingStatus = false\n        this.dataStatus = false\n      }\n    }, \n\n    // 'itemProps.vis_tsne': function(newVal, oldVal){\n    //   console.log('visData newVal, oldVal'); //\n    //   console.log(newVal); //\n    //   console.log(oldVal);\n    //   if(newVal && newVal.tsne){\n    //     this.loadingStatus = false\n    //     this.dataStatus = true // no longer loading\n    //     console.log('here')\n    //     console.log(this.dataStatus);\n    //     this.draw();\n    //   }else{\n    //     this.loadingStatus = false\n    //     this.dataStatus = false;\n    //   }\n    // },\n\n    width: function (){\n      if(this.itemProps.data){\n        d3.select('.neo4jd3-graph').remove()\n        this.drawNeo4jd3(this.itemProps.data.data)\n      }\n      \n    }, \n\n    height: function(){\n      if(this.itemProps.data){\n        d3.select('.neo4jd3-graph').remove()\n        this.drawNeo4jd3(this.itemProps.data.data)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped> \n  .card-name{\n    text-align: center;\n    display: flex; \n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n    height: 100%;\n  }\n\n  /* .card-actions{\n    position: absolute;\n    transform: translate(300px, -150px);\n    padding: 0;\n  } */\n\n  .resizer{\n    position: absolute;\n  }\n\n  .resizer-r {\n    cursor: col-resize;\n    height: 100%;\n    right: 0;\n    top: 0;\n    width: 5px;\n  }\n\n  /* Placed at the bottom side */\n  .resizer-b {\n    bottom: 0;\n    cursor: row-resize;\n    height: 5px;\n    left: 0;\n    width: 100%;\n  }\n\n  .card-ontology:hover{\n    cursor: pointer;\n  }\n</style>"],"sourceRoot":"src/components"}]}