{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/corpus.js","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/corpus.js","mtime":1644244557063},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/babel-loader/lib/index.js","mtime":1644041617580}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/corpus.js"],"names":["getComponentType","axios","createNewCorpusCard","id","sourceLink","selectedTable","undefined","marginLeft","marginTop","width","height","data","loadingStatus","namespaced","state","nextAvailableIndex","cards","component","mutations","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","i","splice","console","log","ADD_SOURCE_LINK","linkData","source","UPDATE_SOURCE","j","UPDATE_TARGET","target","targetLink","REMOVE_SOURCELINK","UPDATE_LOADING_STATUS","status","ADD_DATA","cardId","LOAD_DATA","actions","addComp","commit","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","forEach","link","root","addLink","alert","updateLink","removeLink","addCorpus","get","tabularData","tableNames","Object","keys","outputHandler","targetCompType","inputData"],"mappings":"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","sourcesContent":["import {getComponentType} from '@/utils/help'\nimport axios from 'axios'\n\nfunction createNewCorpusCard(id){\n  return {\n    id: `card-corpus-${id}`,\n    sourceLink: [], //\n    selectedTable: undefined, \n    marginLeft: null, \n    marginTop: null, \n    width: null, \n    height: null,\n    data: undefined,\n    loadingStatus: false, \n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [\n       \n    ],\n    component: () => import('@/components/CorpusComp'), \n  }, \n  mutations: {\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewCorpusCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          console.log(id + ' has been deleted')\n          break\n        }\n      }\n\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              // state.cards[i].targetLink[j].targetPos = linkData.targetPos;\n              // state.cards[i].targetLink[j].sourcePos = linkData.sourcePos;\n              // state.cards[i].targetLink[j].d = linkData.d;\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n    UPDATE_LOADING_STATUS(state, {id, status}){\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].loadingStatus = status;\n        }\n      } \n    },\n    ADD_DATA(state, data){\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId){\n          state.cards[i].selectedTable = data;\n        }\n      }\n    },\n\n    LOAD_DATA(state, {id, data}){\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].data = data;\n        }\n      }\n    },\n  }, \n  actions: {\n    addComp({commit}, ){\n      console.log('adding')\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      \n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      console.log('deleting' + id)\n      commit('DELETE_COMPONENT', id);\n    },\n    addLink({commit, dispatch}, linkData){\n      if(linkData.status == \"source\"){\n        commit('ADD_SOURCE_LINK', linkData)\n        dispatch('outputHandler', linkData)\n      }else{\n        alert('Corpus card has to be the starting point');\n        dispatch('link/deleteComp', linkData.id, {root: true});\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        console.log('no use, trying to remove target link for corpus, which does not exist')\n      }\n    }, \n\n    async addCorpus({commit, dispatch, state}, data){\n      for(let i in state.cards){\n        if(state.cards[i].id == data.cardId && state.cards[i].selectedTable !== data){\n          commit('ADD_DATA', data);\n          commit('UPDATE_LOADING_STATUS', {id: data.cardId, status: true})\n          console.log(data);\n          let tabularData = await axios.get('http://127.0.0.1:5000/getTable')\n          console.log(tabularData); \n          commit('LOAD_DATA', {id: data.cardId, data: {\n            data: {...tabularData.data} , \n            tableNames: Object.keys(tabularData.data)\n          }})\n          commit('UPDATE_LOADING_STATUS', {id: data.cardId, status: false})\n          console.log('adding corpusdata ############')\n         \n          for(let i in state.cards){\n            if(state.cards[i].id == data.cardId){\n              for(let j in state.cards[i].sourceLink){\n                dispatch('outputHandler', state.cards[i].sourceLink[j])\n              }\n            }\n          }\n        }\n      }\n\n     \n    }, \n\n\n    outputHandler({commit, dispatch, state}, linkData){\n      // Need to handler output since self is source\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData: state.cards[i].data}, {root: true})\n          // return;\n        }\n      }\n    }    \n  }\n}"]}]}