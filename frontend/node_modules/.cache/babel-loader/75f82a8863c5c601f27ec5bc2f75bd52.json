{"remainingRequest":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/loader/graph.js","dependencies":[{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/loader/graph.js","mtime":1661441978842},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1644077470344},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1644041617264},{"path":"/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661441977623}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmxpbmsuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy95YW1laXR1L0Rlc2t0b3AvSUNJUkNMRS9TbWFydGZvb2RzaGVkX1ZBX0Zsb3cvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy95YW1laXR1L0Rlc2t0b3AvSUNJUkNMRS9TbWFydGZvb2RzaGVkX1ZBX0Zsb3cvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IHsgZ2V0Q29tcG9uZW50VHlwZSwgZ2V0VGFyZ2V0Q2FyZCB9IGZyb20gJ0AvdXRpbHMvaGVscCc7CmltcG9ydCB7IGFwaUNsaWVudCB9IGZyb20gJy4uLy4uL2FwaS9hcGlDbGllbnQnOwppbXBvcnQgeyB1cGRhdGVHcmFwaEluc3RhbmNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvR3JhcGhJbnN0YW5jZSc7CmltcG9ydCB7IHJldHJpZXZlR3JhcGhGcm9tVGFibGUgfSBmcm9tICcuLi8uLi91dGlscy9LR3V0aWxzJzsKCmZ1bmN0aW9uIGNyZWF0ZU5ld0NvcnB1c0NhcmQoaWQpIHsKICByZXR1cm4gewogICAgaWQ6ICJjYXJkLWdyYXBoLSIuY29uY2F0KGlkKSwKICAgIHNvdXJjZUxpbms6IFtdLAogICAgLy8KICAgIHRhcmdldExpbms6IFtdLAogICAgc2VsZWN0ZWRHcmFwaDogdW5kZWZpbmVkLAogICAgbWFyZ2luTGVmdDogbnVsbCwKICAgIG1hcmdpblRvcDogbnVsbCwKICAgIHdpZHRoOiBudWxsLAogICAgaGVpZ2h0OiBudWxsLAogICAgZGF0YTogdW5kZWZpbmVkLAogICAgbW9kZTogJ29ubGluZScsCiAgICBzZWxlY3RlZEdyYXBoSW5zdGFuY2U6IG51bGwsCiAgICBsb2FkaW5nU3RhdHVzOiBmYWxzZQogIH07Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBuZXh0QXZhaWxhYmxlSW5kZXg6IDAsCiAgICBjYXJkczogW10sCiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudCgpIHsKICAgICAgcmV0dXJuIGltcG9ydCgnQC9jb21wb25lbnRzL2xvYWRlci9ncmFwaCcpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBBRERfQ09NUE9ORU5UOiBmdW5jdGlvbiBBRERfQ09NUE9ORU5UKHN0YXRlKSB7CiAgICAgIHZhciBuZXh0SW5kZXggPSBzdGF0ZS5uZXh0QXZhaWxhYmxlSW5kZXg7CiAgICAgIHN0YXRlLm5leHRBdmFpbGFibGVJbmRleCArPSAxOwogICAgICBzdGF0ZS5jYXJkcy5wdXNoKGNyZWF0ZU5ld0NvcnB1c0NhcmQobmV4dEluZGV4KSk7CiAgICB9LAogICAgREVMRVRFX0NPTVBPTkVOVDogZnVuY3Rpb24gREVMRVRFX0NPTVBPTkVOVChzdGF0ZSwgaWQpIHsKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSAiIi5jb25jYXQoaWQpKSB7CiAgICAgICAgICBzdGF0ZS5jYXJkcy5zcGxpY2UoaSwgMSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhpZCArICcgaGFzIGJlZW4gZGVsZXRlZCcpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgQUREX1NPVVJDRV9MSU5LOiBmdW5jdGlvbiBBRERfU09VUkNFX0xJTksoc3RhdGUsIGxpbmtEYXRhKSB7CiAgICAgIGZvciAodmFyIGkgaW4gc3RhdGUuY2FyZHMpIHsKICAgICAgICBpZiAoc3RhdGUuY2FyZHNbaV0uaWQgPT0gbGlua0RhdGEuc291cmNlKSB7CiAgICAgICAgICBzdGF0ZS5jYXJkc1tpXS5zb3VyY2VMaW5rLnB1c2gobGlua0RhdGEpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIEFERF9UQVJHRVRfTElOSzogZnVuY3Rpb24gQUREX1RBUkdFVF9MSU5LKHN0YXRlLCBsaW5rRGF0YSkgewogICAgICBmb3IgKHZhciBpIGluIHN0YXRlLmNhcmRzKSB7CiAgICAgICAgaWYgKHN0YXRlLmNhcmRzW2ldLmlkID09IGxpbmtEYXRhLnRhcmdldCkgewogICAgICAgICAgc3RhdGUuY2FyZHNbaV0udGFyZ2V0TGluay5wdXNoKGxpbmtEYXRhKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBVUERBVEVfU09VUkNFOiBmdW5jdGlvbiBVUERBVEVfU09VUkNFKHN0YXRlLCBsaW5rRGF0YSkgewogICAgICBmb3IgKHZhciBpIGluIHN0YXRlLmNhcmRzKSB7CiAgICAgICAgaWYgKHN0YXRlLmNhcmRzW2ldLmlkID09IGxpbmtEYXRhLnNvdXJjZSkgewogICAgICAgICAgZm9yICh2YXIgaiBpbiBzdGF0ZS5jYXJkc1tpXS5zb3VyY2VMaW5rKSB7CiAgICAgICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5zb3VyY2VMaW5rW2pdLmlkID09IGxpbmtEYXRhLmlkKSB7CiAgICAgICAgICAgICAgc3RhdGUuY2FyZHNbaV0uc291cmNlTGlua1tqXSA9IGxpbmtEYXRhOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgVVBEQVRFX1RBUkdFVDogZnVuY3Rpb24gVVBEQVRFX1RBUkdFVChzdGF0ZSwgbGlua0RhdGEpIHsKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSBsaW5rRGF0YS50YXJnZXQpIHsKICAgICAgICAgIGZvciAodmFyIGogaW4gc3RhdGUuY2FyZHNbaV0udGFyZ2V0TGluaykgewogICAgICAgICAgICBpZiAoc3RhdGUuY2FyZHNbaV0udGFyZ2V0TGlua1tqXS5pZCA9PSBsaW5rRGF0YS5pZCkgewogICAgICAgICAgICAgIHN0YXRlLmNhcmRzW2ldLnRhcmdldExpbmtbal0gPSBsaW5rRGF0YTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIFJFTU9WRV9TT1VSQ0VMSU5LOiBmdW5jdGlvbiBSRU1PVkVfU09VUkNFTElOSyhzdGF0ZSwgbGlua0RhdGEpIHsKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSBsaW5rRGF0YS5zb3VyY2UpIHsKICAgICAgICAgIGZvciAodmFyIGogaW4gc3RhdGUuY2FyZHNbaV0uc291cmNlTGluaykgewogICAgICAgICAgICBpZiAoc3RhdGUuY2FyZHNbaV0uc291cmNlTGlua1tqXS5pZCA9PSBsaW5rRGF0YS5pZCkgewogICAgICAgICAgICAgIHN0YXRlLmNhcmRzW2ldLnNvdXJjZUxpbmsuc3BsaWNlKGosIDEpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgVVBEQVRFX0xPQURJTkdfU1RBVFVTOiBmdW5jdGlvbiBVUERBVEVfTE9BRElOR19TVEFUVVMoc3RhdGUsIF9yZWYpIHsKICAgICAgdmFyIGlkID0gX3JlZi5pZCwKICAgICAgICAgIHN0YXR1cyA9IF9yZWYuc3RhdHVzOwoKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSBpZCkgewogICAgICAgICAgc3RhdGUuY2FyZHNbaV0ubG9hZGluZ1N0YXR1cyA9IHN0YXR1czsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBBRERfREFUQTogZnVuY3Rpb24gQUREX0RBVEEoc3RhdGUsIGRhdGEpIHsKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSBkYXRhLmNhcmRJZCkgewogICAgICAgICAgc3RhdGUuY2FyZHNbaV0uc2VsZWN0ZWRHcmFwaCA9IGRhdGE7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgU0VUX0lOUFVUREFUQTogZnVuY3Rpb24gU0VUX0lOUFVUREFUQShzdGF0ZSwgX3JlZjIpIHsKICAgICAgdmFyIGxpbmsgPSBfcmVmMi5saW5rLAogICAgICAgICAgaW5wdXREYXRhID0gX3JlZjIuaW5wdXREYXRhOwoKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSBsaW5rLnRhcmdldCkgewogICAgICAgICAgc3RhdGUuY2FyZHNbaV0uaW5wdXREYXRhID0gaW5wdXREYXRhOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIExPQURfREFUQTogZnVuY3Rpb24gTE9BRF9EQVRBKHN0YXRlLCBfcmVmMykgewogICAgICB2YXIgaWQgPSBfcmVmMy5pZCwKICAgICAgICAgIGRhdGEgPSBfcmVmMy5kYXRhOwoKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSBpZCkgewogICAgICAgICAgc3RhdGUuY2FyZHNbaV0uZGF0YSA9IGRhdGE7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgU0VUX01PREU6IGZ1bmN0aW9uIFNFVF9NT0RFKHN0YXRlLCBfcmVmNCkgewogICAgICB2YXIgaWQgPSBfcmVmNC5pZCwKICAgICAgICAgIG1vZGUgPSBfcmVmNC5tb2RlOwoKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PT0gaWQpIHsKICAgICAgICAgIHN0YXRlLmNhcmRzW2ldLm1vZGUgPSBtb2RlOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIFVQREFURV9JTlNUQU5DRTogZnVuY3Rpb24gVVBEQVRFX0lOU1RBTkNFKHN0YXRlLCBfcmVmNSkgewogICAgICB2YXIgaWQgPSBfcmVmNS5pZCwKICAgICAgICAgIGluc3RhbmNlID0gX3JlZjUuaW5zdGFuY2U7CgogICAgICBmb3IgKHZhciBpIGluIHN0YXRlLmNhcmRzKSB7CiAgICAgICAgaWYgKHN0YXRlLmNhcmRzW2ldLmlkID09PSBpZCkgewogICAgICAgICAgc3RhdGUuY2FyZHNbaV0uc2VsZWN0ZWRHcmFwaEluc3RhbmNlID0gaW5zdGFuY2U7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRDb21wOiBmdW5jdGlvbiBhZGRDb21wKF9yZWY2KSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICAgIGNvbnNvbGUubG9nKCdhZGRpbmcnKTsKICAgICAgY29tbWl0KCdBRERfQ09NUE9ORU5UJyk7CiAgICB9LAogICAgZGVsZXRlQ29tcDogZnVuY3Rpb24gZGVsZXRlQ29tcChfcmVmNywgaWQpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY3LmNvbW1pdCwKICAgICAgICAgIHN0YXRlID0gX3JlZjcuc3RhdGUsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY3LmRpc3BhdGNoOwogICAgICB2YXIgdG9EZWxldGVkQ29tcCA9IHN0YXRlLmNhcmRzLmZpbHRlcihmdW5jdGlvbiAoY2FyZCkgewogICAgICAgIHJldHVybiBjYXJkLmlkID09IGlkOwogICAgICB9KVswXTsKICAgICAgdmFyIHRvRGVsZXRlU291cmNlTGluayA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodG9EZWxldGVkQ29tcC5zb3VyY2VMaW5rKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRvRGVsZXRlZENvbXAudGFyZ2V0TGluaykpOwogICAgICB0b0RlbGV0ZVNvdXJjZUxpbmsuZm9yRWFjaChmdW5jdGlvbiAobGluaykgewogICAgICAgIGNvbnNvbGUubG9nKGxpbmspOwogICAgICAgIGRpc3BhdGNoKCdsaW5rL2RlbGV0ZUNvbXAnLCBsaW5rLmlkLCB7CiAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZygnZGVsZXRpbmcnICsgaWQpOwogICAgICBjb21taXQoJ0RFTEVURV9DT01QT05FTlQnLCBpZCk7CiAgICB9LAogICAgYWRkTGluazogZnVuY3Rpb24gYWRkTGluayhfcmVmOCwgbGlua0RhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWY4LmNvbW1pdCwKICAgICAgICAgIGRpc3BhdGNoID0gX3JlZjguZGlzcGF0Y2g7CgogICAgICBpZiAobGlua0RhdGEuc3RhdHVzID09ICJzb3VyY2UiKSB7CiAgICAgICAgY29tbWl0KCdBRERfU09VUkNFX0xJTksnLCBsaW5rRGF0YSk7CiAgICAgICAgZGlzcGF0Y2goJ291dHB1dEhhbmRsZXInLCBsaW5rRGF0YSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29tbWl0KCdBRERfVEFSR0VUX0xJTksnLCBsaW5rRGF0YSk7IC8vIC8vIGFsZXJ0KCdDb3JwdXMgY2FyZCBoYXMgdG8gYmUgdGhlIHN0YXJ0aW5nIHBvaW50Jyk7CiAgICAgICAgLy8gZGlzcGF0Y2goJ2xpbmsvZGVsZXRlQ29tcCcsIGxpbmtEYXRhLmlkLCB7IHJvb3Q6IHRydWUgfSk7CiAgICAgIH0KICAgIH0sCiAgICB1cGRhdGVMaW5rOiBmdW5jdGlvbiB1cGRhdGVMaW5rKF9yZWY5LCBsaW5rRGF0YSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjkuY29tbWl0OwoKICAgICAgaWYgKGxpbmtEYXRhLnN0YXR1cyA9PSAnc291cmNlJykgewogICAgICAgIGNvbW1pdCgnVVBEQVRFX1NPVVJDRScsIGxpbmtEYXRhKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb21taXQoJ1VQREFURV9UQVJHRVQnLCBsaW5rRGF0YSk7CiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVMaW5rOiBmdW5jdGlvbiByZW1vdmVMaW5rKF9yZWYxMCwgbGlua0RhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYxMC5jb21taXQ7CgogICAgICBpZiAobGlua0RhdGEuc3RhdHVzID09ICdzb3VyY2UnKSB7CiAgICAgICAgY29tbWl0KCdSRU1PVkVfU09VUkNFTElOSycsIGxpbmtEYXRhKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygnbm8gdXNlLCB0cnlpbmcgdG8gcmVtb3ZlIHRhcmdldCBsaW5rIGZvciBjb3JwdXMsIHdoaWNoIGRvZXMgbm90IGV4aXN0Jyk7CiAgICAgIH0KICAgIH0sCiAgICBhZGRHcmFwaDogZnVuY3Rpb24gYWRkR3JhcGgoX3JlZjExLCBkYXRhKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgZGlzcGF0Y2gsIHN0YXRlLCBpLCBmb3JtRGF0YSwgdXBsb2FkX3JlcywgR3JhcGhJbnN0YW5jZSwgX2ksIGo7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYxMS5jb21taXQsIGRpc3BhdGNoID0gX3JlZjExLmRpc3BhdGNoLCBzdGF0ZSA9IF9yZWYxMS5zdGF0ZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gcmVnZW5lcmF0b3JSdW50aW1lLmtleXMoc3RhdGUuY2FyZHMpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBpZiAoKF9jb250ZXh0LnQxID0gX2NvbnRleHQudDAoKSkuZG9uZSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGkgPSBfY29udGV4dC50MS52YWx1ZTsKCiAgICAgICAgICAgICAgICBpZiAoIShzdGF0ZS5jYXJkc1tpXS5pZCA9PSBkYXRhLmNhcmRJZCAmJiBzdGF0ZS5jYXJkc1tpXS5zZWxlY3RlZFRhYmxlICE9PSBkYXRhKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjY7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIGNvbW1pdCgnQUREX0RBVEEnLCBkYXRhKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnVVBEQVRFX0xPQURJTkdfU1RBVFVTJywgewogICAgICAgICAgICAgICAgICBpZDogZGF0YS5jYXJkSWQsCiAgICAgICAgICAgICAgICAgIHN0YXR1czogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZGF0YSBmcm9tIGdyYXBoIGxvYWRlcicpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgICAgICAgICAgaWYgKCEoZGF0YS5zb3VyY2UgPT0gJ3VwbG9hZGVkX2ZpbGUnICYmIGRhdGEuc2VsZWN0ZWQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gdXBsb2FkIGZpbGUgCiAgICAgICAgICAgICAgICBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCJmaWxlcyIsIGRhdGEuc2VsZWN0ZWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaUNsaWVudC5wb3N0KCcvdXBsb2FkX2dyYXBoZmlsZScsIGZvcm1EYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIHVwbG9hZF9yZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3VwbG9hZGRpbmcgZmluaXNoZWQhISEnKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVwbG9hZF9yZXMpOwogICAgICAgICAgICAgICAgY29tbWl0KCdTRVRfTU9ERScsIHsKICAgICAgICAgICAgICAgICAgaWQ6IGRhdGEuY2FyZElkLAogICAgICAgICAgICAgICAgICBtb2RlOiAnZmlsZScKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29tbWl0KCdVUERBVEVfTE9BRElOR19TVEFUVVMnLCB7CiAgICAgICAgICAgICAgICAgIGlkOiBkYXRhLmNhcmRJZCwKICAgICAgICAgICAgICAgICAgc3RhdHVzOiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjY7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgICAgIGNvbW1pdCgnU0VUX01PREUnLCB7CiAgICAgICAgICAgICAgICAgIGlkOiBkYXRhLmNhcmRJZCwKICAgICAgICAgICAgICAgICAgbW9kZTogJ29ubGluZScKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgR3JhcGhJbnN0YW5jZSA9IHVwZGF0ZUdyYXBoSW5zdGFuY2UoZGF0YS5zZWxlY3RlZCk7IC8vIGxldCBncmFwaERhdGEgPSBhd2FpdCBheGlvcy5nZXQoJy9nZXRUYWJsZScpCiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhncmFwaERhdGEpOwogICAgICAgICAgICAgICAgLy8gY29tbWl0KCdMT0FEX0RBVEEnLCB7CiAgICAgICAgICAgICAgICAvLyAgIGlkOiBkYXRhLmNhcmRJZCwgZGF0YTogewogICAgICAgICAgICAgICAgLy8gICAgIGRhdGE6IHsgLi4uZ3JhcGhEYXRhLmRhdGEgfSwKICAgICAgICAgICAgICAgIC8vICAgICB0YWJsZU5hbWVzOiBPYmplY3Qua2V5cyhncmFwaERhdGEuZGF0YSkKICAgICAgICAgICAgICAgIC8vICAgfQogICAgICAgICAgICAgICAgLy8gfSkKICAgICAgICAgICAgICAgIC8vIGNvbW1pdCgnVVBEQVRFX0xPQURJTkdfU1RBVFVTJywgeyBpZDogZGF0YS5jYXJkSWQsIHN0YXR1czogZmFsc2UgfSkKICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdhZGRpbmcgY29ycHVzZGF0YSAjIyMjIyMjIyMjIyMnKQoKICAgICAgICAgICAgICAgIGNvbW1pdCgnVVBEQVRFX0lOU1RBTkNFJywgewogICAgICAgICAgICAgICAgICBpZDogZGF0YS5jYXJkSWQsCiAgICAgICAgICAgICAgICAgIGluc3RhbmNlOiBHcmFwaEluc3RhbmNlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnTE9BRF9EQVRBJywgewogICAgICAgICAgICAgICAgICBpZDogZGF0YS5jYXJkSWQsCiAgICAgICAgICAgICAgICAgIGRhdGE6IG51bGwKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29tbWl0KCdVUERBVEVfTE9BRElOR19TVEFUVVMnLCB7CiAgICAgICAgICAgICAgICAgIGlkOiBkYXRhLmNhcmRJZCwKICAgICAgICAgICAgICAgICAgc3RhdHVzOiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgZm9yIChfaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgICAgICAgICAgICBpZiAoc3RhdGUuY2FyZHNbX2ldLmlkID09IGRhdGEuY2FyZElkKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yIChqIGluIHN0YXRlLmNhcmRzW19pXS5zb3VyY2VMaW5rKSB7CiAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaCgnb3V0cHV0SGFuZGxlcicsIHN0YXRlLmNhcmRzW19pXS5zb3VyY2VMaW5rW2pdKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAyNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMjg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgaW5wdXRIYW5kbGVyOiBmdW5jdGlvbiBpbnB1dEhhbmRsZXIoX3JlZjEyLCBfcmVmMTMpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIGRpc3BhdGNoLCBsaW5rLCBpbnB1dERhdGEsIHRhcmdldENhcmQsIGRhdGEsIGk7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjEyLnN0YXRlLCBjb21taXQgPSBfcmVmMTIuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYxMi5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIGxpbmsgPSBfcmVmMTMubGluaywgaW5wdXREYXRhID0gX3JlZjEzLmlucHV0RGF0YTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGlucHV0RGF0YSk7CiAgICAgICAgICAgICAgICB0YXJnZXRDYXJkID0gZ2V0VGFyZ2V0Q2FyZChzdGF0ZS5jYXJkcywgbGluay50YXJnZXQpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGFyZ2V0Q2FyZCk7CgogICAgICAgICAgICAgICAgaWYgKCEoaW5wdXREYXRhICYmIHRhcmdldENhcmQuc2VsZWN0ZWRHcmFwaEluc3RhbmNlKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gcmV0cmlldmVHcmFwaEZyb21UYWJsZShpbnB1dERhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb21taXQoJ1NFVF9JTlBVVERBVEEnLCB7CiAgICAgICAgICAgICAgICAgIGxpbms6IGxpbmssCiAgICAgICAgICAgICAgICAgIGlucHV0RGF0YTogZGF0YQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYgKHRhcmdldENhcmQuc291cmNlTGluay5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgIGZvciAoaSBpbiB0YXJnZXRDYXJkLnNvdXJjZUxpbmspIHsKICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaCgnb3V0cHV0SGFuZGxlcicsIHRhcmdldENhcmQuc291cmNlTGlua1tpXSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBpZiAoIXRhcmdldENhcmQuc2VsZWN0ZWRHcmFwaEluc3RhbmNlKSB7CiAgICAgICAgICAgICAgICAgIGFsZXJ0KCd5b3UgbXVzdCBzcGVjaWZ5IGdyYXBoIGluc3RhbmNlIHRvIHF1ZXJ5Jyk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBvdXRwdXRIYW5kbGVyOiBmdW5jdGlvbiBvdXRwdXRIYW5kbGVyKF9yZWYxNCwgbGlua0RhdGEpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYxNC5jb21taXQsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYxNC5kaXNwYXRjaCwKICAgICAgICAgIHN0YXRlID0gX3JlZjE0LnN0YXRlOwogICAgICAvLyBOZWVkIHRvIGhhbmRsZXIgb3V0cHV0IHNpbmNlIHNlbGYgaXMgc291cmNlCiAgICAgIHZhciB0YXJnZXRDb21wVHlwZSA9IGdldENvbXBvbmVudFR5cGUobGlua0RhdGEudGFyZ2V0KTsKICAgICAgY29uc29sZS5sb2coJ291dHB1dEhhbmRsZXInKTsKICAgICAgY29uc29sZS5sb2cobGlua0RhdGEpOwoKICAgICAgZm9yICh2YXIgaSBpbiBzdGF0ZS5jYXJkcykgewogICAgICAgIGlmIChzdGF0ZS5jYXJkc1tpXS5pZCA9PSBsaW5rRGF0YS5zb3VyY2UpIHsKICAgICAgICAgIGRpc3BhdGNoKCIiLmNvbmNhdCh0YXJnZXRDb21wVHlwZSwgIi9pbnB1dEhhbmRsZXIiKSwgewogICAgICAgICAgICBsaW5rOiBsaW5rRGF0YSwKICAgICAgICAgICAgaW5wdXREYXRhOiBzdGF0ZS5jYXJkc1tpXS5pbnB1dERhdGEKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgcm9vdDogdHJ1ZQogICAgICAgICAgfSk7IC8vIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/yameitu/Desktop/ICIRCLE/Smartfoodshed_VA_Flow/frontend/src/store/modules/loader/graph.js"],"names":["getComponentType","getTargetCard","apiClient","updateGraphInstance","retrieveGraphFromTable","createNewCorpusCard","id","sourceLink","targetLink","selectedGraph","undefined","marginLeft","marginTop","width","height","data","mode","selectedGraphInstance","loadingStatus","namespaced","state","nextAvailableIndex","cards","component","mutations","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","i","splice","console","log","ADD_SOURCE_LINK","linkData","source","ADD_TARGET_LINK","target","UPDATE_SOURCE","j","UPDATE_TARGET","REMOVE_SOURCELINK","UPDATE_LOADING_STATUS","status","ADD_DATA","cardId","SET_INPUTDATA","link","inputData","LOAD_DATA","SET_MODE","UPDATE_INSTANCE","instance","actions","addComp","commit","deleteComp","dispatch","toDeletedComp","filter","card","toDeleteSourceLink","forEach","root","addLink","updateLink","removeLink","addGraph","selectedTable","selected","formData","FormData","append","post","upload_res","GraphInstance","inputHandler","targetCard","length","alert","outputHandler","targetCompType"],"mappings":"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","sourcesContent":["import { getComponentType, getTargetCard } from '@/utils/help'\nimport { apiClient } from '../../api/apiClient';\nimport { updateGraphInstance } from '../../utils/GraphInstance';\nimport { retrieveGraphFromTable } from '../../utils/KGutils';\n\nfunction createNewCorpusCard(id) {\n  return {\n    id: `card-graph-${id}`,\n    sourceLink: [], //\n    targetLink: [], \n    selectedGraph: undefined,\n    marginLeft: null,\n    marginTop: null,\n    width: null,\n    height: null,\n    data: undefined,\n    mode: 'online', \n    selectedGraphInstance: null,\n    loadingStatus: false,\n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [\n\n    ],\n    component: () => import('@/components/loader/graph'),\n  },\n  mutations: {\n    ADD_COMPONENT(state) {\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewCorpusCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == `${id}`) {\n          state.cards.splice(i, 1);\n          console.log(id + ' has been deleted')\n          break\n        }\n      }\n\n    },\n    ADD_SOURCE_LINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    ADD_TARGET_LINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.target) {\n          state.cards[i].targetLink.push(linkData);\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          for (let j in state.cards[i].sourceLink) {\n            if (state.cards[i].sourceLink[j].id == linkData.id) {\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.target) {\n          for (let j in state.cards[i].targetLink) {\n            if (state.cards[i].targetLink[j].id == linkData.id) {\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          for (let j in state.cards[i].sourceLink) {\n            if (state.cards[i].sourceLink[j].id == linkData.id) {\n              state.cards[i].sourceLink.splice(j, 1);\n            }\n          }\n        }\n      }\n    },\n    UPDATE_LOADING_STATUS(state, { id, status }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == id) {\n          state.cards[i].loadingStatus = status;\n        }\n      }\n    },\n    ADD_DATA(state, data) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == data.cardId) {\n          state.cards[i].selectedGraph = data;\n        }\n      }\n    },\n    SET_INPUTDATA(state, {link, inputData}) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == link.target) {\n          state.cards[i].inputData = inputData;\n        }\n      }\n    }, \n    LOAD_DATA(state, { id, data }) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == id) {\n          state.cards[i].data = data;\n        }\n      }\n    },\n\n    SET_MODE(state, {id, mode}) {\n      for (let i in state.cards) {\n        if (state.cards[i].id === id) {\n          state.cards[i].mode = mode \n        }\n      }\n    }, \n\n    UPDATE_INSTANCE(state, {id, instance}) {\n      for (let i in state.cards) {\n        if (state.cards[i].id === id) {\n          state.cards[i].selectedGraphInstance = instance \n        }\n      }\n    } \n  },\n  actions: {\n    addComp({ commit },) {\n      console.log('adding')\n      commit('ADD_COMPONENT');\n    },\n    deleteComp({ commit, state, dispatch }, id) {\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n\n      const toDeleteSourceLink = [...toDeletedComp.sourceLink, ...toDeletedComp.targetLink];\n\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, { root: true })\n      })\n      console.log('deleting' + id)\n      commit('DELETE_COMPONENT', id);\n    },\n    addLink({ commit, dispatch }, linkData) {\n      if (linkData.status == \"source\") {\n        commit('ADD_SOURCE_LINK', linkData)\n        dispatch('outputHandler', linkData)\n      } else {\n        commit('ADD_TARGET_LINK', linkData)\n        // // alert('Corpus card has to be the starting point');\n        // dispatch('link/deleteComp', linkData.id, { root: true });\n      }\n    },\n    updateLink({ commit }, linkData) {\n      if (linkData.status == 'source') {\n        commit('UPDATE_SOURCE', linkData)\n      } else {\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({ commit }, linkData) {\n      if (linkData.status == 'source') {\n        commit('REMOVE_SOURCELINK', linkData)\n      } else {\n        console.log('no use, trying to remove target link for corpus, which does not exist')\n      }\n    },\n\n    async addGraph({ commit, dispatch, state }, data) {\n      for (let i in state.cards) {\n        if (state.cards[i].id == data.cardId && state.cards[i].selectedTable !== data) {\n          // commit('ADD_DATA', data);\n          commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: true })\n          console.log('data from graph loader')\n          console.log(data);\n          if (data.source == 'uploaded_file' && data.selected) {\n            // upload file \n\n            const formData = new FormData();\n            formData.append(\"files\", data.selected);\n            \n            let upload_res = await apiClient.post('/upload_graphfile', formData)\n            console.log('uploadding finished!!!')\n            console.log(upload_res)\n            commit('SET_MODE', {id: data.cardId, mode: 'file'})\n            commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: false }) \n          } else {\n            commit('SET_MODE', {id: data.cardId, mode: 'online'})\n            const GraphInstance = updateGraphInstance(data.selected)\n            // let graphData = await axios.get('/getTable')\n            // console.log(graphData);\n            // commit('LOAD_DATA', {\n            //   id: data.cardId, data: {\n            //     data: { ...graphData.data },\n            //     tableNames: Object.keys(graphData.data)\n            //   }\n            // })\n            // commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: false })\n            // console.log('adding corpusdata ############')\n            commit('UPDATE_INSTANCE', {id: data.cardId, instance: GraphInstance})\n            commit('LOAD_DATA', {\n                id: data.cardId, data: null\n            }) \n            commit('UPDATE_LOADING_STATUS', { id: data.cardId, status: false }) \n            for (let i in state.cards) {\n              if (state.cards[i].id == data.cardId) {\n                for (let j in state.cards[i].sourceLink) {\n                  dispatch('outputHandler', state.cards[i].sourceLink[j])\n                }\n              }\n            }\n          }\n        }\n      }\n\n\n    },\n\n    async inputHandler({state, commit, dispatch}, {link, inputData}) {\n      console.log(inputData)\n      const targetCard = getTargetCard(state.cards, link.target)\n      console.log(targetCard)\n      if (inputData && targetCard.selectedGraphInstance) {\n        const data = await retrieveGraphFromTable(inputData)\n        commit('SET_INPUTDATA', {link, inputData: data}) \n        if (targetCard.sourceLink.length > 0) {\n          for (let i in targetCard.sourceLink) {\n            dispatch('outputHandler', targetCard.sourceLink[i])\n          }\n        }\n      } else {\n        if (!targetCard.selectedGraphInstance) {\n          alert('you must specify graph instance to query')\n        }\n      }\n    }, \n    outputHandler({ commit, dispatch, state }, linkData) {\n      // Need to handler output since self is source\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for (let i in state.cards) {\n        if (state.cards[i].id == linkData.source) {\n          dispatch(`${targetCompType}/inputHandler`, { link: linkData, inputData: state.cards[i].inputData }, { root: true })\n          // return;\n        }\n      }\n    }\n  }\n}"]}]}