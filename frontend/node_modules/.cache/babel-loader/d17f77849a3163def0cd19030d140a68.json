{"remainingRequest":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/kgquerier.js","dependencies":[{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/kgquerier.js","mtime":1666790787307},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/babel.config.js","mtime":1660324544800},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660324545335},{"path":"/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":1661232574882}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/qiurui/Desktop/ICICLE/new_gui_2022/Smartfoodshed_VA_Flow/frontend/src/store/modules/analyzer/kgquerier.js"],"names":["getComponentType","getTargetCard","base_request_url","axios","createNewKGQuerierCard","id","sourceLink","targetLink","marginLeft","marginTop","width","height","inputData","undefined","outputData","selectedItems","loadingStatus","keep_in_vis_mode","namespaced","state","nextAvailableIndex","cards","component","mutations","SET_loadingStatus","status","console","log","i","SET_OUTPUTDATA","ADD_COMPONENT","nextIndex","push","DELETE_COMPONENT","splice","ADD_SOURCE_LINK","linkData","source","ADD_TARGET_LINK","target","UPDATE_SOURCE","j","UPDATE_TARGET","REMOVE_SOURCELINK","REMOVE_TARGETLINK","SET_INPUTDATA","link","UPDATE_POS","UPDATE_SIZE","UPDATE_SELECTED_ITEMS","selected","KEEP_IN_VIS","actions","queryEndpoint","commit","dispatch","url","sparql","alert","path","post","result","targetCard","length","queryTTL","addComp","updatePos","updateSize","deleteComp","toDeletedComp","filter","card","toDeleteSourceLink","toDeleteTargetLink","forEach","root","addLink","data","updateLink","removeLink","updateSelectedItems","inputHandler","sourceCompType","targetCompType","outputHandler","keepInVis"],"mappings":"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","sourcesContent":["import {getComponentType, getTargetCard} from '@/utils/help'\nimport { base_request_url } from '@/utils/base_url'\nimport axios from 'axios'\nfunction createNewKGQuerierCard(id){\n  return {\n    id: `card-kgquerier-${id}`,\n    sourceLink: [], //\n    targetLink: [], \n    marginLeft: null, \n    marginTop: null, \n    width: 500, \n    height: 300,\n    inputData: undefined,\n    outputData: undefined, \n    selectedItems: [],\n    loadingStatus: false,\n    keep_in_vis_mode: false \n  }\n}\n\nexport default {\n  namespaced: true,\n  state: {\n    nextAvailableIndex: 0,\n    cards: [],\n    component: () => import('@/components/analyzer/kgquerier'), \n    \n\n  }, \n  mutations: {\n    SET_loadingStatus(state, {id, status}){\n      console.log('loading status changing,,,', id, status)\n      for(let i in state.cards){\n        console.log(state.cards[i].id)\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].loadingStatus = status\n        }\n      }\n    },\n    SET_OUTPUTDATA(state, {id, status}){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards[i].outputData = status\n        }\n      }\n    },\n    ADD_COMPONENT(state){\n      const nextIndex = state.nextAvailableIndex;\n      state.nextAvailableIndex += 1\n      state.cards.push(createNewKGQuerierCard(nextIndex));\n    },\n    DELETE_COMPONENT(state, id){\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          state.cards.splice(i, 1);\n          break\n        }\n      }\n    }, \n    ADD_SOURCE_LINK(state, linkData){\n      console.log('addlink!!!');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          state.cards[i].sourceLink.push(linkData);\n        }\n      }\n    },\n    ADD_TARGET_LINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          state.cards[i].targetLink.push(linkData);\n          return;\n        }\n      }\n    },\n    UPDATE_SOURCE(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    UPDATE_TARGET(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              state.cards[i].targetLink[j] = linkData\n            }\n          }\n        }\n      }\n    },\n    REMOVE_SOURCELINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          for(let j in state.cards[i].sourceLink){\n            if(state.cards[i].sourceLink[j].id == linkData.id){\n              state.cards[i].sourceLink.splice(j,1);\n            }\n          }\n        }\n      }\n    },\n    REMOVE_TARGETLINK(state, linkData){\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.target){\n          for(let j in state.cards[i].targetLink){\n            if(state.cards[i].targetLink[j].id == linkData.id){\n              state.cards[i].targetLink.splice(j, 1);\n              state.cards[i].inputData = undefined;\n            }\n          }\n        }\n      }\n    }, \n    SET_INPUTDATA(state, {link, inputData}){\n      console.log('in set func')\n      for(let i in state.cards){\n        console.log(state.cards[i].id)\n        if(state.cards[i].id == link.target){\n          console.log('set query input data')\n          state.cards[i].inputData = inputData;\n        }\n      }\n    }, \n    UPDATE_POS(state, {id, marginLeft, marginTop}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].marginTop = marginTop \n          state.cards[i].marginLeft = marginLeft\n        }\n      }\n    }, \n    UPDATE_SIZE(state, {id, width, height}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].width = width \n          state.cards[i].height = height\n        }\n      }\n    },\n    UPDATE_SELECTED_ITEMS(state, {id, selected}) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].selectedItems = selected\n        }\n      }\n    }, \n    KEEP_IN_VIS(state, id) {\n      for(let i in state.cards){\n        if(state.cards[i].id == id){\n          state.cards[i].keep_in_vis_mode = !state.cards[i].keep_in_vis_mode\n        }\n      } \n    }\n  }, \n  actions: {\n\n    async queryEndpoint({commit, state, dispatch}, {id, url}){\n      var sparql = \"\"\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          sparql = state.cards[i].inputData\n        }\n      }\n      if(sparql==\"\"){\n        alert(\"please link a sparql source to the kgquerier!\")\n      }else{\n        commit('SET_loadingStatus', {'id': id, 'status':true})\n        let path = base_request_url + 'KGQueryEndpoint'\n        let result = await axios.post(path, {sparql: sparql, url: url})\n        commit('SET_OUTPUTDATA', {id: id, status: result['data']})\n\n        const targetCard = getTargetCard(state.cards, id) \n        // targetCard sourcelink: codeeditor, target: kgqueier\n        if (targetCard.sourceLink.length > 0) {\n          for (let i in targetCard.sourceLink) {\n            dispatch('outputHandler', targetCard.sourceLink[i]) // output the data again\n          }\n        }\n\n        commit('SET_loadingStatus', {'id': id, 'status':false})\n      }\n\n      \n    },\n    async queryTTL({commit, state, dispatch}, {id, url}){\n      var sparql = \"\"\n      for(let i in state.cards){\n        if(state.cards[i].id == `${id}`){\n          sparql = state.cards[i].inputData\n        }\n      }\n      if(sparql==\"\"){\n        alert(\"please link a sparql source to the kgquerier!\")\n      }else{\n        commit('SET_loadingStatus', {'id': id, 'status':true})\n        let path = base_request_url + 'KGQueryTTL'\n        let result = await axios.post(path, {sparql: sparql, url: url})\n        console.log(result)\n        commit('SET_OUTPUTDATA', {id: id, status: result['data']})\n\n        const targetCard = getTargetCard(state.cards, id) \n        // targetCard sourcelink: codeeditor, target: kgqueier\n        if (targetCard.sourceLink.length > 0) {\n          for (let i in targetCard.sourceLink) {\n            dispatch('outputHandler', targetCard.sourceLink[i]) // output the data again\n          }\n        }\n\n        commit('SET_loadingStatus', {'id': id, 'status':false})\n      }\n\n    },\n    addComp({commit}, ){\n      commit('ADD_COMPONENT');\n    },\n\n    updatePos({commit}, {id, marginTop, marginLeft}) {\n      commit('UPDATE_POS', {id, marginTop, marginLeft})\n    }, \n\n    updateSize({commit}, {id, width, height}) {\n      commit('UPDATE_SIZE', {id, width, height})\n    }, \n    deleteComp({commit, state, dispatch}, id){\n      const toDeletedComp = state.cards.filter(card => card.id == id)[0];\n      \n      const toDeleteSourceLink = [...toDeletedComp.sourceLink];\n      const toDeleteTargetLink = [...toDeletedComp.targetLink];\n      toDeleteSourceLink.forEach(link => {\n        console.log(link)\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      toDeleteTargetLink.forEach(link => {\n        dispatch('link/deleteComp', link.id, {root: true})\n      })\n      commit('DELETE_COMPONENT', id);\n    }, \n    addLink({commit, dispatch}, data){\n      if(data.status == \"source\"){\n        commit('ADD_SOURCE_LINK', data)\n        dispatch('outputHandler', data)\n      }else{\n        commit('ADD_TARGET_LINK', data)\n        //dispatch('inputHandler', linkData)\n      }\n    },\n    updateLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('UPDATE_SOURCE', linkData)\n      }else{\n        commit('UPDATE_TARGET', linkData)\n      }\n    },\n    removeLink({commit}, linkData){\n      if(linkData.status == 'source'){\n        commit('REMOVE_SOURCELINK', linkData)\n      }else{ \n        commit('REMOVE_TARGETLINK', linkData)\n      }\n    },\n    \n    updateSelectedItems({state, commit, dispatch}, {id, selected}) {\n      commit('UPDATE_SELECTED_ITEMS', {id, selected})\n      const targetCard = getTargetCard(state.cards, id) \n      if (targetCard.sourceLink.length > 0) {\n        for (let i in targetCard.sourceLink) {\n          dispatch('outputHandler', targetCard.sourceLink[i])\n        }\n      }\n    },\n    // Input Handler will be triggered by other components\n    // When source Component\n    inputHandler({commit, state, }, {link, inputData}){\n      const sourceCompType = getComponentType(link.source);\n      const targetCompType = getComponentType(link.target);\n      console.log('document Hanlde Input 123');\n      console.log(inputData);\n      if(inputData){\n        commit('SET_INPUTDATA', {link, inputData})  \n      }\n    }, \n\n    outputHandler({commit, state, dispatch}, linkData){\n      const targetCompType = getComponentType(linkData.target);\n      console.log('outputHandler');\n      console.log(linkData);\n      for(let i in state.cards){\n        if(state.cards[i].id == linkData.source){\n          console.log('checkkkkkk', state.cards[i].outputData)\n          dispatch(`${targetCompType}/inputHandler`, {link: linkData, inputData: state.cards[i].outputData}, {root: true}) // outputdata is json records(rows) of dataframe\n          return;\n        }\n      }\n    },\n    keepInVis({commit}, id) {\n      commit('KEEP_IN_VIS', id)\n    }\n  }\n}"]}]}