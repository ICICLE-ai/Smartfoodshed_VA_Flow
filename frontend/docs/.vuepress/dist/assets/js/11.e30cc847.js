(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{375:function(a,t,e){"use strict";e.r(t);var r=e(42),n=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"data-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-loader"}},[a._v("#")]),a._v(" Data Loader")]),a._v(" "),e("h3",{attrs:{id:"json-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json-loader"}},[a._v("#")]),a._v(" JSON Loader")]),a._v(" "),e("ul",[e("li",[a._v("Introduction: Load JSON file from users.")]),a._v(" "),e("li",[a._v("Input: JSON file in the following format:")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[\n    {attr1: '..', attr2: '..', attr3: '..'},\n    {attr1: '..', attr2: '..', attr3: '..'},\n    ...\n]\n")])])]),e("ul",[e("li",[a._v("Output: formatted JSON")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("data: {\n    value: [\n        {attr1: '..', attr2: '..', attr3: '..'},\n        {attr1: '..', attr2: '..', attr3: '..'},\n        ...\n    ]\n}\n")])])]),e("h3",{attrs:{id:"csv-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csv-loader"}},[a._v("#")]),a._v(" CSV Loader")]),a._v(" "),e("ul",[e("li",[a._v("Introduction: load csv file from users.")]),a._v(" "),e("li",[a._v("Input: CSV file")]),a._v(" "),e("li",[a._v("Output: JSON")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("data: {\n    value: [\n        {attr1: '..', attr2: '..', attr3: '..'},\n        {attr1: '..', attr2: '..', attr3: '..'},\n        ...\n    ]\n}\n")])])]),e("h3",{attrs:{id:"url-loader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#url-loader"}},[a._v("#")]),a._v(" URL Loader")]),a._v(" "),e("ul",[e("li",[a._v("Introduction: load online resources")]),a._v(" "),e("li",[a._v("Source: None (Starting Point)")]),a._v(" "),e("li",[a._v("Target: [ontology parser, ]")]),a._v(" "),e("li",[a._v("Input: str,")]),a._v(" "),e("li",[a._v("Output: str,")]),a._v(" "),e("li")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("{\n    id: `card-url-${id}`,\n    sourceLink: [], //\n    marginLeft: null, \n    marginTop: null, \n    width: null, \n    height: null,\n    data: {\n        'cardInd': null,\n        'linkml': null,\n        'vocabulary': null,\n        'ttl': null\n    },\n    loadingStatus: false\n}\n")])])]),e("h2",{attrs:{id:"analyzer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#analyzer"}},[a._v("#")]),a._v(" Analyzer")]),a._v(" "),e("h3",{attrs:{id:"codeeditor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#codeeditor"}},[a._v("#")]),a._v(" CodeEditor")]),a._v(" "),e("ul",[e("li",[a._v("Introduction: Code viewer/editor, can get data from some code generator, such as Ontology Parser. For now, it can only pass data to kg querier.")]),a._v(" "),e("li",[a._v("Input: string (sparql for now)")]),a._v(" "),e("li",[a._v("Output: string (sparql for now)")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("id: `card-codeeditor-${id}`,\nsourceLink: [], //\ntargetLink: [], \nmarginLeft: null, \nmarginTop: null, \nwidth: 500, \nheight: 300,\ninputData: {\n    'script': \"\",\n    'isFunc': false\n},\nkeep_in_vis_mode: false \n")])])]),e("h3",{attrs:{id:"kg-querier"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kg-querier"}},[a._v("#")]),a._v(" KG querier")]),a._v(" "),e("ul",[e("li",[a._v("Introduction: query data from knowledge graph")]),a._v(" "),e("li",[a._v("Input: SPARQL string  (CodeEditor)")]),a._v(" "),e("li",[a._v("Output: json format of dataframe (TableViewer)")])]),a._v(" "),e("h3",{attrs:{id:"ontology-parser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ontology-parser"}},[a._v("#")]),a._v(" Ontology Parser")]),a._v(" "),e("ul",[e("li",[a._v("Introduction: Ontology parser by taking linkml and vocabulary")]),a._v(" "),e("li",[a._v("Source: Online URL Loader")]),a._v(" "),e("li",[a._v("Target: [CodeEditor, KGQuerier]")]),a._v(" "),e("li",[a._v("Input: str")]),a._v(" "),e("li",[a._v("Output: str, SPARQL")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('id: `card-ontparser-${id}`,\nsourceLink: [], //\ntargetLink: [], \nmarginLeft: null, \nmarginTop: null, \nwidth: 500, \nheight: 300,\ninputData: {\n    linkml: null,\n    vocabulary: null\n},\n// selectedItems: [],\nloadingStatus: false,\ndata_ontology: [],\ndata_filter: [],\nkeep_in_vis_mode: false,\noutputData: ""\n')])])]),e("h2",{attrs:{id:"data-viewer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-viewer"}},[a._v("#")]),a._v(" Data Viewer")]),a._v(" "),e("h3",{attrs:{id:"tableviewer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tableviewer"}},[a._v("#")]),a._v(" TableViewer")]),a._v(" "),e("ul",[e("li",[a._v("Input:")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("{\n    data:{\n        sheet1: {\n            tableData:[\n                {\n                    column_value1:  'aaa',\n                    column_value2:  3\n                },{\n                    ...\n                }\n            ],\n            tableInfo:[{\n                label: column_label1,\n                type: str,\n                value: column_value1\n            },{\n                label: column_label2,\n                type: int,\n                value: column_value2\n            }]\n        },\n        sheet2: {\n            ...\n        }\n    },\n    tableNames:[sheet1, sheet2]\n}\n")])])]),e("h3",{attrs:{id:"bar-chart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bar-chart"}},[a._v("#")]),a._v(" Bar Chart")]),a._v(" "),e("ul",[e("li",[a._v("Introduction: Visualize the input data in a bar chart.")]),a._v(" "),e("li",[a._v("Input:")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("data: {\n    value: [\n        {attr1: '..', attr2: '..', attr3: '..'},\n        {attr1: '..', attr2: '..', attr3: '..'},\n        ...\n    ]\n}\n")])])]),e("ul",[e("li",[a._v("Output: Bar chart using VegaLite.")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);